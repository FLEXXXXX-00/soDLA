;buildInfoPackage: chisel3, version: 3.1.6, scalaVersion: 2.12.4, sbtVersion: 1.1.1, builtAtString: 2018-12-21 23:41:18.566, builtAtMillis: 1545435678566
circuit MulAddRecFNPipe : 
  module MulAddRecFNToRaw_preMul : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip op : UInt<2>, flip a : UInt<33>, flip b : UInt<33>, flip c : UInt<33>, mulAddA : UInt<23>, mulAddB : UInt<23>, mulAddC : UInt<46>, toPostMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<11>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<25>, bit0AlignedSigC : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node _T_12 = bits(io.a, 31, 22) @[rawFloatFromRecFN.scala 50:21]
    node _T_13 = bits(_T_12, 9, 7) @[rawFloatFromRecFN.scala 51:29]
    node _T_15 = eq(_T_13, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_16 = bits(_T_12, 9, 8) @[rawFloatFromRecFN.scala 52:29]
    node _T_18 = eq(_T_16, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<11>, sig : UInt<24>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_20 = bits(_T_12, 7, 7) @[rawFloatFromRecFN.scala 55:41]
    node _T_21 = and(_T_18, _T_20) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_21 @[rawFloatFromRecFN.scala 55:20]
    node _T_22 = bits(_T_12, 7, 7) @[rawFloatFromRecFN.scala 56:41]
    node _T_24 = eq(_T_22, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_25 = and(_T_18, _T_24) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_25 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_15 @[rawFloatFromRecFN.scala 57:20]
    node _T_26 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_26 @[rawFloatFromRecFN.scala 58:20]
    node _T_27 = cvt(_T_12) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_27 @[rawFloatFromRecFN.scala 59:20]
    node _T_30 = eq(_T_15, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node _T_31 = bits(io.a, 21, 0) @[rawFloatFromRecFN.scala 60:51]
    node _T_32 = cat(UInt<1>("h00"), _T_30) @[Cat.scala 30:58]
    node _T_33 = cat(_T_32, _T_31) @[Cat.scala 30:58]
    rawA.sig <= _T_33 @[rawFloatFromRecFN.scala 60:20]
    node _T_34 = bits(io.b, 31, 22) @[rawFloatFromRecFN.scala 50:21]
    node _T_35 = bits(_T_34, 9, 7) @[rawFloatFromRecFN.scala 51:29]
    node _T_37 = eq(_T_35, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_38 = bits(_T_34, 9, 8) @[rawFloatFromRecFN.scala 52:29]
    node _T_40 = eq(_T_38, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<11>, sig : UInt<24>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_42 = bits(_T_34, 7, 7) @[rawFloatFromRecFN.scala 55:41]
    node _T_43 = and(_T_40, _T_42) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_43 @[rawFloatFromRecFN.scala 55:20]
    node _T_44 = bits(_T_34, 7, 7) @[rawFloatFromRecFN.scala 56:41]
    node _T_46 = eq(_T_44, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_47 = and(_T_40, _T_46) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_47 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_37 @[rawFloatFromRecFN.scala 57:20]
    node _T_48 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_48 @[rawFloatFromRecFN.scala 58:20]
    node _T_49 = cvt(_T_34) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_49 @[rawFloatFromRecFN.scala 59:20]
    node _T_52 = eq(_T_37, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node _T_53 = bits(io.b, 21, 0) @[rawFloatFromRecFN.scala 60:51]
    node _T_54 = cat(UInt<1>("h00"), _T_52) @[Cat.scala 30:58]
    node _T_55 = cat(_T_54, _T_53) @[Cat.scala 30:58]
    rawB.sig <= _T_55 @[rawFloatFromRecFN.scala 60:20]
    node _T_56 = bits(io.c, 31, 22) @[rawFloatFromRecFN.scala 50:21]
    node _T_57 = bits(_T_56, 9, 7) @[rawFloatFromRecFN.scala 51:29]
    node _T_59 = eq(_T_57, UInt<1>("h00")) @[rawFloatFromRecFN.scala 51:54]
    node _T_60 = bits(_T_56, 9, 8) @[rawFloatFromRecFN.scala 52:29]
    node _T_62 = eq(_T_60, UInt<2>("h03")) @[rawFloatFromRecFN.scala 52:54]
    wire rawC : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<11>, sig : UInt<24>} @[rawFloatFromRecFN.scala 54:23]
    rawC is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_64 = bits(_T_56, 7, 7) @[rawFloatFromRecFN.scala 55:41]
    node _T_65 = and(_T_62, _T_64) @[rawFloatFromRecFN.scala 55:33]
    rawC.isNaN <= _T_65 @[rawFloatFromRecFN.scala 55:20]
    node _T_66 = bits(_T_56, 7, 7) @[rawFloatFromRecFN.scala 56:41]
    node _T_68 = eq(_T_66, UInt<1>("h00")) @[rawFloatFromRecFN.scala 56:36]
    node _T_69 = and(_T_62, _T_68) @[rawFloatFromRecFN.scala 56:33]
    rawC.isInf <= _T_69 @[rawFloatFromRecFN.scala 56:20]
    rawC.isZero <= _T_59 @[rawFloatFromRecFN.scala 57:20]
    node _T_70 = bits(io.c, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    rawC.sign <= _T_70 @[rawFloatFromRecFN.scala 58:20]
    node _T_71 = cvt(_T_56) @[rawFloatFromRecFN.scala 59:27]
    rawC.sExp <= _T_71 @[rawFloatFromRecFN.scala 59:20]
    node _T_74 = eq(_T_59, UInt<1>("h00")) @[rawFloatFromRecFN.scala 60:39]
    node _T_75 = bits(io.c, 21, 0) @[rawFloatFromRecFN.scala 60:51]
    node _T_76 = cat(UInt<1>("h00"), _T_74) @[Cat.scala 30:58]
    node _T_77 = cat(_T_76, _T_75) @[Cat.scala 30:58]
    rawC.sig <= _T_77 @[rawFloatFromRecFN.scala 60:20]
    node _T_78 = xor(rawA.sign, rawB.sign) @[MulAddRecFN.scala 98:30]
    node _T_79 = bits(io.op, 1, 1) @[MulAddRecFN.scala 98:49]
    node signProd = xor(_T_78, _T_79) @[MulAddRecFN.scala 98:42]
    node _T_80 = add(rawA.sExp, rawB.sExp) @[MulAddRecFN.scala 101:19]
    node _T_82 = add(_T_80, asSInt(UInt<10>("h021a"))) @[MulAddRecFN.scala 101:32]
    node _T_83 = tail(_T_82, 1) @[MulAddRecFN.scala 101:32]
    node sExpAlignedProd = asSInt(_T_83) @[MulAddRecFN.scala 101:32]
    node _T_84 = xor(signProd, rawC.sign) @[MulAddRecFN.scala 103:30]
    node _T_85 = bits(io.op, 0, 0) @[MulAddRecFN.scala 103:49]
    node doSubMags = xor(_T_84, _T_85) @[MulAddRecFN.scala 103:42]
    node _T_86 = sub(sExpAlignedProd, rawC.sExp) @[MulAddRecFN.scala 107:42]
    node _T_87 = tail(_T_86, 1) @[MulAddRecFN.scala 107:42]
    node sNatCAlignDist = asSInt(_T_87) @[MulAddRecFN.scala 107:42]
    node posNatCAlignDist = bits(sNatCAlignDist, 10, 0) @[MulAddRecFN.scala 108:42]
    node _T_88 = or(rawA.isZero, rawB.isZero) @[MulAddRecFN.scala 109:35]
    node _T_90 = lt(sNatCAlignDist, asSInt(UInt<1>("h00"))) @[MulAddRecFN.scala 109:69]
    node isMinCAlign = or(_T_88, _T_90) @[MulAddRecFN.scala 109:50]
    node _T_92 = eq(rawC.isZero, UInt<1>("h00")) @[MulAddRecFN.scala 111:9]
    node _T_94 = leq(posNatCAlignDist, UInt<5>("h017")) @[MulAddRecFN.scala 111:60]
    node _T_95 = or(isMinCAlign, _T_94) @[MulAddRecFN.scala 111:39]
    node CIsDominant = and(_T_92, _T_95) @[MulAddRecFN.scala 111:23]
    node _T_98 = lt(posNatCAlignDist, UInt<7>("h047")) @[MulAddRecFN.scala 115:34]
    node _T_99 = bits(posNatCAlignDist, 6, 0) @[MulAddRecFN.scala 116:33]
    node _T_101 = mux(_T_98, _T_99, UInt<7>("h047")) @[MulAddRecFN.scala 115:16]
    node CAlignDist = mux(isMinCAlign, UInt<1>("h00"), _T_101) @[MulAddRecFN.scala 113:12]
    node _T_102 = not(rawC.sig) @[MulAddRecFN.scala 121:28]
    node _T_103 = mux(doSubMags, _T_102, rawC.sig) @[MulAddRecFN.scala 121:16]
    node _T_104 = bits(doSubMags, 0, 0) @[Bitwise.scala 72:15]
    node _T_107 = mux(_T_104, UInt<51>("h07ffffffffffff"), UInt<51>("h00")) @[Bitwise.scala 72:12]
    node _T_108 = cat(_T_103, _T_107) @[Cat.scala 30:58]
    node _T_109 = asSInt(_T_108) @[MulAddRecFN.scala 123:11]
    node mainAlignedSigC = dshr(_T_109, CAlignDist) @[MulAddRecFN.scala 123:17]
    node _T_110 = shl(rawC.sig, 0) @[MulAddRecFN.scala 125:30]
    wire _T_114 : UInt<1>[6] @[primitives.scala 119:30]
    _T_114 is invalid @[primitives.scala 119:30]
    node _T_123 = bits(_T_110, 3, 0) @[primitives.scala 121:33]
    node _T_125 = neq(_T_123, UInt<1>("h00")) @[primitives.scala 121:54]
    _T_114[0] <= _T_125 @[primitives.scala 121:28]
    node _T_126 = bits(_T_110, 7, 4) @[primitives.scala 121:33]
    node _T_128 = neq(_T_126, UInt<1>("h00")) @[primitives.scala 121:54]
    _T_114[1] <= _T_128 @[primitives.scala 121:28]
    node _T_129 = bits(_T_110, 11, 8) @[primitives.scala 121:33]
    node _T_131 = neq(_T_129, UInt<1>("h00")) @[primitives.scala 121:54]
    _T_114[2] <= _T_131 @[primitives.scala 121:28]
    node _T_132 = bits(_T_110, 15, 12) @[primitives.scala 121:33]
    node _T_134 = neq(_T_132, UInt<1>("h00")) @[primitives.scala 121:54]
    _T_114[3] <= _T_134 @[primitives.scala 121:28]
    node _T_135 = bits(_T_110, 19, 16) @[primitives.scala 121:33]
    node _T_137 = neq(_T_135, UInt<1>("h00")) @[primitives.scala 121:54]
    _T_114[4] <= _T_137 @[primitives.scala 121:28]
    node _T_138 = bits(_T_110, 23, 20) @[primitives.scala 124:15]
    node _T_140 = neq(_T_138, UInt<1>("h00")) @[primitives.scala 124:57]
    _T_114[5] <= _T_140 @[primitives.scala 123:38]
    node _T_141 = cat(_T_114[2], _T_114[1]) @[primitives.scala 125:20]
    node _T_142 = cat(_T_141, _T_114[0]) @[primitives.scala 125:20]
    node _T_143 = cat(_T_114[5], _T_114[4]) @[primitives.scala 125:20]
    node _T_144 = cat(_T_143, _T_114[3]) @[primitives.scala 125:20]
    node _T_145 = cat(_T_144, _T_142) @[primitives.scala 125:20]
    node _T_146 = shr(CAlignDist, 2) @[MulAddRecFN.scala 127:28]
    node _T_148 = dshr(asSInt(UInt<33>("h0100000000")), _T_146) @[primitives.scala 77:58]
    node _T_149 = bits(_T_148, 19, 15) @[primitives.scala 79:22]
    node _T_150 = bits(_T_149, 3, 0) @[Bitwise.scala 109:18]
    node _T_151 = bits(_T_150, 1, 0) @[Bitwise.scala 109:18]
    node _T_152 = bits(_T_151, 0, 0) @[Bitwise.scala 109:18]
    node _T_153 = bits(_T_151, 1, 1) @[Bitwise.scala 109:44]
    node _T_154 = cat(_T_152, _T_153) @[Cat.scala 30:58]
    node _T_155 = bits(_T_150, 3, 2) @[Bitwise.scala 109:44]
    node _T_156 = bits(_T_155, 0, 0) @[Bitwise.scala 109:18]
    node _T_157 = bits(_T_155, 1, 1) @[Bitwise.scala 109:44]
    node _T_158 = cat(_T_156, _T_157) @[Cat.scala 30:58]
    node _T_159 = cat(_T_154, _T_158) @[Cat.scala 30:58]
    node _T_160 = bits(_T_149, 4, 4) @[Bitwise.scala 109:44]
    node _T_161 = cat(_T_159, _T_160) @[Cat.scala 30:58]
    node _T_162 = and(_T_145, _T_161) @[MulAddRecFN.scala 125:68]
    node reduced4CExtra = neq(_T_162, UInt<1>("h00")) @[MulAddRecFN.scala 133:11]
    node _T_164 = shr(mainAlignedSigC, 3) @[MulAddRecFN.scala 135:28]
    node _T_165 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 137:32]
    node _T_166 = not(_T_165) @[MulAddRecFN.scala 137:39]
    node _T_168 = eq(_T_166, UInt<1>("h00")) @[MulAddRecFN.scala 137:39]
    node _T_170 = eq(reduced4CExtra, UInt<1>("h00")) @[MulAddRecFN.scala 137:47]
    node _T_171 = and(_T_168, _T_170) @[MulAddRecFN.scala 137:44]
    node _T_172 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 138:32]
    node _T_174 = neq(_T_172, UInt<1>("h00")) @[MulAddRecFN.scala 138:39]
    node _T_175 = or(_T_174, reduced4CExtra) @[MulAddRecFN.scala 138:44]
    node _T_176 = mux(doSubMags, _T_171, _T_175) @[MulAddRecFN.scala 136:16]
    node _T_177 = asUInt(_T_164) @[Cat.scala 30:58]
    node alignedSigC = cat(_T_177, _T_176) @[Cat.scala 30:58]
    io.mulAddA <= rawA.sig @[MulAddRecFN.scala 144:16]
    io.mulAddB <= rawB.sig @[MulAddRecFN.scala 145:16]
    node _T_178 = bits(alignedSigC, 46, 1) @[MulAddRecFN.scala 146:30]
    io.mulAddC <= _T_178 @[MulAddRecFN.scala 146:16]
    node _T_179 = bits(rawA.sig, 21, 21) @[common.scala 81:56]
    node _T_181 = eq(_T_179, UInt<1>("h00")) @[common.scala 81:49]
    node _T_182 = and(rawA.isNaN, _T_181) @[common.scala 81:46]
    node _T_183 = bits(rawB.sig, 21, 21) @[common.scala 81:56]
    node _T_185 = eq(_T_183, UInt<1>("h00")) @[common.scala 81:49]
    node _T_186 = and(rawB.isNaN, _T_185) @[common.scala 81:46]
    node _T_187 = or(_T_182, _T_186) @[MulAddRecFN.scala 149:32]
    node _T_188 = bits(rawC.sig, 21, 21) @[common.scala 81:56]
    node _T_190 = eq(_T_188, UInt<1>("h00")) @[common.scala 81:49]
    node _T_191 = and(rawC.isNaN, _T_190) @[common.scala 81:46]
    node _T_192 = or(_T_187, _T_191) @[MulAddRecFN.scala 149:58]
    io.toPostMul.isSigNaNAny <= _T_192 @[MulAddRecFN.scala 148:30]
    node _T_193 = or(rawA.isNaN, rawB.isNaN) @[MulAddRecFN.scala 151:42]
    io.toPostMul.isNaNAOrB <= _T_193 @[MulAddRecFN.scala 151:28]
    io.toPostMul.isInfA <= rawA.isInf @[MulAddRecFN.scala 152:28]
    io.toPostMul.isZeroA <= rawA.isZero @[MulAddRecFN.scala 153:28]
    io.toPostMul.isInfB <= rawB.isInf @[MulAddRecFN.scala 154:28]
    io.toPostMul.isZeroB <= rawB.isZero @[MulAddRecFN.scala 155:28]
    io.toPostMul.signProd <= signProd @[MulAddRecFN.scala 156:28]
    io.toPostMul.isNaNC <= rawC.isNaN @[MulAddRecFN.scala 157:28]
    io.toPostMul.isInfC <= rawC.isInf @[MulAddRecFN.scala 158:28]
    io.toPostMul.isZeroC <= rawC.isZero @[MulAddRecFN.scala 159:28]
    node _T_195 = sub(sExpAlignedProd, asSInt(UInt<6>("h017"))) @[MulAddRecFN.scala 161:53]
    node _T_196 = tail(_T_195, 1) @[MulAddRecFN.scala 161:53]
    node _T_197 = asSInt(_T_196) @[MulAddRecFN.scala 161:53]
    node _T_198 = mux(CIsDominant, rawC.sExp, _T_197) @[MulAddRecFN.scala 161:12]
    io.toPostMul.sExpSum <= _T_198 @[MulAddRecFN.scala 160:28]
    io.toPostMul.doSubMags <= doSubMags @[MulAddRecFN.scala 162:28]
    io.toPostMul.CIsDominant <= CIsDominant @[MulAddRecFN.scala 163:30]
    node _T_199 = bits(CAlignDist, 4, 0) @[MulAddRecFN.scala 164:47]
    io.toPostMul.CDom_CAlignDist <= _T_199 @[MulAddRecFN.scala 164:34]
    node _T_200 = bits(alignedSigC, 71, 47) @[MulAddRecFN.scala 166:20]
    io.toPostMul.highAlignedSigC <= _T_200 @[MulAddRecFN.scala 165:34]
    node _T_201 = bits(alignedSigC, 0, 0) @[MulAddRecFN.scala 167:48]
    io.toPostMul.bit0AlignedSigC <= _T_201 @[MulAddRecFN.scala 167:34]
    
  module MulAddRecFNToRaw_postMul : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip fromPreMul : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<11>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<25>, bit0AlignedSigC : UInt<1>}, flip mulAddResult : UInt<47>, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<11>, sig : UInt<26>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[MulAddRecFN.scala 188:45]
    node CDom_sign = xor(io.fromPreMul.signProd, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 192:42]
    node _T_10 = bits(io.mulAddResult, 46, 46) @[MulAddRecFN.scala 194:32]
    node _T_12 = add(io.fromPreMul.highAlignedSigC, UInt<1>("h01")) @[MulAddRecFN.scala 195:47]
    node _T_13 = tail(_T_12, 1) @[MulAddRecFN.scala 195:47]
    node _T_14 = mux(_T_10, _T_13, io.fromPreMul.highAlignedSigC) @[MulAddRecFN.scala 194:16]
    node _T_15 = bits(io.mulAddResult, 45, 0) @[MulAddRecFN.scala 198:28]
    node _T_16 = cat(_T_14, _T_15) @[Cat.scala 30:58]
    node sigSum = cat(_T_16, io.fromPreMul.bit0AlignedSigC) @[Cat.scala 30:58]
    node _T_17 = cvt(io.fromPreMul.doSubMags) @[MulAddRecFN.scala 205:69]
    node _T_18 = sub(io.fromPreMul.sExpSum, _T_17) @[MulAddRecFN.scala 205:43]
    node _T_19 = tail(_T_18, 1) @[MulAddRecFN.scala 205:43]
    node CDom_sExp = asSInt(_T_19) @[MulAddRecFN.scala 205:43]
    node _T_20 = bits(sigSum, 71, 24) @[MulAddRecFN.scala 208:20]
    node _T_21 = not(_T_20) @[MulAddRecFN.scala 208:13]
    node _T_23 = bits(io.fromPreMul.highAlignedSigC, 24, 23) @[MulAddRecFN.scala 211:46]
    node _T_24 = bits(sigSum, 69, 25) @[MulAddRecFN.scala 212:23]
    node _T_25 = cat(UInt<1>("h00"), _T_23) @[Cat.scala 30:58]
    node _T_26 = cat(_T_25, _T_24) @[Cat.scala 30:58]
    node CDom_absSigSum = mux(io.fromPreMul.doSubMags, _T_21, _T_26) @[MulAddRecFN.scala 207:12]
    node _T_27 = bits(sigSum, 23, 1) @[MulAddRecFN.scala 217:21]
    node _T_28 = not(_T_27) @[MulAddRecFN.scala 217:14]
    node _T_30 = neq(_T_28, UInt<1>("h00")) @[MulAddRecFN.scala 217:36]
    node _T_31 = bits(sigSum, 24, 1) @[MulAddRecFN.scala 218:19]
    node _T_33 = neq(_T_31, UInt<1>("h00")) @[MulAddRecFN.scala 218:37]
    node CDom_absSigSumExtra = mux(io.fromPreMul.doSubMags, _T_30, _T_33) @[MulAddRecFN.scala 216:12]
    node _T_34 = dshl(CDom_absSigSum, io.fromPreMul.CDom_CAlignDist) @[MulAddRecFN.scala 221:24]
    node CDom_mainSig = bits(_T_34, 47, 20) @[MulAddRecFN.scala 221:56]
    node _T_35 = bits(CDom_absSigSum, 22, 0) @[MulAddRecFN.scala 224:36]
    node _T_36 = shl(_T_35, 0) @[MulAddRecFN.scala 224:53]
    wire _T_40 : UInt<1>[6] @[primitives.scala 119:30]
    _T_40 is invalid @[primitives.scala 119:30]
    node _T_49 = bits(_T_36, 3, 0) @[primitives.scala 121:33]
    node _T_51 = neq(_T_49, UInt<1>("h00")) @[primitives.scala 121:54]
    _T_40[0] <= _T_51 @[primitives.scala 121:28]
    node _T_52 = bits(_T_36, 7, 4) @[primitives.scala 121:33]
    node _T_54 = neq(_T_52, UInt<1>("h00")) @[primitives.scala 121:54]
    _T_40[1] <= _T_54 @[primitives.scala 121:28]
    node _T_55 = bits(_T_36, 11, 8) @[primitives.scala 121:33]
    node _T_57 = neq(_T_55, UInt<1>("h00")) @[primitives.scala 121:54]
    _T_40[2] <= _T_57 @[primitives.scala 121:28]
    node _T_58 = bits(_T_36, 15, 12) @[primitives.scala 121:33]
    node _T_60 = neq(_T_58, UInt<1>("h00")) @[primitives.scala 121:54]
    _T_40[3] <= _T_60 @[primitives.scala 121:28]
    node _T_61 = bits(_T_36, 19, 16) @[primitives.scala 121:33]
    node _T_63 = neq(_T_61, UInt<1>("h00")) @[primitives.scala 121:54]
    _T_40[4] <= _T_63 @[primitives.scala 121:28]
    node _T_64 = bits(_T_36, 22, 20) @[primitives.scala 124:15]
    node _T_66 = neq(_T_64, UInt<1>("h00")) @[primitives.scala 124:57]
    _T_40[5] <= _T_66 @[primitives.scala 123:38]
    node _T_67 = cat(_T_40[2], _T_40[1]) @[primitives.scala 125:20]
    node _T_68 = cat(_T_67, _T_40[0]) @[primitives.scala 125:20]
    node _T_69 = cat(_T_40[5], _T_40[4]) @[primitives.scala 125:20]
    node _T_70 = cat(_T_69, _T_40[3]) @[primitives.scala 125:20]
    node _T_71 = cat(_T_70, _T_68) @[primitives.scala 125:20]
    node _T_72 = shr(io.fromPreMul.CDom_CAlignDist, 2) @[MulAddRecFN.scala 225:51]
    node _T_73 = not(_T_72) @[primitives.scala 51:21]
    node _T_75 = dshr(asSInt(UInt<9>("h0100")), _T_73) @[primitives.scala 77:58]
    node _T_76 = bits(_T_75, 5, 1) @[primitives.scala 79:22]
    node _T_77 = bits(_T_76, 3, 0) @[Bitwise.scala 109:18]
    node _T_78 = bits(_T_77, 1, 0) @[Bitwise.scala 109:18]
    node _T_79 = bits(_T_78, 0, 0) @[Bitwise.scala 109:18]
    node _T_80 = bits(_T_78, 1, 1) @[Bitwise.scala 109:44]
    node _T_81 = cat(_T_79, _T_80) @[Cat.scala 30:58]
    node _T_82 = bits(_T_77, 3, 2) @[Bitwise.scala 109:44]
    node _T_83 = bits(_T_82, 0, 0) @[Bitwise.scala 109:18]
    node _T_84 = bits(_T_82, 1, 1) @[Bitwise.scala 109:44]
    node _T_85 = cat(_T_83, _T_84) @[Cat.scala 30:58]
    node _T_86 = cat(_T_81, _T_85) @[Cat.scala 30:58]
    node _T_87 = bits(_T_76, 4, 4) @[Bitwise.scala 109:44]
    node _T_88 = cat(_T_86, _T_87) @[Cat.scala 30:58]
    node _T_89 = and(_T_71, _T_88) @[MulAddRecFN.scala 224:72]
    node CDom_reduced4SigExtra = neq(_T_89, UInt<1>("h00")) @[MulAddRecFN.scala 225:73]
    node _T_91 = shr(CDom_mainSig, 3) @[MulAddRecFN.scala 227:25]
    node _T_92 = bits(CDom_mainSig, 2, 0) @[MulAddRecFN.scala 228:25]
    node _T_94 = neq(_T_92, UInt<1>("h00")) @[MulAddRecFN.scala 228:32]
    node _T_95 = or(_T_94, CDom_reduced4SigExtra) @[MulAddRecFN.scala 228:36]
    node _T_96 = or(_T_95, CDom_absSigSumExtra) @[MulAddRecFN.scala 228:61]
    node CDom_sig = cat(_T_91, _T_96) @[Cat.scala 30:58]
    node notCDom_signSigSum = bits(sigSum, 49, 49) @[MulAddRecFN.scala 234:36]
    node _T_97 = bits(sigSum, 48, 0) @[MulAddRecFN.scala 237:20]
    node _T_98 = not(_T_97) @[MulAddRecFN.scala 237:13]
    node _T_99 = bits(sigSum, 48, 0) @[MulAddRecFN.scala 238:19]
    node _T_100 = add(_T_99, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 238:41]
    node _T_101 = tail(_T_100, 1) @[MulAddRecFN.scala 238:41]
    node notCDom_absSigSum = mux(notCDom_signSigSum, _T_98, _T_101) @[MulAddRecFN.scala 236:12]
    wire _T_105 : UInt<1>[25] @[primitives.scala 102:30]
    _T_105 is invalid @[primitives.scala 102:30]
    node _T_133 = bits(notCDom_absSigSum, 1, 0) @[primitives.scala 104:33]
    node _T_135 = neq(_T_133, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[0] <= _T_135 @[primitives.scala 104:28]
    node _T_136 = bits(notCDom_absSigSum, 3, 2) @[primitives.scala 104:33]
    node _T_138 = neq(_T_136, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[1] <= _T_138 @[primitives.scala 104:28]
    node _T_139 = bits(notCDom_absSigSum, 5, 4) @[primitives.scala 104:33]
    node _T_141 = neq(_T_139, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[2] <= _T_141 @[primitives.scala 104:28]
    node _T_142 = bits(notCDom_absSigSum, 7, 6) @[primitives.scala 104:33]
    node _T_144 = neq(_T_142, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[3] <= _T_144 @[primitives.scala 104:28]
    node _T_145 = bits(notCDom_absSigSum, 9, 8) @[primitives.scala 104:33]
    node _T_147 = neq(_T_145, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[4] <= _T_147 @[primitives.scala 104:28]
    node _T_148 = bits(notCDom_absSigSum, 11, 10) @[primitives.scala 104:33]
    node _T_150 = neq(_T_148, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[5] <= _T_150 @[primitives.scala 104:28]
    node _T_151 = bits(notCDom_absSigSum, 13, 12) @[primitives.scala 104:33]
    node _T_153 = neq(_T_151, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[6] <= _T_153 @[primitives.scala 104:28]
    node _T_154 = bits(notCDom_absSigSum, 15, 14) @[primitives.scala 104:33]
    node _T_156 = neq(_T_154, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[7] <= _T_156 @[primitives.scala 104:28]
    node _T_157 = bits(notCDom_absSigSum, 17, 16) @[primitives.scala 104:33]
    node _T_159 = neq(_T_157, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[8] <= _T_159 @[primitives.scala 104:28]
    node _T_160 = bits(notCDom_absSigSum, 19, 18) @[primitives.scala 104:33]
    node _T_162 = neq(_T_160, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[9] <= _T_162 @[primitives.scala 104:28]
    node _T_163 = bits(notCDom_absSigSum, 21, 20) @[primitives.scala 104:33]
    node _T_165 = neq(_T_163, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[10] <= _T_165 @[primitives.scala 104:28]
    node _T_166 = bits(notCDom_absSigSum, 23, 22) @[primitives.scala 104:33]
    node _T_168 = neq(_T_166, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[11] <= _T_168 @[primitives.scala 104:28]
    node _T_169 = bits(notCDom_absSigSum, 25, 24) @[primitives.scala 104:33]
    node _T_171 = neq(_T_169, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[12] <= _T_171 @[primitives.scala 104:28]
    node _T_172 = bits(notCDom_absSigSum, 27, 26) @[primitives.scala 104:33]
    node _T_174 = neq(_T_172, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[13] <= _T_174 @[primitives.scala 104:28]
    node _T_175 = bits(notCDom_absSigSum, 29, 28) @[primitives.scala 104:33]
    node _T_177 = neq(_T_175, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[14] <= _T_177 @[primitives.scala 104:28]
    node _T_178 = bits(notCDom_absSigSum, 31, 30) @[primitives.scala 104:33]
    node _T_180 = neq(_T_178, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[15] <= _T_180 @[primitives.scala 104:28]
    node _T_181 = bits(notCDom_absSigSum, 33, 32) @[primitives.scala 104:33]
    node _T_183 = neq(_T_181, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[16] <= _T_183 @[primitives.scala 104:28]
    node _T_184 = bits(notCDom_absSigSum, 35, 34) @[primitives.scala 104:33]
    node _T_186 = neq(_T_184, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[17] <= _T_186 @[primitives.scala 104:28]
    node _T_187 = bits(notCDom_absSigSum, 37, 36) @[primitives.scala 104:33]
    node _T_189 = neq(_T_187, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[18] <= _T_189 @[primitives.scala 104:28]
    node _T_190 = bits(notCDom_absSigSum, 39, 38) @[primitives.scala 104:33]
    node _T_192 = neq(_T_190, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[19] <= _T_192 @[primitives.scala 104:28]
    node _T_193 = bits(notCDom_absSigSum, 41, 40) @[primitives.scala 104:33]
    node _T_195 = neq(_T_193, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[20] <= _T_195 @[primitives.scala 104:28]
    node _T_196 = bits(notCDom_absSigSum, 43, 42) @[primitives.scala 104:33]
    node _T_198 = neq(_T_196, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[21] <= _T_198 @[primitives.scala 104:28]
    node _T_199 = bits(notCDom_absSigSum, 45, 44) @[primitives.scala 104:33]
    node _T_201 = neq(_T_199, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[22] <= _T_201 @[primitives.scala 104:28]
    node _T_202 = bits(notCDom_absSigSum, 47, 46) @[primitives.scala 104:33]
    node _T_204 = neq(_T_202, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_105[23] <= _T_204 @[primitives.scala 104:28]
    node _T_205 = bits(notCDom_absSigSum, 48, 48) @[primitives.scala 107:15]
    node _T_207 = neq(_T_205, UInt<1>("h00")) @[primitives.scala 107:57]
    _T_105[24] <= _T_207 @[primitives.scala 106:38]
    node _T_208 = cat(_T_105[2], _T_105[1]) @[primitives.scala 108:20]
    node _T_209 = cat(_T_208, _T_105[0]) @[primitives.scala 108:20]
    node _T_210 = cat(_T_105[5], _T_105[4]) @[primitives.scala 108:20]
    node _T_211 = cat(_T_210, _T_105[3]) @[primitives.scala 108:20]
    node _T_212 = cat(_T_211, _T_209) @[primitives.scala 108:20]
    node _T_213 = cat(_T_105[8], _T_105[7]) @[primitives.scala 108:20]
    node _T_214 = cat(_T_213, _T_105[6]) @[primitives.scala 108:20]
    node _T_215 = cat(_T_105[11], _T_105[10]) @[primitives.scala 108:20]
    node _T_216 = cat(_T_215, _T_105[9]) @[primitives.scala 108:20]
    node _T_217 = cat(_T_216, _T_214) @[primitives.scala 108:20]
    node _T_218 = cat(_T_217, _T_212) @[primitives.scala 108:20]
    node _T_219 = cat(_T_105[14], _T_105[13]) @[primitives.scala 108:20]
    node _T_220 = cat(_T_219, _T_105[12]) @[primitives.scala 108:20]
    node _T_221 = cat(_T_105[17], _T_105[16]) @[primitives.scala 108:20]
    node _T_222 = cat(_T_221, _T_105[15]) @[primitives.scala 108:20]
    node _T_223 = cat(_T_222, _T_220) @[primitives.scala 108:20]
    node _T_224 = cat(_T_105[20], _T_105[19]) @[primitives.scala 108:20]
    node _T_225 = cat(_T_224, _T_105[18]) @[primitives.scala 108:20]
    node _T_226 = cat(_T_105[22], _T_105[21]) @[primitives.scala 108:20]
    node _T_227 = cat(_T_105[24], _T_105[23]) @[primitives.scala 108:20]
    node _T_228 = cat(_T_227, _T_226) @[primitives.scala 108:20]
    node _T_229 = cat(_T_228, _T_225) @[primitives.scala 108:20]
    node _T_230 = cat(_T_229, _T_223) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum = cat(_T_230, _T_218) @[primitives.scala 108:20]
    node _T_231 = bits(notCDom_reduced2AbsSigSum, 15, 0) @[Bitwise.scala 109:18]
    node _T_234 = shl(UInt<8>("h0ff"), 8) @[Bitwise.scala 102:47]
    node _T_235 = xor(UInt<16>("h0ffff"), _T_234) @[Bitwise.scala 102:21]
    node _T_236 = shr(_T_231, 8) @[Bitwise.scala 103:21]
    node _T_237 = and(_T_236, _T_235) @[Bitwise.scala 103:31]
    node _T_238 = bits(_T_231, 7, 0) @[Bitwise.scala 103:46]
    node _T_239 = shl(_T_238, 8) @[Bitwise.scala 103:65]
    node _T_240 = not(_T_235) @[Bitwise.scala 103:77]
    node _T_241 = and(_T_239, _T_240) @[Bitwise.scala 103:75]
    node _T_242 = or(_T_237, _T_241) @[Bitwise.scala 103:39]
    node _T_243 = bits(_T_235, 11, 0) @[Bitwise.scala 102:28]
    node _T_244 = shl(_T_243, 4) @[Bitwise.scala 102:47]
    node _T_245 = xor(_T_235, _T_244) @[Bitwise.scala 102:21]
    node _T_246 = shr(_T_242, 4) @[Bitwise.scala 103:21]
    node _T_247 = and(_T_246, _T_245) @[Bitwise.scala 103:31]
    node _T_248 = bits(_T_242, 11, 0) @[Bitwise.scala 103:46]
    node _T_249 = shl(_T_248, 4) @[Bitwise.scala 103:65]
    node _T_250 = not(_T_245) @[Bitwise.scala 103:77]
    node _T_251 = and(_T_249, _T_250) @[Bitwise.scala 103:75]
    node _T_252 = or(_T_247, _T_251) @[Bitwise.scala 103:39]
    node _T_253 = bits(_T_245, 13, 0) @[Bitwise.scala 102:28]
    node _T_254 = shl(_T_253, 2) @[Bitwise.scala 102:47]
    node _T_255 = xor(_T_245, _T_254) @[Bitwise.scala 102:21]
    node _T_256 = shr(_T_252, 2) @[Bitwise.scala 103:21]
    node _T_257 = and(_T_256, _T_255) @[Bitwise.scala 103:31]
    node _T_258 = bits(_T_252, 13, 0) @[Bitwise.scala 103:46]
    node _T_259 = shl(_T_258, 2) @[Bitwise.scala 103:65]
    node _T_260 = not(_T_255) @[Bitwise.scala 103:77]
    node _T_261 = and(_T_259, _T_260) @[Bitwise.scala 103:75]
    node _T_262 = or(_T_257, _T_261) @[Bitwise.scala 103:39]
    node _T_263 = bits(_T_255, 14, 0) @[Bitwise.scala 102:28]
    node _T_264 = shl(_T_263, 1) @[Bitwise.scala 102:47]
    node _T_265 = xor(_T_255, _T_264) @[Bitwise.scala 102:21]
    node _T_266 = shr(_T_262, 1) @[Bitwise.scala 103:21]
    node _T_267 = and(_T_266, _T_265) @[Bitwise.scala 103:31]
    node _T_268 = bits(_T_262, 14, 0) @[Bitwise.scala 103:46]
    node _T_269 = shl(_T_268, 1) @[Bitwise.scala 103:65]
    node _T_270 = not(_T_265) @[Bitwise.scala 103:77]
    node _T_271 = and(_T_269, _T_270) @[Bitwise.scala 103:75]
    node _T_272 = or(_T_267, _T_271) @[Bitwise.scala 103:39]
    node _T_273 = bits(notCDom_reduced2AbsSigSum, 24, 16) @[Bitwise.scala 109:44]
    node _T_274 = bits(_T_273, 7, 0) @[Bitwise.scala 109:18]
    node _T_277 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_278 = xor(UInt<8>("h0ff"), _T_277) @[Bitwise.scala 102:21]
    node _T_279 = shr(_T_274, 4) @[Bitwise.scala 103:21]
    node _T_280 = and(_T_279, _T_278) @[Bitwise.scala 103:31]
    node _T_281 = bits(_T_274, 3, 0) @[Bitwise.scala 103:46]
    node _T_282 = shl(_T_281, 4) @[Bitwise.scala 103:65]
    node _T_283 = not(_T_278) @[Bitwise.scala 103:77]
    node _T_284 = and(_T_282, _T_283) @[Bitwise.scala 103:75]
    node _T_285 = or(_T_280, _T_284) @[Bitwise.scala 103:39]
    node _T_286 = bits(_T_278, 5, 0) @[Bitwise.scala 102:28]
    node _T_287 = shl(_T_286, 2) @[Bitwise.scala 102:47]
    node _T_288 = xor(_T_278, _T_287) @[Bitwise.scala 102:21]
    node _T_289 = shr(_T_285, 2) @[Bitwise.scala 103:21]
    node _T_290 = and(_T_289, _T_288) @[Bitwise.scala 103:31]
    node _T_291 = bits(_T_285, 5, 0) @[Bitwise.scala 103:46]
    node _T_292 = shl(_T_291, 2) @[Bitwise.scala 103:65]
    node _T_293 = not(_T_288) @[Bitwise.scala 103:77]
    node _T_294 = and(_T_292, _T_293) @[Bitwise.scala 103:75]
    node _T_295 = or(_T_290, _T_294) @[Bitwise.scala 103:39]
    node _T_296 = bits(_T_288, 6, 0) @[Bitwise.scala 102:28]
    node _T_297 = shl(_T_296, 1) @[Bitwise.scala 102:47]
    node _T_298 = xor(_T_288, _T_297) @[Bitwise.scala 102:21]
    node _T_299 = shr(_T_295, 1) @[Bitwise.scala 103:21]
    node _T_300 = and(_T_299, _T_298) @[Bitwise.scala 103:31]
    node _T_301 = bits(_T_295, 6, 0) @[Bitwise.scala 103:46]
    node _T_302 = shl(_T_301, 1) @[Bitwise.scala 103:65]
    node _T_303 = not(_T_298) @[Bitwise.scala 103:77]
    node _T_304 = and(_T_302, _T_303) @[Bitwise.scala 103:75]
    node _T_305 = or(_T_300, _T_304) @[Bitwise.scala 103:39]
    node _T_306 = bits(_T_273, 8, 8) @[Bitwise.scala 109:44]
    node _T_307 = cat(_T_305, _T_306) @[Cat.scala 30:58]
    node _T_308 = cat(_T_272, _T_307) @[Cat.scala 30:58]
    node _T_309 = bits(_T_308, 0, 0) @[OneHot.scala 39:40]
    node _T_310 = bits(_T_308, 1, 1) @[OneHot.scala 39:40]
    node _T_311 = bits(_T_308, 2, 2) @[OneHot.scala 39:40]
    node _T_312 = bits(_T_308, 3, 3) @[OneHot.scala 39:40]
    node _T_313 = bits(_T_308, 4, 4) @[OneHot.scala 39:40]
    node _T_314 = bits(_T_308, 5, 5) @[OneHot.scala 39:40]
    node _T_315 = bits(_T_308, 6, 6) @[OneHot.scala 39:40]
    node _T_316 = bits(_T_308, 7, 7) @[OneHot.scala 39:40]
    node _T_317 = bits(_T_308, 8, 8) @[OneHot.scala 39:40]
    node _T_318 = bits(_T_308, 9, 9) @[OneHot.scala 39:40]
    node _T_319 = bits(_T_308, 10, 10) @[OneHot.scala 39:40]
    node _T_320 = bits(_T_308, 11, 11) @[OneHot.scala 39:40]
    node _T_321 = bits(_T_308, 12, 12) @[OneHot.scala 39:40]
    node _T_322 = bits(_T_308, 13, 13) @[OneHot.scala 39:40]
    node _T_323 = bits(_T_308, 14, 14) @[OneHot.scala 39:40]
    node _T_324 = bits(_T_308, 15, 15) @[OneHot.scala 39:40]
    node _T_325 = bits(_T_308, 16, 16) @[OneHot.scala 39:40]
    node _T_326 = bits(_T_308, 17, 17) @[OneHot.scala 39:40]
    node _T_327 = bits(_T_308, 18, 18) @[OneHot.scala 39:40]
    node _T_328 = bits(_T_308, 19, 19) @[OneHot.scala 39:40]
    node _T_329 = bits(_T_308, 20, 20) @[OneHot.scala 39:40]
    node _T_330 = bits(_T_308, 21, 21) @[OneHot.scala 39:40]
    node _T_331 = bits(_T_308, 22, 22) @[OneHot.scala 39:40]
    node _T_332 = bits(_T_308, 23, 23) @[OneHot.scala 39:40]
    node _T_333 = bits(_T_308, 24, 24) @[OneHot.scala 39:40]
    node _T_359 = mux(_T_332, UInt<5>("h017"), UInt<5>("h018")) @[Mux.scala 31:69]
    node _T_360 = mux(_T_331, UInt<5>("h016"), _T_359) @[Mux.scala 31:69]
    node _T_361 = mux(_T_330, UInt<5>("h015"), _T_360) @[Mux.scala 31:69]
    node _T_362 = mux(_T_329, UInt<5>("h014"), _T_361) @[Mux.scala 31:69]
    node _T_363 = mux(_T_328, UInt<5>("h013"), _T_362) @[Mux.scala 31:69]
    node _T_364 = mux(_T_327, UInt<5>("h012"), _T_363) @[Mux.scala 31:69]
    node _T_365 = mux(_T_326, UInt<5>("h011"), _T_364) @[Mux.scala 31:69]
    node _T_366 = mux(_T_325, UInt<5>("h010"), _T_365) @[Mux.scala 31:69]
    node _T_367 = mux(_T_324, UInt<4>("h0f"), _T_366) @[Mux.scala 31:69]
    node _T_368 = mux(_T_323, UInt<4>("h0e"), _T_367) @[Mux.scala 31:69]
    node _T_369 = mux(_T_322, UInt<4>("h0d"), _T_368) @[Mux.scala 31:69]
    node _T_370 = mux(_T_321, UInt<4>("h0c"), _T_369) @[Mux.scala 31:69]
    node _T_371 = mux(_T_320, UInt<4>("h0b"), _T_370) @[Mux.scala 31:69]
    node _T_372 = mux(_T_319, UInt<4>("h0a"), _T_371) @[Mux.scala 31:69]
    node _T_373 = mux(_T_318, UInt<4>("h09"), _T_372) @[Mux.scala 31:69]
    node _T_374 = mux(_T_317, UInt<4>("h08"), _T_373) @[Mux.scala 31:69]
    node _T_375 = mux(_T_316, UInt<3>("h07"), _T_374) @[Mux.scala 31:69]
    node _T_376 = mux(_T_315, UInt<3>("h06"), _T_375) @[Mux.scala 31:69]
    node _T_377 = mux(_T_314, UInt<3>("h05"), _T_376) @[Mux.scala 31:69]
    node _T_378 = mux(_T_313, UInt<3>("h04"), _T_377) @[Mux.scala 31:69]
    node _T_379 = mux(_T_312, UInt<2>("h03"), _T_378) @[Mux.scala 31:69]
    node _T_380 = mux(_T_311, UInt<2>("h02"), _T_379) @[Mux.scala 31:69]
    node _T_381 = mux(_T_310, UInt<1>("h01"), _T_380) @[Mux.scala 31:69]
    node notCDom_normDistReduced2 = mux(_T_309, UInt<1>("h00"), _T_381) @[Mux.scala 31:69]
    node notCDom_nearNormDist = shl(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 242:56]
    node _T_382 = cvt(notCDom_nearNormDist) @[MulAddRecFN.scala 243:69]
    node _T_383 = sub(io.fromPreMul.sExpSum, _T_382) @[MulAddRecFN.scala 243:46]
    node _T_384 = tail(_T_383, 1) @[MulAddRecFN.scala 243:46]
    node notCDom_sExp = asSInt(_T_384) @[MulAddRecFN.scala 243:46]
    node _T_385 = dshl(notCDom_absSigSum, notCDom_nearNormDist) @[MulAddRecFN.scala 245:27]
    node notCDom_mainSig = bits(_T_385, 49, 22) @[MulAddRecFN.scala 245:50]
    node _T_386 = bits(notCDom_reduced2AbsSigSum, 11, 0) @[MulAddRecFN.scala 249:39]
    node _T_387 = shl(_T_386, 1) @[MulAddRecFN.scala 249:55]
    wire _T_391 : UInt<1>[7] @[primitives.scala 102:30]
    _T_391 is invalid @[primitives.scala 102:30]
    node _T_401 = bits(_T_387, 1, 0) @[primitives.scala 104:33]
    node _T_403 = neq(_T_401, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_391[0] <= _T_403 @[primitives.scala 104:28]
    node _T_404 = bits(_T_387, 3, 2) @[primitives.scala 104:33]
    node _T_406 = neq(_T_404, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_391[1] <= _T_406 @[primitives.scala 104:28]
    node _T_407 = bits(_T_387, 5, 4) @[primitives.scala 104:33]
    node _T_409 = neq(_T_407, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_391[2] <= _T_409 @[primitives.scala 104:28]
    node _T_410 = bits(_T_387, 7, 6) @[primitives.scala 104:33]
    node _T_412 = neq(_T_410, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_391[3] <= _T_412 @[primitives.scala 104:28]
    node _T_413 = bits(_T_387, 9, 8) @[primitives.scala 104:33]
    node _T_415 = neq(_T_413, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_391[4] <= _T_415 @[primitives.scala 104:28]
    node _T_416 = bits(_T_387, 11, 10) @[primitives.scala 104:33]
    node _T_418 = neq(_T_416, UInt<1>("h00")) @[primitives.scala 104:54]
    _T_391[5] <= _T_418 @[primitives.scala 104:28]
    node _T_419 = bits(_T_387, 12, 12) @[primitives.scala 107:15]
    node _T_421 = neq(_T_419, UInt<1>("h00")) @[primitives.scala 107:57]
    _T_391[6] <= _T_421 @[primitives.scala 106:38]
    node _T_422 = cat(_T_391[2], _T_391[1]) @[primitives.scala 108:20]
    node _T_423 = cat(_T_422, _T_391[0]) @[primitives.scala 108:20]
    node _T_424 = cat(_T_391[4], _T_391[3]) @[primitives.scala 108:20]
    node _T_425 = cat(_T_391[6], _T_391[5]) @[primitives.scala 108:20]
    node _T_426 = cat(_T_425, _T_424) @[primitives.scala 108:20]
    node _T_427 = cat(_T_426, _T_423) @[primitives.scala 108:20]
    node _T_428 = shr(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 250:46]
    node _T_429 = not(_T_428) @[primitives.scala 51:21]
    node _T_431 = dshr(asSInt(UInt<17>("h010000")), _T_429) @[primitives.scala 77:58]
    node _T_432 = bits(_T_431, 6, 1) @[primitives.scala 79:22]
    node _T_433 = bits(_T_432, 3, 0) @[Bitwise.scala 109:18]
    node _T_434 = bits(_T_433, 1, 0) @[Bitwise.scala 109:18]
    node _T_435 = bits(_T_434, 0, 0) @[Bitwise.scala 109:18]
    node _T_436 = bits(_T_434, 1, 1) @[Bitwise.scala 109:44]
    node _T_437 = cat(_T_435, _T_436) @[Cat.scala 30:58]
    node _T_438 = bits(_T_433, 3, 2) @[Bitwise.scala 109:44]
    node _T_439 = bits(_T_438, 0, 0) @[Bitwise.scala 109:18]
    node _T_440 = bits(_T_438, 1, 1) @[Bitwise.scala 109:44]
    node _T_441 = cat(_T_439, _T_440) @[Cat.scala 30:58]
    node _T_442 = cat(_T_437, _T_441) @[Cat.scala 30:58]
    node _T_443 = bits(_T_432, 5, 4) @[Bitwise.scala 109:44]
    node _T_444 = bits(_T_443, 0, 0) @[Bitwise.scala 109:18]
    node _T_445 = bits(_T_443, 1, 1) @[Bitwise.scala 109:44]
    node _T_446 = cat(_T_444, _T_445) @[Cat.scala 30:58]
    node _T_447 = cat(_T_442, _T_446) @[Cat.scala 30:58]
    node _T_448 = and(_T_427, _T_447) @[MulAddRecFN.scala 249:78]
    node notCDom_reduced4SigExtra = neq(_T_448, UInt<1>("h00")) @[MulAddRecFN.scala 251:11]
    node _T_450 = shr(notCDom_mainSig, 3) @[MulAddRecFN.scala 253:28]
    node _T_451 = bits(notCDom_mainSig, 2, 0) @[MulAddRecFN.scala 254:28]
    node _T_453 = neq(_T_451, UInt<1>("h00")) @[MulAddRecFN.scala 254:35]
    node _T_454 = or(_T_453, notCDom_reduced4SigExtra) @[MulAddRecFN.scala 254:39]
    node notCDom_sig = cat(_T_450, _T_454) @[Cat.scala 30:58]
    node _T_455 = bits(notCDom_sig, 25, 24) @[MulAddRecFN.scala 257:21]
    node notCDom_completeCancellation = eq(_T_455, UInt<1>("h00")) @[MulAddRecFN.scala 257:50]
    node _T_457 = xor(io.fromPreMul.signProd, notCDom_signSigSum) @[MulAddRecFN.scala 261:36]
    node notCDom_sign = mux(notCDom_completeCancellation, roundingMode_min, _T_457) @[MulAddRecFN.scala 259:12]
    node notNaN_isInfProd = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 266:49]
    node notNaN_isInfOut = or(notNaN_isInfProd, io.fromPreMul.isInfC) @[MulAddRecFN.scala 267:44]
    node _T_458 = or(io.fromPreMul.isZeroA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 269:32]
    node notNaN_addZeros = and(_T_458, io.fromPreMul.isZeroC) @[MulAddRecFN.scala 269:58]
    node _T_459 = and(io.fromPreMul.isInfA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 274:31]
    node _T_460 = or(io.fromPreMul.isSigNaNAny, _T_459) @[MulAddRecFN.scala 273:35]
    node _T_461 = and(io.fromPreMul.isZeroA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 275:32]
    node _T_462 = or(_T_460, _T_461) @[MulAddRecFN.scala 274:57]
    node _T_464 = eq(io.fromPreMul.isNaNAOrB, UInt<1>("h00")) @[MulAddRecFN.scala 276:10]
    node _T_465 = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 277:36]
    node _T_466 = and(_T_464, _T_465) @[MulAddRecFN.scala 276:36]
    node _T_467 = and(_T_466, io.fromPreMul.isInfC) @[MulAddRecFN.scala 277:61]
    node _T_468 = and(_T_467, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 278:35]
    node _T_469 = or(_T_462, _T_468) @[MulAddRecFN.scala 275:57]
    io.invalidExc <= _T_469 @[MulAddRecFN.scala 272:19]
    node _T_470 = or(io.fromPreMul.isNaNAOrB, io.fromPreMul.isNaNC) @[MulAddRecFN.scala 280:48]
    io.rawOut.isNaN <= _T_470 @[MulAddRecFN.scala 280:21]
    io.rawOut.isInf <= notNaN_isInfOut @[MulAddRecFN.scala 281:21]
    node _T_472 = eq(io.fromPreMul.CIsDominant, UInt<1>("h00")) @[MulAddRecFN.scala 285:14]
    node _T_473 = and(_T_472, notCDom_completeCancellation) @[MulAddRecFN.scala 285:42]
    node _T_474 = or(notNaN_addZeros, _T_473) @[MulAddRecFN.scala 284:25]
    io.rawOut.isZero <= _T_474 @[MulAddRecFN.scala 283:22]
    node _T_475 = and(notNaN_isInfProd, io.fromPreMul.signProd) @[MulAddRecFN.scala 287:27]
    node _T_476 = and(io.fromPreMul.isInfC, CDom_sign) @[MulAddRecFN.scala 288:31]
    node _T_477 = or(_T_475, _T_476) @[MulAddRecFN.scala 287:54]
    node _T_479 = eq(roundingMode_min, UInt<1>("h00")) @[MulAddRecFN.scala 289:29]
    node _T_480 = and(notNaN_addZeros, _T_479) @[MulAddRecFN.scala 289:26]
    node _T_481 = and(_T_480, io.fromPreMul.signProd) @[MulAddRecFN.scala 289:48]
    node _T_482 = and(_T_481, CDom_sign) @[MulAddRecFN.scala 290:36]
    node _T_483 = or(_T_477, _T_482) @[MulAddRecFN.scala 288:43]
    node _T_484 = and(notNaN_addZeros, roundingMode_min) @[MulAddRecFN.scala 291:26]
    node _T_485 = or(io.fromPreMul.signProd, CDom_sign) @[MulAddRecFN.scala 292:37]
    node _T_486 = and(_T_484, _T_485) @[MulAddRecFN.scala 291:46]
    node _T_487 = or(_T_483, _T_486) @[MulAddRecFN.scala 290:48]
    node _T_489 = eq(notNaN_isInfOut, UInt<1>("h00")) @[MulAddRecFN.scala 293:10]
    node _T_491 = eq(notNaN_addZeros, UInt<1>("h00")) @[MulAddRecFN.scala 293:31]
    node _T_492 = and(_T_489, _T_491) @[MulAddRecFN.scala 293:28]
    node _T_493 = mux(io.fromPreMul.CIsDominant, CDom_sign, notCDom_sign) @[MulAddRecFN.scala 294:17]
    node _T_494 = and(_T_492, _T_493) @[MulAddRecFN.scala 293:49]
    node _T_495 = or(_T_487, _T_494) @[MulAddRecFN.scala 292:50]
    io.rawOut.sign <= _T_495 @[MulAddRecFN.scala 286:20]
    node _T_496 = mux(io.fromPreMul.CIsDominant, CDom_sExp, notCDom_sExp) @[MulAddRecFN.scala 295:26]
    io.rawOut.sExp <= _T_496 @[MulAddRecFN.scala 295:20]
    node _T_497 = mux(io.fromPreMul.CIsDominant, CDom_sig, notCDom_sig) @[MulAddRecFN.scala 296:25]
    io.rawOut.sig <= _T_497 @[MulAddRecFN.scala 296:19]
    
  module RoundAnyRawFNToRecFN : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<11>, sig : UInt<26>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h00")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h01")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h02")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h03")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h04")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h06")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _T_17 = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _T_19 = eq(io.in.sign, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _T_20 = and(roundingMode_max, _T_19) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_T_17, _T_20) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<22> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _T_27 = bits(io.in.sExp, 9, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _T_28 = not(_T_27) @[primitives.scala 51:21]
    node _T_29 = bits(_T_28, 9, 9) @[primitives.scala 57:25]
    node _T_30 = bits(_T_28, 8, 0) @[primitives.scala 58:26]
    node _T_31 = bits(_T_30, 8, 8) @[primitives.scala 57:25]
    node _T_32 = bits(_T_30, 7, 0) @[primitives.scala 58:26]
    node _T_33 = bits(_T_32, 7, 7) @[primitives.scala 57:25]
    node _T_34 = bits(_T_32, 6, 0) @[primitives.scala 58:26]
    node _T_36 = bits(_T_34, 6, 6) @[primitives.scala 57:25]
    node _T_37 = bits(_T_34, 5, 0) @[primitives.scala 58:26]
    node _T_40 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_37) @[primitives.scala 77:58]
    node _T_41 = bits(_T_40, 63, 43) @[primitives.scala 79:22]
    node _T_42 = bits(_T_41, 15, 0) @[Bitwise.scala 109:18]
    node _T_45 = shl(UInt<8>("h0ff"), 8) @[Bitwise.scala 102:47]
    node _T_46 = xor(UInt<16>("h0ffff"), _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_42, 8) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_42, 7, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 8) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 11, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 4) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 4) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 11, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 4) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node _T_63 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_64 = bits(_T_56, 13, 0) @[Bitwise.scala 102:28]
    node _T_65 = shl(_T_64, 2) @[Bitwise.scala 102:47]
    node _T_66 = xor(_T_56, _T_65) @[Bitwise.scala 102:21]
    node _T_67 = shr(_T_63, 2) @[Bitwise.scala 103:21]
    node _T_68 = and(_T_67, _T_66) @[Bitwise.scala 103:31]
    node _T_69 = bits(_T_63, 13, 0) @[Bitwise.scala 103:46]
    node _T_70 = shl(_T_69, 2) @[Bitwise.scala 103:65]
    node _T_71 = not(_T_66) @[Bitwise.scala 103:77]
    node _T_72 = and(_T_70, _T_71) @[Bitwise.scala 103:75]
    node _T_73 = or(_T_68, _T_72) @[Bitwise.scala 103:39]
    node _T_74 = bits(_T_66, 14, 0) @[Bitwise.scala 102:28]
    node _T_75 = shl(_T_74, 1) @[Bitwise.scala 102:47]
    node _T_76 = xor(_T_66, _T_75) @[Bitwise.scala 102:21]
    node _T_77 = shr(_T_73, 1) @[Bitwise.scala 103:21]
    node _T_78 = and(_T_77, _T_76) @[Bitwise.scala 103:31]
    node _T_79 = bits(_T_73, 14, 0) @[Bitwise.scala 103:46]
    node _T_80 = shl(_T_79, 1) @[Bitwise.scala 103:65]
    node _T_81 = not(_T_76) @[Bitwise.scala 103:77]
    node _T_82 = and(_T_80, _T_81) @[Bitwise.scala 103:75]
    node _T_83 = or(_T_78, _T_82) @[Bitwise.scala 103:39]
    node _T_84 = bits(_T_41, 20, 16) @[Bitwise.scala 109:44]
    node _T_85 = bits(_T_84, 3, 0) @[Bitwise.scala 109:18]
    node _T_86 = bits(_T_85, 1, 0) @[Bitwise.scala 109:18]
    node _T_87 = bits(_T_86, 0, 0) @[Bitwise.scala 109:18]
    node _T_88 = bits(_T_86, 1, 1) @[Bitwise.scala 109:44]
    node _T_89 = cat(_T_87, _T_88) @[Cat.scala 30:58]
    node _T_90 = bits(_T_85, 3, 2) @[Bitwise.scala 109:44]
    node _T_91 = bits(_T_90, 0, 0) @[Bitwise.scala 109:18]
    node _T_92 = bits(_T_90, 1, 1) @[Bitwise.scala 109:44]
    node _T_93 = cat(_T_91, _T_92) @[Cat.scala 30:58]
    node _T_94 = cat(_T_89, _T_93) @[Cat.scala 30:58]
    node _T_95 = bits(_T_84, 4, 4) @[Bitwise.scala 109:44]
    node _T_96 = cat(_T_94, _T_95) @[Cat.scala 30:58]
    node _T_97 = cat(_T_83, _T_96) @[Cat.scala 30:58]
    node _T_98 = not(_T_97) @[primitives.scala 74:36]
    node _T_99 = mux(_T_36, UInt<1>("h00"), _T_98) @[primitives.scala 74:21]
    node _T_100 = not(_T_99) @[primitives.scala 74:17]
    node _T_101 = not(_T_100) @[primitives.scala 74:36]
    node _T_102 = mux(_T_33, UInt<1>("h00"), _T_101) @[primitives.scala 74:21]
    node _T_103 = not(_T_102) @[primitives.scala 74:17]
    node _T_105 = cat(_T_103, UInt<3>("h07")) @[Cat.scala 30:58]
    node _T_106 = bits(_T_32, 7, 7) @[primitives.scala 57:25]
    node _T_107 = bits(_T_32, 6, 0) @[primitives.scala 58:26]
    node _T_108 = bits(_T_107, 6, 6) @[primitives.scala 57:25]
    node _T_109 = bits(_T_107, 5, 0) @[primitives.scala 58:26]
    node _T_111 = dshr(asSInt(UInt<65>("h010000000000000000")), _T_109) @[primitives.scala 77:58]
    node _T_112 = bits(_T_111, 2, 0) @[primitives.scala 79:22]
    node _T_113 = bits(_T_112, 1, 0) @[Bitwise.scala 109:18]
    node _T_114 = bits(_T_113, 0, 0) @[Bitwise.scala 109:18]
    node _T_115 = bits(_T_113, 1, 1) @[Bitwise.scala 109:44]
    node _T_116 = cat(_T_114, _T_115) @[Cat.scala 30:58]
    node _T_117 = bits(_T_112, 2, 2) @[Bitwise.scala 109:44]
    node _T_118 = cat(_T_116, _T_117) @[Cat.scala 30:58]
    node _T_120 = mux(_T_108, _T_118, UInt<1>("h00")) @[primitives.scala 61:24]
    node _T_122 = mux(_T_106, _T_120, UInt<1>("h00")) @[primitives.scala 61:24]
    node _T_123 = mux(_T_31, _T_105, _T_122) @[primitives.scala 66:24]
    node _T_125 = mux(_T_29, _T_123, UInt<1>("h00")) @[primitives.scala 61:24]
    node _T_126 = or(_T_125, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node _T_128 = cat(_T_126, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_130 = shr(_T_128, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node _T_131 = cat(UInt<1>("h00"), _T_130) @[Cat.scala 30:58]
    node _T_132 = not(_T_131) @[RoundAnyRawFNToRecFN.scala 161:28]
    node _T_133 = and(_T_132, _T_128) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _T_134 = and(adjustedSig, _T_133) @[RoundAnyRawFNToRecFN.scala 162:40]
    node _T_136 = neq(_T_134, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _T_137 = and(adjustedSig, _T_131) @[RoundAnyRawFNToRecFN.scala 163:42]
    node _T_139 = neq(_T_137, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 163:62]
    node _T_140 = or(_T_136, _T_139) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _T_141 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _T_142 = and(_T_141, _T_136) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _T_143 = and(roundMagUp, _T_140) @[RoundAnyRawFNToRecFN.scala 169:29]
    node _T_144 = or(_T_142, _T_143) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _T_145 = or(adjustedSig, _T_128) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _T_146 = shr(_T_145, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _T_148 = add(_T_146, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _T_149 = and(roundingMode_near_even, _T_136) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _T_151 = eq(_T_139, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _T_152 = and(_T_149, _T_151) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _T_153 = shr(_T_128, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _T_155 = mux(_T_152, _T_153, UInt<25>("h00")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _T_156 = not(_T_155) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _T_157 = and(_T_148, _T_156) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _T_158 = not(_T_128) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _T_159 = and(adjustedSig, _T_158) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _T_160 = shr(_T_159, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _T_161 = and(roundingMode_odd, _T_140) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _T_162 = shr(_T_133, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _T_164 = mux(_T_161, _T_162, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _T_165 = or(_T_160, _T_164) @[RoundAnyRawFNToRecFN.scala 178:47]
    node _T_166 = mux(_T_144, _T_157, _T_165) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _T_167 = shr(_T_166, 23) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _T_168 = cvt(_T_167) @[RoundAnyRawFNToRecFN.scala 183:69]
    node _T_169 = add(io.in.sExp, _T_168) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _T_170 = bits(_T_169, 9, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _T_170 @[RoundAnyRawFNToRecFN.scala 185:23]
    node _T_171 = bits(_T_166, 22, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _T_172 = bits(_T_166, 21, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _T_173 = mux(doShiftSigDown1, _T_171, _T_172) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _T_173 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _T_174 = shr(_T_169, 8) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _T_176 = geq(_T_174, asSInt(UInt<3>("h03"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _T_176 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _T_178 = lt(_T_169, asSInt(UInt<9>("h0ec"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _T_178 @[RoundAnyRawFNToRecFN.scala 195:31]
    node _T_179 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _T_180 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node _T_181 = mux(doShiftSigDown1, _T_179, _T_180) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _T_182 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _T_183 = and(doShiftSigDown1, _T_182) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _T_184 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _T_186 = neq(_T_184, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 203:70]
    node _T_187 = or(_T_183, _T_186) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _T_188 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _T_189 = and(_T_188, _T_181) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _T_190 = and(roundMagUp, _T_187) @[RoundAnyRawFNToRecFN.scala 207:29]
    node _T_191 = or(_T_189, _T_190) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _T_192 = bits(_T_166, 24, 24) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _T_193 = bits(_T_166, 23, 23) @[RoundAnyRawFNToRecFN.scala 211:27]
    node _T_194 = mux(doShiftSigDown1, _T_192, _T_193) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _T_195 = shr(io.in.sExp, 9) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _T_197 = leq(_T_195, asSInt(UInt<1>("h00"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _T_198 = and(_T_140, _T_197) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _T_199 = bits(_T_128, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _T_200 = bits(_T_128, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _T_201 = mux(doShiftSigDown1, _T_199, _T_200) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _T_202 = and(_T_198, _T_201) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _T_204 = eq(io.detectTininess, UInt<1>("h01")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _T_205 = bits(_T_128, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _T_206 = bits(_T_128, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _T_207 = mux(doShiftSigDown1, _T_205, _T_206) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _T_209 = eq(_T_207, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _T_210 = and(_T_204, _T_209) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _T_211 = and(_T_210, _T_194) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _T_212 = and(_T_211, _T_136) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _T_213 = and(_T_212, _T_191) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _T_215 = eq(_T_213, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _T_216 = and(_T_202, _T_215) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _T_217 = or(common_totalUnderflow, _T_216) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _T_217 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _T_218 = or(common_totalUnderflow, _T_140) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _T_218 @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _T_220 = eq(isNaNOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _T_222 = eq(notNaN_isSpecialInfOut, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _T_223 = and(_T_220, _T_222) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _T_225 = eq(io.in.isZero, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_T_223, _T_225) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _T_226 = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _T_226) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _T_227 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_T_227, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _T_228 = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _T_229 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_T_228, _T_229) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _T_231 = eq(overflow_roundMagUp, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _T_231) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _T_232 = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _T_232) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h00"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _T_234 = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _T_237 = mux(_T_234, UInt<10>("h0380"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _T_238 = not(_T_237) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _T_239 = and(common_expOut, _T_238) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _T_241 = not(UInt<10>("h0ec")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _T_243 = mux(pegMinNonzeroMagOut, _T_241, UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _T_244 = not(_T_243) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _T_245 = and(_T_239, _T_244) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _T_248 = mux(pegMaxFiniteMagOut, UInt<10>("h0100"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _T_249 = not(_T_248) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _T_250 = and(_T_245, _T_249) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _T_253 = mux(notNaN_isInfOut, UInt<10>("h080"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _T_254 = not(_T_253) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _T_255 = and(_T_250, _T_254) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _T_258 = mux(pegMinNonzeroMagOut, UInt<10>("h0ec"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _T_259 = or(_T_255, _T_258) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _T_262 = mux(pegMaxFiniteMagOut, UInt<10>("h02ff"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _T_263 = or(_T_259, _T_262) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _T_266 = mux(notNaN_isInfOut, UInt<10>("h0300"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _T_267 = or(_T_263, _T_266) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _T_270 = mux(isNaNOut, UInt<10>("h0380"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_T_267, _T_270) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _T_271 = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _T_272 = or(_T_271, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _T_275 = mux(isNaNOut, UInt<22>("h0200000"), UInt<1>("h00")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _T_276 = mux(_T_272, _T_275, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _T_277 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _T_280 = mux(_T_277, UInt<22>("h03fffff"), UInt<22>("h00")) @[Bitwise.scala 72:12]
    node fractOut = or(_T_276, _T_280) @[RoundAnyRawFNToRecFN.scala 281:11]
    node _T_281 = cat(signOut, expOut) @[Cat.scala 30:58]
    node _T_282 = cat(_T_281, fractOut) @[Cat.scala 30:58]
    io.out <= _T_282 @[RoundAnyRawFNToRecFN.scala 284:12]
    node _T_283 = cat(underflow, inexact) @[Cat.scala 30:58]
    node _T_284 = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 30:58]
    node _T_285 = cat(_T_284, overflow) @[Cat.scala 30:58]
    node _T_286 = cat(_T_285, _T_283) @[Cat.scala 30:58]
    io.exceptionFlags <= _T_286 @[RoundAnyRawFNToRecFN.scala 285:23]
    
  module RoundRawFNToRecFN : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<11>, sig : UInt<26>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.clock <= clock
    roundAnyRawFNToRecFN.reset <= reset
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]
    
  module MulAddRecFNPipe : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip validin : UInt<1>, flip op : UInt<2>, flip a : UInt<33>, flip b : UInt<33>, flip c : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>, validout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst mulAddRecFNToRaw_preMul of MulAddRecFNToRaw_preMul @[fpu.scala 33:15]
    mulAddRecFNToRaw_preMul.io is invalid
    mulAddRecFNToRaw_preMul.clock <= clock
    mulAddRecFNToRaw_preMul.reset <= reset
    inst mulAddRecFNToRaw_postMul of MulAddRecFNToRaw_postMul @[fpu.scala 35:15]
    mulAddRecFNToRaw_postMul.io is invalid
    mulAddRecFNToRaw_postMul.clock <= clock
    mulAddRecFNToRaw_postMul.reset <= reset
    mulAddRecFNToRaw_preMul.io.op <= io.op @[fpu.scala 37:35]
    mulAddRecFNToRaw_preMul.io.a <= io.a @[fpu.scala 38:35]
    mulAddRecFNToRaw_preMul.io.b <= io.b @[fpu.scala 39:35]
    mulAddRecFNToRaw_preMul.io.c <= io.c @[fpu.scala 40:35]
    node _T_14 = mul(mulAddRecFNToRaw_preMul.io.mulAddA, mulAddRecFNToRaw_preMul.io.mulAddB) @[fpu.scala 43:45]
    node mulAddResult = add(_T_14, mulAddRecFNToRaw_preMul.io.mulAddC) @[fpu.scala 44:50]
    wire valid_stage0 : UInt<1> @[fpu.scala 47:28]
    valid_stage0 is invalid @[fpu.scala 47:28]
    wire roundingMode_stage0 : UInt<3> @[fpu.scala 48:35]
    roundingMode_stage0 is invalid @[fpu.scala 48:35]
    wire detectTininess_stage0 : UInt<1> @[fpu.scala 49:37]
    detectTininess_stage0 is invalid @[fpu.scala 49:37]
    reg _T_20 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Valid.scala 48:22]
    _T_20 <= io.validin @[Valid.scala 48:22]
    reg _T_22 : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<11>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<25>, bit0AlignedSigC : UInt<1>}, clock @[Reg.scala 11:16]
    when io.validin : @[Reg.scala 12:19]
      _T_22.bit0AlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.bit0AlignedSigC @[Reg.scala 12:23]
      _T_22.highAlignedSigC <= mulAddRecFNToRaw_preMul.io.toPostMul.highAlignedSigC @[Reg.scala 12:23]
      _T_22.CDom_CAlignDist <= mulAddRecFNToRaw_preMul.io.toPostMul.CDom_CAlignDist @[Reg.scala 12:23]
      _T_22.CIsDominant <= mulAddRecFNToRaw_preMul.io.toPostMul.CIsDominant @[Reg.scala 12:23]
      _T_22.doSubMags <= mulAddRecFNToRaw_preMul.io.toPostMul.doSubMags @[Reg.scala 12:23]
      _T_22.sExpSum <= mulAddRecFNToRaw_preMul.io.toPostMul.sExpSum @[Reg.scala 12:23]
      _T_22.isZeroC <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroC @[Reg.scala 12:23]
      _T_22.isInfC <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfC @[Reg.scala 12:23]
      _T_22.isNaNC <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNC @[Reg.scala 12:23]
      _T_22.signProd <= mulAddRecFNToRaw_preMul.io.toPostMul.signProd @[Reg.scala 12:23]
      _T_22.isZeroB <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroB @[Reg.scala 12:23]
      _T_22.isInfB <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfB @[Reg.scala 12:23]
      _T_22.isZeroA <= mulAddRecFNToRaw_preMul.io.toPostMul.isZeroA @[Reg.scala 12:23]
      _T_22.isInfA <= mulAddRecFNToRaw_preMul.io.toPostMul.isInfA @[Reg.scala 12:23]
      _T_22.isNaNAOrB <= mulAddRecFNToRaw_preMul.io.toPostMul.isNaNAOrB @[Reg.scala 12:23]
      _T_22.isSigNaNAny <= mulAddRecFNToRaw_preMul.io.toPostMul.isSigNaNAny @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    wire _T_26 : {valid : UInt<1>, bits : {isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<11>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<5>, highAlignedSigC : UInt<25>, bit0AlignedSigC : UInt<1>}} @[Valid.scala 43:21]
    _T_26 is invalid @[Valid.scala 43:21]
    _T_26.valid <= _T_20 @[Valid.scala 44:17]
    _T_26.bits <- _T_22 @[Valid.scala 45:16]
    mulAddRecFNToRaw_postMul.io.fromPreMul <- _T_26.bits @[fpu.scala 52:46]
    reg _T_30 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Valid.scala 48:22]
    _T_30 <= io.validin @[Valid.scala 48:22]
    reg _T_32 : UInt<47>, clock @[Reg.scala 11:16]
    when io.validin : @[Reg.scala 12:19]
      _T_32 <= mulAddResult @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    wire _T_36 : {valid : UInt<1>, bits : UInt<47>} @[Valid.scala 43:21]
    _T_36 is invalid @[Valid.scala 43:21]
    _T_36.valid <= _T_30 @[Valid.scala 44:17]
    _T_36.bits <= _T_32 @[Valid.scala 45:16]
    mulAddRecFNToRaw_postMul.io.mulAddResult <= _T_36.bits @[fpu.scala 53:46]
    reg _T_40 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Valid.scala 48:22]
    _T_40 <= io.validin @[Valid.scala 48:22]
    reg _T_42 : UInt<3>, clock @[Reg.scala 11:16]
    when io.validin : @[Reg.scala 12:19]
      _T_42 <= io.roundingMode @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    wire _T_46 : {valid : UInt<1>, bits : UInt<3>} @[Valid.scala 43:21]
    _T_46 is invalid @[Valid.scala 43:21]
    _T_46.valid <= _T_40 @[Valid.scala 44:17]
    _T_46.bits <= _T_42 @[Valid.scala 45:16]
    mulAddRecFNToRaw_postMul.io.roundingMode <= _T_46.bits @[fpu.scala 54:46]
    reg _T_50 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Valid.scala 48:22]
    _T_50 <= io.validin @[Valid.scala 48:22]
    reg _T_52 : UInt<3>, clock @[Reg.scala 11:16]
    when io.validin : @[Reg.scala 12:19]
      _T_52 <= io.roundingMode @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    wire _T_56 : {valid : UInt<1>, bits : UInt<3>} @[Valid.scala 43:21]
    _T_56 is invalid @[Valid.scala 43:21]
    _T_56.valid <= _T_50 @[Valid.scala 44:17]
    _T_56.bits <= _T_52 @[Valid.scala 45:16]
    roundingMode_stage0 <= _T_56.bits @[fpu.scala 55:46]
    reg _T_60 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Valid.scala 48:22]
    _T_60 <= io.validin @[Valid.scala 48:22]
    reg _T_62 : UInt<1>, clock @[Reg.scala 11:16]
    when io.validin : @[Reg.scala 12:19]
      _T_62 <= io.detectTininess @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    wire _T_66 : {valid : UInt<1>, bits : UInt<1>} @[Valid.scala 43:21]
    _T_66 is invalid @[Valid.scala 43:21]
    _T_66.valid <= _T_60 @[Valid.scala 44:17]
    _T_66.bits <= _T_62 @[Valid.scala 45:16]
    detectTininess_stage0 <= _T_66.bits @[fpu.scala 56:46]
    reg _T_71 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Valid.scala 48:22]
    _T_71 <= io.validin @[Valid.scala 48:22]
    reg _T_73 : UInt<1>, clock @[Reg.scala 11:16]
    when io.validin : @[Reg.scala 12:19]
      _T_73 <= UInt<1>("h00") @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    wire _T_77 : {valid : UInt<1>, bits : UInt<1>} @[Valid.scala 43:21]
    _T_77 is invalid @[Valid.scala 43:21]
    _T_77.valid <= _T_71 @[Valid.scala 44:17]
    _T_77.bits <= _T_73 @[Valid.scala 45:16]
    valid_stage0 <= _T_77.valid @[fpu.scala 57:46]
    inst roundRawFNToRecFN of RoundRawFNToRecFN @[fpu.scala 61:35]
    roundRawFNToRecFN.io is invalid
    roundRawFNToRecFN.clock <= clock
    roundRawFNToRecFN.reset <= reset
    reg _T_81 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Valid.scala 48:22]
    _T_81 <= valid_stage0 @[Valid.scala 48:22]
    reg _T_83 : UInt<1>, clock @[Reg.scala 11:16]
    when valid_stage0 : @[Reg.scala 12:19]
      _T_83 <= mulAddRecFNToRaw_postMul.io.invalidExc @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    wire _T_87 : {valid : UInt<1>, bits : UInt<1>} @[Valid.scala 43:21]
    _T_87 is invalid @[Valid.scala 43:21]
    _T_87.valid <= _T_81 @[Valid.scala 44:17]
    _T_87.bits <= _T_83 @[Valid.scala 45:16]
    roundRawFNToRecFN.io.invalidExc <= _T_87.bits @[fpu.scala 64:45]
    reg _T_91 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Valid.scala 48:22]
    _T_91 <= valid_stage0 @[Valid.scala 48:22]
    reg _T_93 : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<11>, sig : UInt<26>}, clock @[Reg.scala 11:16]
    when valid_stage0 : @[Reg.scala 12:19]
      _T_93.sig <= mulAddRecFNToRaw_postMul.io.rawOut.sig @[Reg.scala 12:23]
      _T_93.sExp <= mulAddRecFNToRaw_postMul.io.rawOut.sExp @[Reg.scala 12:23]
      _T_93.sign <= mulAddRecFNToRaw_postMul.io.rawOut.sign @[Reg.scala 12:23]
      _T_93.isZero <= mulAddRecFNToRaw_postMul.io.rawOut.isZero @[Reg.scala 12:23]
      _T_93.isInf <= mulAddRecFNToRaw_postMul.io.rawOut.isInf @[Reg.scala 12:23]
      _T_93.isNaN <= mulAddRecFNToRaw_postMul.io.rawOut.isNaN @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    wire _T_97 : {valid : UInt<1>, bits : {isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<11>, sig : UInt<26>}} @[Valid.scala 43:21]
    _T_97 is invalid @[Valid.scala 43:21]
    _T_97.valid <= _T_91 @[Valid.scala 44:17]
    _T_97.bits <- _T_93 @[Valid.scala 45:16]
    roundRawFNToRecFN.io.in <- _T_97.bits @[fpu.scala 65:45]
    reg _T_101 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Valid.scala 48:22]
    _T_101 <= valid_stage0 @[Valid.scala 48:22]
    reg _T_103 : UInt<3>, clock @[Reg.scala 11:16]
    when valid_stage0 : @[Reg.scala 12:19]
      _T_103 <= roundingMode_stage0 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    wire _T_107 : {valid : UInt<1>, bits : UInt<3>} @[Valid.scala 43:21]
    _T_107 is invalid @[Valid.scala 43:21]
    _T_107.valid <= _T_101 @[Valid.scala 44:17]
    _T_107.bits <= _T_103 @[Valid.scala 45:16]
    roundRawFNToRecFN.io.roundingMode <= _T_107.bits @[fpu.scala 66:45]
    reg _T_111 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Valid.scala 48:22]
    _T_111 <= valid_stage0 @[Valid.scala 48:22]
    reg _T_113 : UInt<1>, clock @[Reg.scala 11:16]
    when valid_stage0 : @[Reg.scala 12:19]
      _T_113 <= detectTininess_stage0 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    wire _T_117 : {valid : UInt<1>, bits : UInt<1>} @[Valid.scala 43:21]
    _T_117 is invalid @[Valid.scala 43:21]
    _T_117.valid <= _T_111 @[Valid.scala 44:17]
    _T_117.bits <= _T_113 @[Valid.scala 45:16]
    roundRawFNToRecFN.io.detectTininess <= _T_117.bits @[fpu.scala 67:45]
    reg _T_122 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Valid.scala 48:22]
    _T_122 <= valid_stage0 @[Valid.scala 48:22]
    reg _T_124 : UInt<1>, clock @[Reg.scala 11:16]
    when valid_stage0 : @[Reg.scala 12:19]
      _T_124 <= UInt<1>("h00") @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    wire _T_128 : {valid : UInt<1>, bits : UInt<1>} @[Valid.scala 43:21]
    _T_128 is invalid @[Valid.scala 43:21]
    _T_128.valid <= _T_122 @[Valid.scala 44:17]
    _T_128.bits <= _T_124 @[Valid.scala 45:16]
    io.validout <= _T_128.valid @[fpu.scala 68:45]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h00") @[fpu.scala 70:38]
    io.out <= roundRawFNToRecFN.io.out @[fpu.scala 72:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[fpu.scala 73:23]
    

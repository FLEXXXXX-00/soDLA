[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(C:\Users\yuda\Desktop\soDLA\src\main\scala\chisel-float\TesterMain.scala, \home\yuda\soDLA\src\main\scala\slibs\NV_NVDLA_fifo.scala, \home\yuda\soDLA\src\main\scala\nvdla\cdma\NV_NVDLA_CDMA_CVT_cell.scala, \home\yuda\soDLA\src\main\scala\cora\kf\C_CORA_gauss.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\kf\C_CORA_gauss.scala, \home\yuda\soDLA\src\main\scala\nvdla\cmac\NV_NVDLA_CMAC_REG_single.scala, \home\yuda\soDLA\src\main\scala\nvdla\cdp\int_sum_block_tp1.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\matrix\FPU.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\csc\dl\NV_NVDLA_CSC_dl_input_package.scala, \home\yuda\soDLA\src\main\scala\cora\matrix\FMA.scala, \home\yuda\soDLA\src\main\scala\cora\matrix\C_CORA_MATRIX_predictP.scala, \home\yuda\soDLA\src\main\scala\nvdla\cacc\NV_NVDLA_CACC_calculator.scala, \home\yuda\soDLA\src\main\scala\nvdla\glb\NV_NVDLA_GLB_csb.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\cmac\NV_NVDLA_CMAC_CORE_macfp.scala, \home\yuda\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_BRDMA_EG_ro.scala, \home\yuda\soDLA\src\main\scala\nvdla\csc\NV_NVDLA_CSC_dl.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\common\genericFIFO.scala, \home\yuda\soDLA\src\main\scala\nvdla\cfgrom\NV_NVDLA_CFGROM_rom.scala, \home\yuda\soDLA\src\main\scala\slibs\HLS_cdp_icvt.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\matrix\C_CORA_MATRIX_predictx_shareFMA.scala, \home\yuda\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_CORE_Y_lut.scala, \home\yuda\soDLA\src\main\scala\nvdla\glb\NV_NVDLA_GLB_CSB_reg.scala, \home\yuda\soDLA\src\main\scala\nvdla\cbuf\NV_NVDLA_CBUF_conf.scala, \home\yuda\soDLA\src\main\scala\nvdla\cbuf\NV_NVDLA_cbuf.scala, \home\yuda\soDLA\src\main\scala\nvdla\cdp\int_sum_block.scala, \home\yuda\soDLA\src\main\scala\nvdla\cmac\NV_NVDLA_cmac.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_BRDMA_EG_ro.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_BRDMA_fifo.scala, \home\yuda\soDLA\src\main\scala\examples\tovec.scala, \home\yuda\soDLA\src\main\scala\nvdla\cacc\NV_NVDLA_CACC_CALC_int8.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\chisel-float\FPMult.scala, \home\yuda\soDLA\src\main\scala\nvdla\csb_master\NV_NVDLA_CSB_MASTER_csb2falcon_fifo.scala, \home\yuda\soDLA\src\main\scala\cora\matrix\C_CORA_MATRIX_core.scala, \home\yuda\soDLA\src\main\scala\nvdla\csc\NV_NVDLA_CSC_WL_dec.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_BRDMA_gate.scala, \home\yuda\soDLA\src\main\scala\nvdla\cdma\NV_NVDLA_CDMA_DC_fifo.scala, \home\yuda\soDLA\src\main\scala\nvdla\csc\NV_NVDLA_CSC_wl.scala, \home\yuda\soDLA\src\main\scala\nvdla\cfgrom\NV_NVDLA_cfgrom.scala, \home\yuda\soDLA\src\main\scala\nvdla\cmac\NV_NVDLA_CMAC_reg.scala, \home\yuda\soDLA\src\main\scala\nvdla\cmac\NV_NVDLA_CMAC_REG_dual.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_HLS_lut_expn.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_RDMA_eg.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_HLS_X_int_mul.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_CORE_y.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_MRDMA_EG_din.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_RDMA_EG_ro.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_MRDMA_eg.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\cdp\NV_NVDLA_CSC_dual_reg.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_RDMA_REG_single.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_HLS_x1_int.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\cdp\NV_NVDLA_SDP_config.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_MRDMA_gate.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_HLS_X_int_alu.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\devices\nvdla\Periphery.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_RDMA_ig.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\devices\nvdla\NVDLA.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\ip\nvdla.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_MRDMA_EG_cmd.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_RDMA_REG_dual.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_RDMA_fifo.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_HLS_X_int_trt.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_gate.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_HLS_x2_int.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_MRDMA_EG_dout.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_CORE_gate.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_HLS_sync2data.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\matrix\RED_CORA_MATRIX_v2v_noshareFMA.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_CORE_Y_lut.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_RDMA_dmaif.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\cdp\int_sum_block.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_HLS_prelu.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_HLS_relu.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_CORE_pack.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\spec\configurations.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(C:\Users\yuda\Desktop\soDLA\target\scala-2.12\classes\nvdla\NV_NVDLA_CSC_dual_reg.class, C:\Users\yuda\Desktop\soDLA\target\scala-2.12\classes\nvdla\cdpConfiguration.class, C:\Users\yuda\Desktop\soDLA\target\scala-2.12\classes\nvdla\NV_NVDLA_CSC_dual_reg$$anon$1.class, C:\Users\yuda\Desktop\soDLA\target\scala-2.12\classes\nvdla\NV_NVDLA_SDP_CORE_gate.class, C:\Users\yuda\Desktop\soDLA\target\scala-2.12\classes\nvdla\NV_NVDLA_SDP_CORE_gate$$anon$1.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(nvdla.NV_NVDLA_SDP_BRDMA_fifo, nvdla.NV_NVDLA_SDP_CORE_pack, cora.RED_CORA_MATRIX_v2v_fp_noshareFMA, nvdla.NV_NVDLA_SDP_CORE_gate, nvdla.csb2caccConfiguration, nvdla.ramSizeConfiguration, nvdla.cacc2glbConfiguration, nvdla.NV_NVDLA_SDP_brdma, nvdla.csb2cmacConfiguration, nvdla.NV_NVDLA_SDP_HLS_prelu, nvdla.NV_NVDLA_SDP_HLS_sync2data, nvdla.ppregCongiguration, nvdla.NV_NVDLA_SDP_RDMA_dmaif, nvdla.cdpConfiguration, nvdla.NV_NVDLA_SDP_HLS_relu)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\csc\NV_NVDLA_CSC_dual_reg.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_CORE_gate.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\spec\configurations.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(nvdla.NV_NVDLA_SDP_BRDMA_fifo, nvdla.NV_NVDLA_SDP_CORE_pack, cora.RED_CORA_MATRIX_v2v_fp_noshareFMA, nvdla.NV_NVDLA_SDP_CORE_gate, nvdla.csb2caccConfiguration, nvdla.ramSizeConfiguration, nvdla.cacc2glbConfiguration, nvdla.NV_NVDLA_SDP_brdma, nvdla.csb2cmacConfiguration, nvdla.NV_NVDLA_SDP_HLS_prelu, nvdla.NV_NVDLA_SDP_HLS_sync2data, nvdla.ppregCongiguration, nvdla.NV_NVDLA_SDP_RDMA_dmaif, nvdla.cdpConfiguration, nvdla.NV_NVDLA_SDP_HLS_relu)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_HLS_lut_expn.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_RDMA_eg.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_HLS_X_int_mul.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_CORE_y.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\csc\NV_NVDLA_CSC_dual_reg.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_MRDMA_EG_din.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_RDMA_EG_ro.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_MRDMA_eg.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_CORE_gate.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\cdp\NV_NVDLA_CSC_dual_reg.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_HLS_sync2data.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\matrix\RED_CORA_MATRIX_v2v_noshareFMA.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_CORE_Y_lut.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_RDMA_REG_single.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_HLS_x1_int.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\cdp\NV_NVDLA_SDP_config.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_MRDMA_gate.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_HLS_X_int_alu.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\devices\nvdla\Periphery.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_RDMA_ig.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\devices\nvdla\NVDLA.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\ip\nvdla.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_RDMA_dmaif.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\cdp\int_sum_block.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_HLS_prelu.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_MRDMA_EG_cmd.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_HLS_relu.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_CORE_pack.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_RDMA_REG_dual.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_RDMA_fifo.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\spec\configurations.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_HLS_X_int_trt.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_gate.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_HLS_x2_int.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_MRDMA_EG_dout.scala)[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 35 Scala sources to C:\Users\yuda\Desktop\soDLA\target\scala-2.12\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.1.1:compile for Scala 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.1.1:compile for Scala 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 3f373c04 for Scala compiler version 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-deprecation[0m
[0m[[0m[0mdebug[0m] [0m[0m	-feature[0m
[0m[[0m[0mdebug[0m] [0m[0m	-unchecked[0m
[0m[[0m[0mdebug[0m] [0m[0m	-language:reflectiveCalls[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xsource:2.11[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Program Files\Java\jre1.8.0_191\lib\resources.jar;C:\Program Files\Java\jre1.8.0_191\lib\rt.jar;C:\Program Files\Java\jre1.8.0_191\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_191\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_191\lib\jce.jar;C:\Program Files\Java\jre1.8.0_191\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_191\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_191\classes;C:\Users\yuda\.sbt\boot\scala-2.12.4\lib\scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\yuda\Desktop\soDLA\target\scala-2.12\classes;C:\Users\yuda\.ivy2\cache\edu.berkeley.cs\chisel3_2.12\jars\chisel3_2.12-3.1.7.jar;C:\Users\yuda\.sbt\boot\scala-2.12.4\lib\scala-reflect.jar;C:\Users\yuda\.ivy2\cache\com.github.scopt\scopt_2.12\jars\scopt_2.12-3.7.0.jar;C:\Users\yuda\.ivy2\cache\edu.berkeley.cs\firrtl_2.12\jars\firrtl_2.12-1.1.7.jar;C:\Users\yuda\.ivy2\cache\org.antlr\antlr4\jars\antlr4-4.7.1.jar;C:\Users\yuda\.ivy2\cache\org.antlr\antlr4-runtime\jars\antlr4-runtime-4.7.1.jar;C:\Users\yuda\.ivy2\cache\org.antlr\antlr-runtime\jars\antlr-runtime-3.5.2.jar;C:\Users\yuda\.ivy2\cache\org.antlr\ST4\jars\ST4-4.0.8.jar;C:\Users\yuda\.ivy2\cache\org.abego.treelayout\org.abego.treelayout.core\bundles\org.abego.treelayout.core-1.0.3.jar;C:\Users\yuda\.ivy2\cache\org.glassfish\javax.json\bundles\javax.json-1.0.4.jar;C:\Users\yuda\.ivy2\cache\com.ibm.icu\icu4j\jars\icu4j-58.2.jar;C:\Users\yuda\.ivy2\cache\com.typesafe.scala-logging\scala-logging_2.12\bundles\scala-logging_2.12-3.7.2.jar;C:\Users\yuda\.ivy2\cache\org.slf4j\slf4j-api\jars\slf4j-api-1.7.25.jar;C:\Users\yuda\.ivy2\cache\ch.qos.logback\logback-classic\jars\logback-classic-1.2.3.jar;C:\Users\yuda\.ivy2\cache\ch.qos.logback\logback-core\jars\logback-core-1.2.3.jar;C:\Users\yuda\.ivy2\cache\net.jcazevedo\moultingyaml_2.12\jars\moultingyaml_2.12-0.4.0.jar;C:\Users\yuda\.ivy2\cache\com.github.nscala-time\nscala-time_2.12\jars\nscala-time_2.12-2.14.0.jar;C:\Users\yuda\.ivy2\cache\joda-time\joda-time\jars\joda-time-2.9.4.jar;C:\Users\yuda\.ivy2\cache\org.joda\joda-convert\jars\joda-convert-1.2.jar;C:\Users\yuda\.ivy2\cache\org.yaml\snakeyaml\bundles\snakeyaml-1.17.jar;C:\Users\yuda\.ivy2\cache\org.json4s\json4s-native_2.12\jars\json4s-native_2.12-3.5.3.jar;C:\Users\yuda\.ivy2\cache\com.thoughtworks.paranamer\paranamer\bundles\paranamer-2.8.jar;C:\Users\yuda\.ivy2\cache\org.scala-lang.modules\scala-xml_2.12\bundles\scala-xml_2.12-1.0.6.jar;C:\Users\yuda\.ivy2\cache\edu.berkeley.cs\chisel-iotesters_2.12\jars\chisel-iotesters_2.12-1.2.9.jar;C:\Users\yuda\.ivy2\cache\edu.berkeley.cs\firrtl-interpreter_2.12\jars\firrtl-interpreter_2.12-1.1.7.jar;C:\Users\yuda\.ivy2\cache\org.scalatest\scalatest_2.12\bundles\scalatest_2.12-3.0.1.jar;C:\Users\yuda\.ivy2\cache\org.scalactic\scalactic_2.12\bundles\scalactic_2.12-3.0.1.jar;C:\Users\yuda\.ivy2\cache\org.scala-lang.modules\scala-parser-combinators_2.12\bundles\scala-parser-combinators_2.12-1.0.4.jar;C:\Users\yuda\.ivy2\cache\org.scalacheck\scalacheck_2.12\jars\scalacheck_2.12-1.13.4.jar;C:\Users\yuda\.ivy2\cache\org.scala-sbt\test-interface\jars\test-interface-1.0.jar;C:\Users\yuda\.ivy2\cache\org.scala-lang.modules\scala-jline\bundles\scala-jline-2.12.1.jar;C:\Users\yuda\.ivy2\cache\org.fusesource.jansi\jansi\jars\jansi-1.11.jar;C:\Users\yuda\.ivy2\cache\edu.berkeley.cs\treadle_2.12\jars\treadle_2.12-1.0.5.jar;C:\Users\yuda\.ivy2\cache\org.json4s\json4s-jackson_2.12\jars\json4s-jackson_2.12-3.6.1.jar;C:\Users\yuda\.ivy2\cache\org.json4s\json4s-core_2.12\jars\json4s-core_2.12-3.6.1.jar;C:\Users\yuda\.ivy2\cache\org.json4s\json4s-ast_2.12\jars\json4s-ast_2.12-3.6.1.jar;C:\Users\yuda\.ivy2\cache\org.json4s\json4s-scalap_2.12\jars\json4s-scalap_2.12-3.6.1.jar;C:\Users\yuda\.ivy2\cache\com.fasterxml.jackson.core\jackson-databind\bundles\jackson-databind-2.9.6.jar;C:\Users\yuda\.ivy2\cache\com.fasterxml.jackson.core\jackson-annotations\bundles\jackson-annotations-2.9.0.jar;C:\Users\yuda\.ivy2\cache\com.fasterxml.jackson.core\jackson-core\bundles\jackson-core-2.9.6.jar;C:\Users\yuda\.ivy2\cache\edu.berkeley.cs\dsptools_2.12\jars\dsptools_2.12-1.1.6.jar;C:\Users\yuda\.ivy2\cache\org.typelevel\spire_2.12\jars\spire_2.12-0.14.1.jar;C:\Users\yuda\.ivy2\cache\org.typelevel\spire-macros_2.12\jars\spire-macros_2.12-0.14.1.jar;C:\Users\yuda\.ivy2\cache\org.typelevel\machinist_2.12\jars\machinist_2.12-0.6.1.jar;C:\Users\yuda\.ivy2\cache\org.typelevel\algebra_2.12\jars\algebra_2.12-0.7.0.jar;C:\Users\yuda\.ivy2\cache\org.typelevel\cats-kernel_2.12\jars\cats-kernel_2.12-0.9.0.jar;C:\Users\yuda\.ivy2\cache\org.scalanlp\breeze_2.12\jars\breeze_2.12-0.13.2.jar;C:\Users\yuda\.ivy2\cache\org.scalanlp\breeze-macros_2.12\jars\breeze-macros_2.12-0.13.2.jar;C:\Users\yuda\.ivy2\cache\com.github.fommil.netlib\core\jars\core-1.1.2.jar;C:\Users\yuda\.ivy2\cache\net.sourceforge.f2j\arpack_combined_all\jars\arpack_combined_all-0.1.jar;C:\Users\yuda\.ivy2\cache\net.sf.opencsv\opencsv\jars\opencsv-2.3.jar;C:\Users\yuda\.ivy2\cache\com.github.rwl\jtransforms\jars\jtransforms-2.4.0.jar;C:\Users\yuda\.ivy2\cache\junit\junit\jars\junit-4.8.2.jar;C:\Users\yuda\.ivy2\cache\org.apache.commons\commons-math3\jars\commons-math3-3.2.jar;C:\Users\yuda\.ivy2\cache\org.spire-math\spire_2.12\jars\spire_2.12-0.13.0.jar;C:\Users\yuda\.ivy2\cache\org.spire-math\spire-macros_2.12\jars\spire-macros_2.12-0.13.0.jar;C:\Users\yuda\.ivy2\cache\com.chuusai\shapeless_2.12\bundles\shapeless_2.12-2.3.2.jar;C:\Users\yuda\.ivy2\cache\org.typelevel\macro-compat_2.12\jars\macro-compat_2.12-1.1.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 7.974294278 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from nvdla.NV_NVDLA_SDP_RDMA_dmaif...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(nvdla.NV_NVDLA_SDP_RDMA_dmaif)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(nvdla.NV_NVDLA_SDP_RDMA_dmaif)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(nvdla.NV_NVDLA_SDP_RDMA_dmaif,ModifiedNames(changes = UsedName(portsContains,[Default]), UsedName(toString,[Default]), UsedName(circuitName,[Default]), UsedName(wait,[Default]), UsedName(sdp2mcif_rd_req_pd,[Default]), UsedName(override_clock,[Default]), UsedName(toNamed,[Default]), UsedName(clone,[Default]), UsedName(parentModName,[Default]), UsedName(sdp2cvif_rd_req_ready,[Default]), UsedName(getClass,[Default]), UsedName(sdp2cvif_rd_cdt_lat_fifo_pop,[Default]), UsedName(IO,[Default]), UsedName(dma_rd_rsp_rdy,[Default]), UsedName(getRef,[Default]), UsedName(nv_NVDLA_PDP_RDMA_rdreq,[Default]), UsedName(dma_rd_req_pd,[Default]), UsedName(_onModuleClose,[Default]), UsedName(io,[Default]), UsedName(_namespace,[Default]), UsedName(_parent,[Default]), UsedName(parentPathName,[Default]), UsedName(instanceName,[Default]), UsedName(dma_rd_cdt_lat_fifo_pop,[Default]), UsedName(nameIds,[Default]), UsedName(==,[Default]), UsedName(portsSize,[Default]), UsedName($init$,[Default]), UsedName(nvdla;NV_NVDLA_SDP_RDMA_dmaif;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName(addId,[Default]), UsedName(dma_rd_rsp_pd,[Default]), UsedName(annotate,[Default]), UsedName(getCommands,[Default]), UsedName(clock,[Default]), UsedName(sdp2cvif_rd_req_pd,[Default]), UsedName($isInstanceOf,[Default]), UsedName(NV_NVDLA_SDP_RDMA_dmaif,[Default]), UsedName(dma_rd_req_vld,[Default]), UsedName(sdp2mcif_rd_cdt_lat_fifo_pop,[Default]), UsedName(getPorts,[Default]), UsedName(mcif2sdp_rd_rsp_ready,[Default]), UsedName(generateComponent,[Default]), UsedName(cvif2sdp_rd_rsp_valid,[Default]), UsedName(reset,[Default]), UsedName(nvdla_core_clk,[Default]), UsedName(getIds,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(forceName,[Default]), UsedName(notifyAll,[Default]), UsedName(pathName,[Default]), UsedName(nv_NVDLA_PDP_RDMA_rdrsp,[Default]), UsedName(##,[Default]), UsedName(getModulePorts,[Default]), UsedName(sdp2mcif_rd_req_valid,[Default]), UsedName(suggestName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(desiredName,[Default]), UsedName(getPublicFields,[Default]), UsedName(cvif2sdp_rd_rsp_ready,[Default]), UsedName(override_reset,[Default]), UsedName(_id,[Default]), UsedName(dma_rd_req_ram_type,[Default]), UsedName(addPostnameHook,[Default]), UsedName(_component,[Default]), UsedName(name,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(mcif2sdp_rd_rsp_pd,[Default]), UsedName(addCommand,[Default]), UsedName(mcif2sdp_rd_rsp_valid,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(dma_rd_rsp_vld,[Default]), UsedName(equals,[Default]), UsedName(dma_rd_req_rdy,[Default]), UsedName(sdp2cvif_rd_req_valid,[Default]), UsedName(_closed,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(dma_rd_rsp_ram_type,[Default]), UsedName(isInstanceOf,[Default]), UsedName(sdp2mcif_rd_req_ready,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(ne,[Default]), UsedName(cvif2sdp_rd_rsp_pd,[Default]))) invalidates 1 classes due to The nvdla.NV_NVDLA_SDP_RDMA_dmaif has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(portsContains,[Default]), UsedName(toString,[Default]), UsedName(circuitName,[Default]), UsedName(wait,[Default]), UsedName(sdp2mcif_rd_req_pd,[Default]), UsedName(override_clock,[Default]), UsedName(toNamed,[Default]), UsedName(clone,[Default]), UsedName(parentModName,[Default]), UsedName(sdp2cvif_rd_req_ready,[Default]), UsedName(getClass,[Default]), UsedName(sdp2cvif_rd_cdt_lat_fifo_pop,[Default]), UsedName(IO,[Default]), UsedName(dma_rd_rsp_rdy,[Default]), UsedName(getRef,[Default]), UsedName(nv_NVDLA_PDP_RDMA_rdreq,[Default]), UsedName(dma_rd_req_pd,[Default]), UsedName(_onModuleClose,[Default]), UsedName(io,[Default]), UsedName(_namespace,[Default]), UsedName(_parent,[Default]), UsedName(parentPathName,[Default]), UsedName(instanceName,[Default]), UsedName(dma_rd_cdt_lat_fifo_pop,[Default]), UsedName(nameIds,[Default]), UsedName(==,[Default]), UsedName(portsSize,[Default]), UsedName($init$,[Default]), UsedName(nvdla;NV_NVDLA_SDP_RDMA_dmaif;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName(addId,[Default]), UsedName(dma_rd_rsp_pd,[Default]), UsedName(annotate,[Default]), UsedName(getCommands,[Default]), UsedName(clock,[Default]), UsedName(sdp2cvif_rd_req_pd,[Default]), UsedName($isInstanceOf,[Default]), UsedName(NV_NVDLA_SDP_RDMA_dmaif,[Default]), UsedName(dma_rd_req_vld,[Default]), UsedName(sdp2mcif_rd_cdt_lat_fifo_pop,[Default]), UsedName(getPorts,[Default]), UsedName(mcif2sdp_rd_rsp_ready,[Default]), UsedName(generateComponent,[Default]), UsedName(cvif2sdp_rd_rsp_valid,[Default]), UsedName(reset,[Default]), UsedName(nvdla_core_clk,[Default]), UsedName(getIds,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(forceName,[Default]), UsedName(notifyAll,[Default]), UsedName(pathName,[Default]), UsedName(nv_NVDLA_PDP_RDMA_rdrsp,[Default]), UsedName(##,[Default]), UsedName(getModulePorts,[Default]), UsedName(sdp2mcif_rd_req_valid,[Default]), UsedName(suggestName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(desiredName,[Default]), UsedName(getPublicFields,[Default]), UsedName(cvif2sdp_rd_rsp_ready,[Default]), UsedName(override_reset,[Default]), UsedName(_id,[Default]), UsedName(dma_rd_req_ram_type,[Default]), UsedName(addPostnameHook,[Default]), UsedName(_component,[Default]), UsedName(name,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(mcif2sdp_rd_rsp_pd,[Default]), UsedName(addCommand,[Default]), UsedName(mcif2sdp_rd_rsp_valid,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(dma_rd_rsp_vld,[Default]), UsedName(equals,[Default]), UsedName(dma_rd_req_rdy,[Default]), UsedName(sdp2cvif_rd_req_valid,[Default]), UsedName(_closed,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(dma_rd_rsp_ram_type,[Default]), UsedName(isInstanceOf,[Default]), UsedName(sdp2mcif_rd_req_ready,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(ne,[Default]), UsedName(cvif2sdp_rd_rsp_pd,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(nvdla.NV_NVDLA_SDP_RDMA_dmaif)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from nvdla.NV_NVDLA_SDP_BRDMA_fifo...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(nvdla.NV_NVDLA_SDP_BRDMA_fifo)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(nvdla.NV_NVDLA_SDP_BRDMA_fifo)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(nvdla.NV_NVDLA_SDP_BRDMA_fifo,ModifiedNames(changes = UsedName(rd_pd,[Default]), UsedName(portsContains,[Default]), UsedName(toString,[Default]), UsedName(circuitName,[Default]), UsedName(wait,[Default]), UsedName(override_clock,[Default]), UsedName(toNamed,[Default]), UsedName(clone,[Default]), UsedName(parentModName,[Default]), UsedName(getClass,[Default]), UsedName(IO,[Default]), UsedName(getRef,[Default]), UsedName(_onModuleClose,[Default]), UsedName(pwrbus_ram_pd,[Default]), UsedName(io,[Default]), UsedName(_namespace,[Default]), UsedName(_parent,[Default]), UsedName(parentPathName,[Default]), UsedName(instanceName,[Default]), UsedName(nameIds,[Default]), UsedName(==,[Default]), UsedName(portsSize,[Default]), UsedName($init$,[Default]), UsedName($asInstanceOf,[Default]), UsedName(addId,[Default]), UsedName(annotate,[Default]), UsedName(getCommands,[Default]), UsedName(clock,[Default]), UsedName(clk,[Default]), UsedName($isInstanceOf,[Default]), UsedName(getPorts,[Default]), UsedName(generateComponent,[Default]), UsedName(rd_prdy,[Default]), UsedName(reset,[Default]), UsedName(getIds,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(forceName,[Default]), UsedName(notifyAll,[Default]), UsedName(pathName,[Default]), UsedName(##,[Default]), UsedName(wr_prdy,[Default]), UsedName(getModulePorts,[Default]), UsedName(suggestName,[Default]), UsedName(rd_pvld,[Default]), UsedName(asInstanceOf,[Default]), UsedName(desiredName,[Default]), UsedName(getPublicFields,[Default]), UsedName(override_reset,[Default]), UsedName(_id,[Default]), UsedName(addPostnameHook,[Default]), UsedName(_component,[Default]), UsedName(name,[Default]), UsedName(initializeInParent,[Default]), UsedName(wr_pd,[Default]), UsedName(setRef,[Default]), UsedName(addCommand,[Default]), UsedName(NV_NVDLA_SDP_BRDMA_fifo,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(_closed,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(nvdla;NV_NVDLA_SDP_BRDMA_fifo;init;,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(ne,[Default]), UsedName(wr_pvld,[Default]))) invalidates 1 classes due to The nvdla.NV_NVDLA_SDP_BRDMA_fifo has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(rd_pd,[Default]), UsedName(portsContains,[Default]), UsedName(toString,[Default]), UsedName(circuitName,[Default]), UsedName(wait,[Default]), UsedName(override_clock,[Default]), UsedName(toNamed,[Default]), UsedName(clone,[Default]), UsedName(parentModName,[Default]), UsedName(getClass,[Default]), UsedName(IO,[Default]), UsedName(getRef,[Default]), UsedName(_onModuleClose,[Default]), UsedName(pwrbus_ram_pd,[Default]), UsedName(io,[Default]), UsedName(_namespace,[Default]), UsedName(_parent,[Default]), UsedName(parentPathName,[Default]), UsedName(instanceName,[Default]), UsedName(nameIds,[Default]), UsedName(==,[Default]), UsedName(portsSize,[Default]), UsedName($init$,[Default]), UsedName($asInstanceOf,[Default]), UsedName(addId,[Default]), UsedName(annotate,[Default]), UsedName(getCommands,[Default]), UsedName(clock,[Default]), UsedName(clk,[Default]), UsedName($isInstanceOf,[Default]), UsedName(getPorts,[Default]), UsedName(generateComponent,[Default]), UsedName(rd_prdy,[Default]), UsedName(reset,[Default]), UsedName(getIds,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(forceName,[Default]), UsedName(notifyAll,[Default]), UsedName(pathName,[Default]), UsedName(##,[Default]), UsedName(wr_prdy,[Default]), UsedName(getModulePorts,[Default]), UsedName(suggestName,[Default]), UsedName(rd_pvld,[Default]), UsedName(asInstanceOf,[Default]), UsedName(desiredName,[Default]), UsedName(getPublicFields,[Default]), UsedName(override_reset,[Default]), UsedName(_id,[Default]), UsedName(addPostnameHook,[Default]), UsedName(_component,[Default]), UsedName(name,[Default]), UsedName(initializeInParent,[Default]), UsedName(wr_pd,[Default]), UsedName(setRef,[Default]), UsedName(addCommand,[Default]), UsedName(NV_NVDLA_SDP_BRDMA_fifo,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(_closed,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(nvdla;NV_NVDLA_SDP_BRDMA_fifo;init;,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(ne,[Default]), UsedName(wr_pvld,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(nvdla.NV_NVDLA_SDP_BRDMA_fifo)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from nvdla.cdpConfiguration...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(nvdla.cdpConfiguration)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(nvdla.cdpConfiguration)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(nvdla.cdpConfiguration,ModifiedNames(changes = UsedName(NVDLA_MEMORY_ATOMIC_LOG2,[Default]), UsedName(NVDLA_MEMORY_ATOMIC_SIZE,[Default]), UsedName(NVDLA_BDMA_ENABLE,[Default]), UsedName(NVDLA_VMOD_PDP_RDMA_OUTPUT_THROUGHPUT_USE,[Default]), UsedName(NVDLA_RUBIK_CONTRACT_ENABLE,[Default]), UsedName(WINOGRAD_ENABLE,[Default]), UsedName(NVDLA_CC_ATOMC_DIV_ATOMK,[Default]), UsedName(NVDLA_PRIMARY_MEMIF_MAX_BURST_LENGTH,[Default]), UsedName(NVDLA_CBUF_ENTRY_WIDTH,[Default]), UsedName(NVDLA_WEIGHT_COMPRESSION_ENABLE,[Default]), UsedName(NVDLA_DMA_MASK_BIT,[Default]), UsedName(MAC_ATOMIC_C_SIZE,[Default]), UsedName(NVDLA_VMOD_SDP_ERDMA_OUTPUT_THROUGHPUT,[Default]), UsedName(cdpConfiguration,[Default]), UsedName(NVDLA_VMOD_SDP_ERDMA_OUTPUT_THROUGHPUT_USE,[Default]), UsedName(NVDLA_MCIF_BURST_SIZE_LOG2,[Default]), UsedName(NVDLA_VMOD_SDP_NRDMA_OUTPUT_THROUGHPUT_USE,[Default]), UsedName(NVDLA_MEMORY_ATOMIC_WIDTH,[Default]), UsedName(NVDLA_VMOD_PRIMARY_BANDWIDTH,[Default]), UsedName(PDP_SINGLE_LBUF_DEPTH,[Default]), UsedName(NVDLA_BPE_LOG2,[Default]), UsedName(NVDLA_VMOD_SDP_BRDMA_OUTPUT_THROUGHPUT,[Default]), UsedName(RETIMING_ENABLE,[Default]), UsedName(SDP_EW_THROUGHPUT,[Default]), UsedName(NVDLA_CDP_MEM_ADDR_BW,[Default]), UsedName(PDP_ENABLE,[Default]), UsedName(RUBIK_ENABLE,[Default]), UsedName(NVDLA_CACC_SDP_WIDTH,[Default]), UsedName(NVDLA_SECONDARY_MEMIF_WIDTH,[Default]), UsedName(XSDB_SLV_DIS,[Default]), UsedName(NVDLA_CBUF_DEPTH_LOG2,[Default]), UsedName(NVDLA_MEM_ADDRESS_WIDTH,[Default]), UsedName(NVDLA_BPE,[Default]), UsedName(NVDLA_VMOD_DMA_LAT_FIFO_DEPTH_MAX,[Default]), UsedName(PRIMARY_MEMIF_WIDTH,[Default]), UsedName(MEM_ADDRESS_WIDTH,[Default]), UsedName(FPGA,[Default]), UsedName(NVDLA_MAC_ATOMIC_C_SIZE_LOG2,[Default]), UsedName(FEATURE_DATA_TYPE_INT8,[Default]), UsedName(NVDLA_MAC_ATOMIC_K_SIZE_LOG2,[Default]), UsedName(CDP_ENABLE,[Default]), UsedName(NVDLA_CDP_ICVTO_BWPE,[Default]), UsedName(NVDLA_CBUF_WIDTH_MUL2_LOG2,[Default]), UsedName(NVDLA_SDP_BN_THROUGHPUT,[Default]), UsedName(NVDLA_VMOD_PDP_RDMA_LATENCY_FIFO_DEPTH,[Default]), UsedName(NVDLA_RUBIK_ENABLE,[Default]), UsedName(BATCH_ENABLE,[Default]), UsedName(SDP_EW_ENABLE,[Default]), UsedName(NVDLA_WEIGHT_DATA_TYPE_INT8,[Default]), UsedName(NVDLA_VMOD_SDP_MRDMA_OUTPUT_THROUGHPUT_USE,[Default]), UsedName(NVDLA_CBUF_BANK_NUMBER,[Default]), UsedName(NVDLA_SECONDARY_MEMIF_LATENCY,[Default]), UsedName(NVDLA_VMOD_CDP_RDMA_OUTPUT_THROUGHPUT_USE,[Default]), UsedName(NV_FPGA_SYSTEM,[Default]), UsedName(NVDLA_PRIMARY_MEMIF_WIDTH,[Default]), UsedName(NVDLA_SECONDARY_MEMIF_MAX_BURST_LENGTH,[Default]), UsedName(NVDLA_DMA_RD_SIZE,[Default]), UsedName(NVDLA_VMOD_SDP_BRDMA_LATENCY_FIFO_DEPTH,[Default]), UsedName(SECONDARY_MEMIF_MAX_BURST_LENGTH,[Default]), UsedName(NVDLA_PDP_ENABLE,[Default]), UsedName(NVDLA_SDP_LUT_ENABLE,[Default]), UsedName(NVDLA_CBUF_BANK_DEPTH_LOG2,[Default]), UsedName(PDP_THROUGHPUT,[Default]), UsedName(NVDLA_SECONDARY_MEMIF_WIDTH_LOG2,[Default]), UsedName(CDP_THROUGHPUT,[Default]), UsedName(SECONDARY_MEMIF_ENABLE,[Default]), UsedName(NVDLA_MAC_ATOMIC_C_SIZE,[Default]), UsedName(NVDLA_BATCH_ENABLE,[Default]), UsedName(NVDLA_CBUF_BANK_NUMBER_LOG2,[Default]), UsedName(NVDLA_SECONDARY_MEMIF_ENABLE,[Default]), UsedName(NVDLA_CDP_THROUGHPUT,[Default]), UsedName(NVDLA_RETIMING_ENABLE,[Default]), UsedName(NVDLA_VMOD_SDP_ERDMA_LATENCY_FIFO_DEPTH,[Default]), UsedName(NVDLA_CDP_ENABLE,[Default]), UsedName(NVDLA_SDP_EW_ENABLE,[Default]), UsedName(NVDLA_CBUF_BANK_DEPTH,[Default]), UsedName(NUM_DMA_READ_CLIENTS,[Default]), UsedName(NVDLA_DMA_WR_SIZE,[Default]), UsedName(NVDLA_SDP_MAX_THROUGHPUT,[Default]), UsedName(NVDLA_VMOD_SDP_NRDMA_OUTPUT_THROUGHPUT,[Default]), UsedName(SDP_BS_ENABLE,[Default]), UsedName(NVDLA_MCIF_BURST_SIZE,[Default]), UsedName(PDP_SINGLE_LBUF_WIDTH,[Default]), UsedName(NVDLA_MAC_ATOMIC_K_SIZE_DIV2,[Default]), UsedName(NVDLA_DMA_RD_RSP,[Default]), UsedName(NVDLA_CBUF_WIDTH_LOG2,[Default]), UsedName(NVDLA_VMOD_SDP_MRDMA_LATENCY_FIFO_DEPTH,[Default]), UsedName(SYNTHESIS,[Default]), UsedName(WEIGHT_DATA_TYPE_INT8,[Default]), UsedName(CBUF_BANK_WIDTH,[Default]), UsedName(RUBIK_RESHAPE_ENABLE,[Default]), UsedName(NVDLA_CDP_DMAIF_BW,[Default]), UsedName(SDP_BN_THROUGHPUT,[Default]), UsedName(NVDLA_CDP_BWPE,[Default]), UsedName(NVDLA_SDP_BS_ENABLE,[Default]), UsedName(SDP_LUT_ENABLE,[Default]), UsedName(SECONDARY_MEMIF_LATENCY,[Default]), UsedName(NUM_DMA_WRITE_CLIENTS,[Default]), UsedName(NVDLA_SDP_BS_THROUGHPUT,[Default]), UsedName(SECONDARY_MEMIF_WIDTH,[Default]), UsedName(NVDLA_DMA_WR_REQ,[Default]), UsedName(BDMA_ENABLE,[Default]), UsedName(SDP_BS_THROUGHPUT,[Default]), UsedName(NV_FPGA_FIFOGEN,[Default]), UsedName(PRIMARY_MEMIF_LATENCY,[Default]), UsedName(NVDLA_DMA_RD_REQ,[Default]), UsedName(NVDLA_MAC_ATOMIC_K_SIZE,[Default]), UsedName(NVDLA_VMOD_SDP_NRDMA_LATENCY_FIFO_DEPTH,[Default]), UsedName(NVDLA_VMOD_SDP_MRDMA_OUTPUT_THROUGHPUT,[Default]), UsedName(NVDLA_FEATURE_DATA_TYPE_INT8,[Default]), UsedName(SDP_BN_ENABLE,[Default]), UsedName(NVDLA_SDP_EW_THROUGHPUT,[Default]), UsedName(NV_FPGA_UNIT,[Default]), UsedName(MAX_BATCH_SIZE,[Default]), UsedName(NVDLA_VMOD_SDP_BRDMA_OUTPUT_THROUGHPUT_USE,[Default]), UsedName(NVDLA_RUBIK_RESHAPE_ENABLE,[Default]), UsedName(CBUF_BANK_NUMBER,[Default]), UsedName(pINT8_BW,[Default]), UsedName(CBUF_BANK_DEPTH,[Default]), UsedName(NVDLA_CBUF_BANK_WIDTH,[Default]), UsedName(NVDLA_CDMA_GRAIN_MAX_BIT,[Default]), UsedName(VLIB_BYPASS_POWER_CG,[Default]), UsedName(NVDLA_VMOD_CDP_RDMA_LATENCY_FIFO_DEPTH,[Default]), UsedName(useFPGA,[Default]), UsedName(NVDLA_CBUF_BANK_WIDTH_LOG2,[Default]), UsedName(NVDLA_WINOGRAD_ENABLE,[Default]), UsedName(NVDLA_MEMIF_WIDTH,[Default]), UsedName(NVDLA_CACC_SDP_SINGLE_THROUGHPUT,[Default]), UsedName(NVDLA_PRIMARY_MEMIF_LATENCY,[Default]), UsedName(NVDLA_PDP_THROUGHPUT,[Default]), UsedName(MAC_ATOMIC_K_SIZE,[Default]), UsedName(NVDLA_DMA_WR_CMD,[Default]), UsedName(RUBIK_CONTRACT_ENABLE,[Default]), UsedName(NVDLA_MAX_BATCH_SIZE,[Default]), UsedName(DESIGNWARE_NOEXIST,[Default]), UsedName(MEMORY_ATOMIC_SIZE,[Default]), UsedName(NVDLA_NUM_DMA_READ_CLIENTS,[Default]), UsedName(NVDLA_SDP_EW_THROUGHPUT_LOG2,[Default]), UsedName(NVDLA_SDP2PDP_WIDTH,[Default]), UsedName(PRIMARY_MEMIF_MAX_BURST_LENGTH,[Default]), UsedName(WEIGHT_COMPRESSION_ENABLE,[Default]), UsedName(NVDLA_PRIMARY_MEMIF_WIDTH_LOG2,[Default]), UsedName(NVDLA_SDP_BN_ENABLE,[Default]), UsedName(NVDLA_MAC_RESULT_WIDTH,[Default]))) invalidates 1 classes due to The nvdla.cdpConfiguration has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(NVDLA_MEMORY_ATOMIC_LOG2,[Default]), UsedName(NVDLA_MEMORY_ATOMIC_SIZE,[Default]), UsedName(NVDLA_BDMA_ENABLE,[Default]), UsedName(NVDLA_VMOD_PDP_RDMA_OUTPUT_THROUGHPUT_USE,[Default]), UsedName(NVDLA_RUBIK_CONTRACT_ENABLE,[Default]), UsedName(WINOGRAD_ENABLE,[Default]), UsedName(NVDLA_CC_ATOMC_DIV_ATOMK,[Default]), UsedName(NVDLA_PRIMARY_MEMIF_MAX_BURST_LENGTH,[Default]), UsedName(NVDLA_CBUF_ENTRY_WIDTH,[Default]), UsedName(NVDLA_WEIGHT_COMPRESSION_ENABLE,[Default]), UsedName(NVDLA_DMA_MASK_BIT,[Default]), UsedName(MAC_ATOMIC_C_SIZE,[Default]), UsedName(NVDLA_VMOD_SDP_ERDMA_OUTPUT_THROUGHPUT,[Default]), UsedName(cdpConfiguration,[Default]), UsedName(NVDLA_VMOD_SDP_ERDMA_OUTPUT_THROUGHPUT_USE,[Default]), UsedName(NVDLA_MCIF_BURST_SIZE_LOG2,[Default]), UsedName(NVDLA_VMOD_SDP_NRDMA_OUTPUT_THROUGHPUT_USE,[Default]), UsedName(NVDLA_MEMORY_ATOMIC_WIDTH,[Default]), UsedName(NVDLA_VMOD_PRIMARY_BANDWIDTH,[Default]), UsedName(PDP_SINGLE_LBUF_DEPTH,[Default]), UsedName(NVDLA_BPE_LOG2,[Default]), UsedName(NVDLA_VMOD_SDP_BRDMA_OUTPUT_THROUGHPUT,[Default]), UsedName(RETIMING_ENABLE,[Default]), UsedName(SDP_EW_THROUGHPUT,[Default]), UsedName(NVDLA_CDP_MEM_ADDR_BW,[Default]), UsedName(PDP_ENABLE,[Default]), UsedName(RUBIK_ENABLE,[Default]), UsedName(NVDLA_CACC_SDP_WIDTH,[Default]), UsedName(NVDLA_SECONDARY_MEMIF_WIDTH,[Default]), UsedName(XSDB_SLV_DIS,[Default]), UsedName(NVDLA_CBUF_DEPTH_LOG2,[Default]), UsedName(NVDLA_MEM_ADDRESS_WIDTH,[Default]), UsedName(NVDLA_BPE,[Default]), UsedName(NVDLA_VMOD_DMA_LAT_FIFO_DEPTH_MAX,[Default]), UsedName(PRIMARY_MEMIF_WIDTH,[Default]), UsedName(MEM_ADDRESS_WIDTH,[Default]), UsedName(FPGA,[Default]), UsedName(NVDLA_MAC_ATOMIC_C_SIZE_LOG2,[Default]), UsedName(FEATURE_DATA_TYPE_INT8,[Default]), UsedName(NVDLA_MAC_ATOMIC_K_SIZE_LOG2,[Default]), UsedName(CDP_ENABLE,[Default]), UsedName(NVDLA_CDP_ICVTO_BWPE,[Default]), UsedName(NVDLA_CBUF_WIDTH_MUL2_LOG2,[Default]), UsedName(NVDLA_SDP_BN_THROUGHPUT,[Default]), UsedName(NVDLA_VMOD_PDP_RDMA_LATENCY_FIFO_DEPTH,[Default]), UsedName(NVDLA_RUBIK_ENABLE,[Default]), UsedName(BATCH_ENABLE,[Default]), UsedName(SDP_EW_ENABLE,[Default]), UsedName(NVDLA_WEIGHT_DATA_TYPE_INT8,[Default]), UsedName(NVDLA_VMOD_SDP_MRDMA_OUTPUT_THROUGHPUT_USE,[Default]), UsedName(NVDLA_CBUF_BANK_NUMBER,[Default]), UsedName(NVDLA_SECONDARY_MEMIF_LATENCY,[Default]), UsedName(NVDLA_VMOD_CDP_RDMA_OUTPUT_THROUGHPUT_USE,[Default]), UsedName(NV_FPGA_SYSTEM,[Default]), UsedName(NVDLA_PRIMARY_MEMIF_WIDTH,[Default]), UsedName(NVDLA_SECONDARY_MEMIF_MAX_BURST_LENGTH,[Default]), UsedName(NVDLA_DMA_RD_SIZE,[Default]), UsedName(NVDLA_VMOD_SDP_BRDMA_LATENCY_FIFO_DEPTH,[Default]), UsedName(SECONDARY_MEMIF_MAX_BURST_LENGTH,[Default]), UsedName(NVDLA_PDP_ENABLE,[Default]), UsedName(NVDLA_SDP_LUT_ENABLE,[Default]), UsedName(NVDLA_CBUF_BANK_DEPTH_LOG2,[Default]), UsedName(PDP_THROUGHPUT,[Default]), UsedName(NVDLA_SECONDARY_MEMIF_WIDTH_LOG2,[Default]), UsedName(CDP_THROUGHPUT,[Default]), UsedName(SECONDARY_MEMIF_ENABLE,[Default]), UsedName(NVDLA_MAC_ATOMIC_C_SIZE,[Default]), UsedName(NVDLA_BATCH_ENABLE,[Default]), UsedName(NVDLA_CBUF_BANK_NUMBER_LOG2,[Default]), UsedName(NVDLA_SECONDARY_MEMIF_ENABLE,[Default]), UsedName(NVDLA_CDP_THROUGHPUT,[Default]), UsedName(NVDLA_RETIMING_ENABLE,[Default]), UsedName(NVDLA_VMOD_SDP_ERDMA_LATENCY_FIFO_DEPTH,[Default]), UsedName(NVDLA_CDP_ENABLE,[Default]), UsedName(NVDLA_SDP_EW_ENABLE,[Default]), UsedName(NVDLA_CBUF_BANK_DEPTH,[Default]), UsedName(NUM_DMA_READ_CLIENTS,[Default]), UsedName(NVDLA_DMA_WR_SIZE,[Default]), UsedName(NVDLA_SDP_MAX_THROUGHPUT,[Default]), UsedName(NVDLA_VMOD_SDP_NRDMA_OUTPUT_THROUGHPUT,[Default]), UsedName(SDP_BS_ENABLE,[Default]), UsedName(NVDLA_MCIF_BURST_SIZE,[Default]), UsedName(PDP_SINGLE_LBUF_WIDTH,[Default]), UsedName(NVDLA_MAC_ATOMIC_K_SIZE_DIV2,[Default]), UsedName(NVDLA_DMA_RD_RSP,[Default]), UsedName(NVDLA_CBUF_WIDTH_LOG2,[Default]), UsedName(NVDLA_VMOD_SDP_MRDMA_LATENCY_FIFO_DEPTH,[Default]), UsedName(SYNTHESIS,[Default]), UsedName(WEIGHT_DATA_TYPE_INT8,[Default]), UsedName(CBUF_BANK_WIDTH,[Default]), UsedName(RUBIK_RESHAPE_ENABLE,[Default]), UsedName(NVDLA_CDP_DMAIF_BW,[Default]), UsedName(SDP_BN_THROUGHPUT,[Default]), UsedName(NVDLA_CDP_BWPE,[Default]), UsedName(NVDLA_SDP_BS_ENABLE,[Default]), UsedName(SDP_LUT_ENABLE,[Default]), UsedName(SECONDARY_MEMIF_LATENCY,[Default]), UsedName(NUM_DMA_WRITE_CLIENTS,[Default]), UsedName(NVDLA_SDP_BS_THROUGHPUT,[Default]), UsedName(SECONDARY_MEMIF_WIDTH,[Default]), UsedName(NVDLA_DMA_WR_REQ,[Default]), UsedName(BDMA_ENABLE,[Default]), UsedName(SDP_BS_THROUGHPUT,[Default]), UsedName(NV_FPGA_FIFOGEN,[Default]), UsedName(PRIMARY_MEMIF_LATENCY,[Default]), UsedName(NVDLA_DMA_RD_REQ,[Default]), UsedName(NVDLA_MAC_ATOMIC_K_SIZE,[Default]), UsedName(NVDLA_VMOD_SDP_NRDMA_LATENCY_FIFO_DEPTH,[Default]), UsedName(NVDLA_VMOD_SDP_MRDMA_OUTPUT_THROUGHPUT,[Default]), UsedName(NVDLA_FEATURE_DATA_TYPE_INT8,[Default]), UsedName(SDP_BN_ENABLE,[Default]), UsedName(NVDLA_SDP_EW_THROUGHPUT,[Default]), UsedName(NV_FPGA_UNIT,[Default]), UsedName(MAX_BATCH_SIZE,[Default]), UsedName(NVDLA_VMOD_SDP_BRDMA_OUTPUT_THROUGHPUT_USE,[Default]), UsedName(NVDLA_RUBIK_RESHAPE_ENABLE,[Default]), UsedName(CBUF_BANK_NUMBER,[Default]), UsedName(pINT8_BW,[Default]), UsedName(CBUF_BANK_DEPTH,[Default]), UsedName(NVDLA_CBUF_BANK_WIDTH,[Default]), UsedName(NVDLA_CDMA_GRAIN_MAX_BIT,[Default]), UsedName(VLIB_BYPASS_POWER_CG,[Default]), UsedName(NVDLA_VMOD_CDP_RDMA_LATENCY_FIFO_DEPTH,[Default]), UsedName(useFPGA,[Default]), UsedName(NVDLA_CBUF_BANK_WIDTH_LOG2,[Default]), UsedName(NVDLA_WINOGRAD_ENABLE,[Default]), UsedName(NVDLA_MEMIF_WIDTH,[Default]), UsedName(NVDLA_CACC_SDP_SINGLE_THROUGHPUT,[Default]), UsedName(NVDLA_PRIMARY_MEMIF_LATENCY,[Default]), UsedName(NVDLA_PDP_THROUGHPUT,[Default]), UsedName(MAC_ATOMIC_K_SIZE,[Default]), UsedName(NVDLA_DMA_WR_CMD,[Default]), UsedName(RUBIK_CONTRACT_ENABLE,[Default]), UsedName(NVDLA_MAX_BATCH_SIZE,[Default]), UsedName(DESIGNWARE_NOEXIST,[Default]), UsedName(MEMORY_ATOMIC_SIZE,[Default]), UsedName(NVDLA_NUM_DMA_READ_CLIENTS,[Default]), UsedName(NVDLA_SDP_EW_THROUGHPUT_LOG2,[Default]), UsedName(NVDLA_SDP2PDP_WIDTH,[Default]), UsedName(PRIMARY_MEMIF_MAX_BURST_LENGTH,[Default]), UsedName(WEIGHT_COMPRESSION_ENABLE,[Default]), UsedName(NVDLA_PRIMARY_MEMIF_WIDTH_LOG2,[Default]), UsedName(NVDLA_SDP_BN_ENABLE,[Default]), UsedName(NVDLA_MAC_RESULT_WIDTH,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(nvdla.cdpConfiguration)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from nvdla.NV_NVDLA_SDP_CORE_gate...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(nvdla.NV_NVDLA_SDP_CORE_gate)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(nvdla.NV_NVDLA_SDP_CORE_gate)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(nvdla.NV_NVDLA_SDP_CORE_gate,ModifiedNames(changes = UsedName(global_clk_ovr_on_sync,[Default]), UsedName(portsContains,[Default]), UsedName(toString,[Default]), UsedName(circuitName,[Default]), UsedName(wait,[Default]), UsedName(override_clock,[Default]), UsedName(toNamed,[Default]), UsedName(clone,[Default]), UsedName(parentModName,[Default]), UsedName(nvdla_core_clk_slcg_2_en,[Default]), UsedName(getClass,[Default]), UsedName(IO,[Default]), UsedName(getRef,[Default]), UsedName(nvdla_core_clk_slcg_2,[Default]), UsedName(bcore_slcg_en,[Default]), UsedName(_onModuleClose,[Default]), UsedName(nvdla;NV_NVDLA_SDP_CORE_gate;init;,[Default]), UsedName(io,[Default]), UsedName(_namespace,[Default]), UsedName(_parent,[Default]), UsedName(parentPathName,[Default]), UsedName(instanceName,[Default]), UsedName(nameIds,[Default]), UsedName(==,[Default]), UsedName(NV_NVDLA_SDP_CORE_gate,[Default]), UsedName(portsSize,[Default]), UsedName($init$,[Default]), UsedName($asInstanceOf,[Default]), UsedName(addId,[Default]), UsedName(nvdla_gated_bcore_clk,[Default]), UsedName(annotate,[Default]), UsedName(getCommands,[Default]), UsedName(clock,[Default]), UsedName(nvdla_core_clk_slcg_1_en,[Default]), UsedName(dla_clk_ovr_on_sync,[Default]), UsedName(nvdla_core_clk_slcg_1,[Default]), UsedName($isInstanceOf,[Default]), UsedName(nvdla_core_clk_slcg_0,[Default]), UsedName(ncore_slcg_en,[Default]), UsedName(getPorts,[Default]), UsedName(generateComponent,[Default]), UsedName(reset,[Default]), UsedName(ecore_slcg_en,[Default]), UsedName(nvdla_core_clk,[Default]), UsedName(getIds,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(forceName,[Default]), UsedName(notifyAll,[Default]), UsedName(pathName,[Default]), UsedName(##,[Default]), UsedName(getModulePorts,[Default]), UsedName(suggestName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(desiredName,[Default]), UsedName(getPublicFields,[Default]), UsedName(tmc2slcg_disable_clock_gating,[Default]), UsedName(override_reset,[Default]), UsedName(_id,[Default]), UsedName(nvdla_core_clk_slcg_0_en,[Default]), UsedName(addPostnameHook,[Default]), UsedName(_component,[Default]), UsedName(name,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(addCommand,[Default]), UsedName(synchronized,[Default]), UsedName(nvdla_gated_ncore_clk,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(nvdla_gated_ecore_clk,[Default]), UsedName(equals,[Default]), UsedName(_closed,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(ne,[Default]))) invalidates 1 classes due to The nvdla.NV_NVDLA_SDP_CORE_gate has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(global_clk_ovr_on_sync,[Default]), UsedName(portsContains,[Default]), UsedName(toString,[Default]), UsedName(circuitName,[Default]), UsedName(wait,[Default]), UsedName(override_clock,[Default]), UsedName(toNamed,[Default]), UsedName(clone,[Default]), UsedName(parentModName,[Default]), UsedName(nvdla_core_clk_slcg_2_en,[Default]), UsedName(getClass,[Default]), UsedName(IO,[Default]), UsedName(getRef,[Default]), UsedName(nvdla_core_clk_slcg_2,[Default]), UsedName(bcore_slcg_en,[Default]), UsedName(_onModuleClose,[Default]), UsedName(nvdla;NV_NVDLA_SDP_CORE_gate;init;,[Default]), UsedName(io,[Default]), UsedName(_namespace,[Default]), UsedName(_parent,[Default]), UsedName(parentPathName,[Default]), UsedName(instanceName,[Default]), UsedName(nameIds,[Default]), UsedName(==,[Default]), UsedName(NV_NVDLA_SDP_CORE_gate,[Default]), UsedName(portsSize,[Default]), UsedName($init$,[Default]), UsedName($asInstanceOf,[Default]), UsedName(addId,[Default]), UsedName(nvdla_gated_bcore_clk,[Default]), UsedName(annotate,[Default]), UsedName(getCommands,[Default]), UsedName(clock,[Default]), UsedName(nvdla_core_clk_slcg_1_en,[Default]), UsedName(dla_clk_ovr_on_sync,[Default]), UsedName(nvdla_core_clk_slcg_1,[Default]), UsedName($isInstanceOf,[Default]), UsedName(nvdla_core_clk_slcg_0,[Default]), UsedName(ncore_slcg_en,[Default]), UsedName(getPorts,[Default]), UsedName(generateComponent,[Default]), UsedName(reset,[Default]), UsedName(ecore_slcg_en,[Default]), UsedName(nvdla_core_clk,[Default]), UsedName(getIds,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(forceName,[Default]), UsedName(notifyAll,[Default]), UsedName(pathName,[Default]), UsedName(##,[Default]), UsedName(getModulePorts,[Default]), UsedName(suggestName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(desiredName,[Default]), UsedName(getPublicFields,[Default]), UsedName(tmc2slcg_disable_clock_gating,[Default]), UsedName(override_reset,[Default]), UsedName(_id,[Default]), UsedName(nvdla_core_clk_slcg_0_en,[Default]), UsedName(addPostnameHook,[Default]), UsedName(_component,[Default]), UsedName(name,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(addCommand,[Default]), UsedName(synchronized,[Default]), UsedName(nvdla_gated_ncore_clk,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(nvdla_gated_ecore_clk,[Default]), UsedName(equals,[Default]), UsedName(_closed,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(ne,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(nvdla.NV_NVDLA_SDP_CORE_gate)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from nvdla.NV_NVDLA_SDP_brdma...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(nvdla.NV_NVDLA_SDP_brdma)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(nvdla.NV_NVDLA_SDP_brdma)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(nvdla.NV_NVDLA_SDP_brdma,ModifiedNames(changes = UsedName(global_clk_ovr_on_sync,[Default]), UsedName(brdma_enable,[Default]), UsedName(portsContains,[Default]), UsedName(toString,[Default]), UsedName(circuitName,[Default]), UsedName(wait,[Default]), UsedName(override_clock,[Default]), UsedName(toNamed,[Default]), UsedName(cfg_clk_en,[Default]), UsedName(clone,[Default]), UsedName(parentModName,[Default]), UsedName(getClass,[Default]), UsedName(IO,[Default]), UsedName(getRef,[Default]), UsedName(_onModuleClose,[Default]), UsedName(io,[Default]), UsedName(_namespace,[Default]), UsedName(_parent,[Default]), UsedName(parentPathName,[Default]), UsedName(instanceName,[Default]), UsedName(nameIds,[Default]), UsedName(==,[Default]), UsedName(portsSize,[Default]), UsedName($init$,[Default]), UsedName($asInstanceOf,[Default]), UsedName(addId,[Default]), UsedName(annotate,[Default]), UsedName(getCommands,[Default]), UsedName(clock,[Default]), UsedName(dla_clk_ovr_on_sync,[Default]), UsedName(brdma_disable,[Default]), UsedName(brdma_slcg_op_en,[Default]), UsedName($isInstanceOf,[Default]), UsedName(nvdla_core_clk_slcg_0,[Default]), UsedName(NV_NVDLA_SDP_brdma,[Default]), UsedName(nvdla_gated_clk,[Default]), UsedName(getPorts,[Default]), UsedName(generateComponent,[Default]), UsedName(reset,[Default]), UsedName(nvdla_core_clk,[Default]), UsedName(getIds,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(forceName,[Default]), UsedName(notifyAll,[Default]), UsedName(pathName,[Default]), UsedName(##,[Default]), UsedName(getModulePorts,[Default]), UsedName(suggestName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(desiredName,[Default]), UsedName(getPublicFields,[Default]), UsedName(tmc2slcg_disable_clock_gating,[Default]), UsedName(override_reset,[Default]), UsedName(_id,[Default]), UsedName(nvdla_core_clk_slcg_0_en,[Default]), UsedName(addPostnameHook,[Default]), UsedName(_component,[Default]), UsedName(name,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(addCommand,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(nvdla;NV_NVDLA_SDP_brdma;init;,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(_closed,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(ne,[Default]))) invalidates 1 classes due to The nvdla.NV_NVDLA_SDP_brdma has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(global_clk_ovr_on_sync,[Default]), UsedName(brdma_enable,[Default]), UsedName(portsContains,[Default]), UsedName(toString,[Default]), UsedName(circuitName,[Default]), UsedName(wait,[Default]), UsedName(override_clock,[Default]), UsedName(toNamed,[Default]), UsedName(cfg_clk_en,[Default]), UsedName(clone,[Default]), UsedName(parentModName,[Default]), UsedName(getClass,[Default]), UsedName(IO,[Default]), UsedName(getRef,[Default]), UsedName(_onModuleClose,[Default]), UsedName(io,[Default]), UsedName(_namespace,[Default]), UsedName(_parent,[Default]), UsedName(parentPathName,[Default]), UsedName(instanceName,[Default]), UsedName(nameIds,[Default]), UsedName(==,[Default]), UsedName(portsSize,[Default]), UsedName($init$,[Default]), UsedName($asInstanceOf,[Default]), UsedName(addId,[Default]), UsedName(annotate,[Default]), UsedName(getCommands,[Default]), UsedName(clock,[Default]), UsedName(dla_clk_ovr_on_sync,[Default]), UsedName(brdma_disable,[Default]), UsedName(brdma_slcg_op_en,[Default]), UsedName($isInstanceOf,[Default]), UsedName(nvdla_core_clk_slcg_0,[Default]), UsedName(NV_NVDLA_SDP_brdma,[Default]), UsedName(nvdla_gated_clk,[Default]), UsedName(getPorts,[Default]), UsedName(generateComponent,[Default]), UsedName(reset,[Default]), UsedName(nvdla_core_clk,[Default]), UsedName(getIds,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(forceName,[Default]), UsedName(notifyAll,[Default]), UsedName(pathName,[Default]), UsedName(##,[Default]), UsedName(getModulePorts,[Default]), UsedName(suggestName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(desiredName,[Default]), UsedName(getPublicFields,[Default]), UsedName(tmc2slcg_disable_clock_gating,[Default]), UsedName(override_reset,[Default]), UsedName(_id,[Default]), UsedName(nvdla_core_clk_slcg_0_en,[Default]), UsedName(addPostnameHook,[Default]), UsedName(_component,[Default]), UsedName(name,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(addCommand,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(nvdla;NV_NVDLA_SDP_brdma;init;,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(_closed,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(ne,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(nvdla.NV_NVDLA_SDP_brdma)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from nvidia.blocks.ip.dla.nvdla...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(nvidia.blocks.ip.dla.nvdla)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(nvidia.blocks.ip.dla.nvdla)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(nvidia.blocks.ip.dla.nvdla,ModifiedNames(changes = UsedName(portsContains,[Default]), UsedName(ar_arready,[Default]), UsedName(toString,[Default]), UsedName(circuitName,[Default]), UsedName(wait,[Default]), UsedName(toNamed,[Default]), UsedName(nvdla_core2dbb_aw_awready,[Default]), UsedName(clone,[Default]), UsedName(parentModName,[Default]), UsedName(getClass,[Default]), UsedName(pwdata,[Default]), UsedName(IO,[Default]), UsedName(getRef,[Default]), UsedName(aw_awsize,[Default]), UsedName(nvdla_core2dbb_aw_awsize,[Default]), UsedName(_onModuleClose,[Default]), UsedName(nvdla_core2dbb_b_bready,[Default]), UsedName(w_wstrb,[Default]), UsedName(nvdla_core2dbb_ar_arid,[Default]), UsedName(io,[Default]), UsedName(_namespace,[Default]), UsedName(_parent,[Default]), UsedName(parentPathName,[Default]), UsedName(instanceName,[Default]), UsedName(nvdla_core2dbb_r_rid,[Default]), UsedName(nvdla_core2dbb_r_rvalid,[Default]), UsedName(nameIds,[Default]), UsedName(==,[Default]), UsedName(portsSize,[Default]), UsedName($init$,[Default]), UsedName(aw_awid,[Default]), UsedName($asInstanceOf,[Default]), UsedName(r_rvalid,[Default]), UsedName(addId,[Default]), UsedName(b_bvalid,[Default]), UsedName(annotate,[Default]), UsedName(csb_rstn,[Default]), UsedName(ar_araddr,[Default]), UsedName(core_clk,[Default]), UsedName(nvdla_core2dbb_aw_awvalid,[Default]), UsedName(nvidia;blocks;ip;dla;nvdla;init;,[Default]), UsedName(rstn,[Default]), UsedName($isInstanceOf,[Default]), UsedName(r_rid,[Default]), UsedName(w_wlast,[Default]), UsedName(ar_arlen,[Default]), UsedName(csb_clk,[Default]), UsedName(nvdla_core2dbb_ar_arvalid,[Default]), UsedName(nvdla_core2dbb_w_wready,[Default]), UsedName(w_wdata,[Default]), UsedName(nvdla_core2dbb_w_wvalid,[Default]), UsedName(generateComponent,[Default]), UsedName(params,[Default]), UsedName(nvdla_core2dbb_w_wlast,[Default]), UsedName(aw_awlen,[Default]), UsedName(dla_intr,[Default]), UsedName(nvdla_core2dbb_w_wdata,[Default]), UsedName(getIds,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(nvdla_core2dbb_r_rdata,[Default]), UsedName(r_rready,[Default]), UsedName(w_wvalid,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(forceName,[Default]), UsedName(notifyAll,[Default]), UsedName(pathName,[Default]), UsedName(nvdla_core2dbb_r_rlast,[Default]), UsedName(##,[Default]), UsedName(getModulePorts,[Default]), UsedName(psel,[Default]), UsedName(suggestName,[Default]), UsedName(aw_awvalid,[Default]), UsedName(asInstanceOf,[Default]), UsedName(nvdla_core2dbb_aw_awid,[Default]), UsedName(desiredName,[Default]), UsedName(prdata,[Default]), UsedName(pwrite,[Default]), UsedName(getPublicFields,[Default]), UsedName(b_bid,[Default]), UsedName(nvdla_core2dbb_r_rready,[Default]), UsedName(nvdla,[Default]), UsedName(ar_arsize,[Default]), UsedName(_id,[Default]), UsedName(nvdla_core2dbb_b_bvalid,[Default]), UsedName(nvdla_core2dbb_aw_awlen,[Default]), UsedName(addPostnameHook,[Default]), UsedName(nvdla_core2cvsram,[Default]), UsedName(_component,[Default]), UsedName(nvdla_core2dbb_w_wstrb,[Default]), UsedName(name,[Default]), UsedName(initializeInParent,[Default]), UsedName(ar_arid,[Default]), UsedName(setRef,[Default]), UsedName(nvdla_core2dbb_b_bid,[Default]), UsedName(nvdla_core2dbb_ar_arlen,[Default]), UsedName(nvdla_core2dbb_ar_arready,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(w_wready,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(ar_arvalid,[Default]), UsedName(nvdla_core2dbb_ar_araddr,[Default]), UsedName(nvdla_core2dbb_aw_awaddr,[Default]), UsedName(aw_awaddr,[Default]), UsedName(_closed,[Default]), UsedName(hashCode,[Default]), UsedName(paddr,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(penable,[Default]), UsedName(isInstanceOf,[Default]), UsedName(r_rdata,[Default]), UsedName(aw_awready,[Default]), UsedName(pready,[Default]), UsedName(r_rlast,[Default]), UsedName(nvdla_core2dbb_ar_arsize,[Default]), UsedName(b_bready,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(ne,[Default]))) invalidates 1 classes due to The nvidia.blocks.ip.dla.nvdla has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(portsContains,[Default]), UsedName(ar_arready,[Default]), UsedName(toString,[Default]), UsedName(circuitName,[Default]), UsedName(wait,[Default]), UsedName(toNamed,[Default]), UsedName(nvdla_core2dbb_aw_awready,[Default]), UsedName(clone,[Default]), UsedName(parentModName,[Default]), UsedName(getClass,[Default]), UsedName(pwdata,[Default]), UsedName(IO,[Default]), UsedName(getRef,[Default]), UsedName(aw_awsize,[Default]), UsedName(nvdla_core2dbb_aw_awsize,[Default]), UsedName(_onModuleClose,[Default]), UsedName(nvdla_core2dbb_b_bready,[Default]), UsedName(w_wstrb,[Default]), UsedName(nvdla_core2dbb_ar_arid,[Default]), UsedName(io,[Default]), UsedName(_namespace,[Default]), UsedName(_parent,[Default]), UsedName(parentPathName,[Default]), UsedName(instanceName,[Default]), UsedName(nvdla_core2dbb_r_rid,[Default]), UsedName(nvdla_core2dbb_r_rvalid,[Default]), UsedName(nameIds,[Default]), UsedName(==,[Default]), UsedName(portsSize,[Default]), UsedName($init$,[Default]), UsedName(aw_awid,[Default]), UsedName($asInstanceOf,[Default]), UsedName(r_rvalid,[Default]), UsedName(addId,[Default]), UsedName(b_bvalid,[Default]), UsedName(annotate,[Default]), UsedName(csb_rstn,[Default]), UsedName(ar_araddr,[Default]), UsedName(core_clk,[Default]), UsedName(nvdla_core2dbb_aw_awvalid,[Default]), UsedName(nvidia;blocks;ip;dla;nvdla;init;,[Default]), UsedName(rstn,[Default]), UsedName($isInstanceOf,[Default]), UsedName(r_rid,[Default]), UsedName(w_wlast,[Default]), UsedName(ar_arlen,[Default]), UsedName(csb_clk,[Default]), UsedName(nvdla_core2dbb_ar_arvalid,[Default]), UsedName(nvdla_core2dbb_w_wready,[Default]), UsedName(w_wdata,[Default]), UsedName(nvdla_core2dbb_w_wvalid,[Default]), UsedName(generateComponent,[Default]), UsedName(params,[Default]), UsedName(nvdla_core2dbb_w_wlast,[Default]), UsedName(aw_awlen,[Default]), UsedName(dla_intr,[Default]), UsedName(nvdla_core2dbb_w_wdata,[Default]), UsedName(getIds,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(nvdla_core2dbb_r_rdata,[Default]), UsedName(r_rready,[Default]), UsedName(w_wvalid,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(forceName,[Default]), UsedName(notifyAll,[Default]), UsedName(pathName,[Default]), UsedName(nvdla_core2dbb_r_rlast,[Default]), UsedName(##,[Default]), UsedName(getModulePorts,[Default]), UsedName(psel,[Default]), UsedName(suggestName,[Default]), UsedName(aw_awvalid,[Default]), UsedName(asInstanceOf,[Default]), UsedName(nvdla_core2dbb_aw_awid,[Default]), UsedName(desiredName,[Default]), UsedName(prdata,[Default]), UsedName(pwrite,[Default]), UsedName(getPublicFields,[Default]), UsedName(b_bid,[Default]), UsedName(nvdla_core2dbb_r_rready,[Default]), UsedName(nvdla,[Default]), UsedName(ar_arsize,[Default]), UsedName(_id,[Default]), UsedName(nvdla_core2dbb_b_bvalid,[Default]), UsedName(nvdla_core2dbb_aw_awlen,[Default]), UsedName(addPostnameHook,[Default]), UsedName(nvdla_core2cvsram,[Default]), UsedName(_component,[Default]), UsedName(nvdla_core2dbb_w_wstrb,[Default]), UsedName(name,[Default]), UsedName(initializeInParent,[Default]), UsedName(ar_arid,[Default]), UsedName(setRef,[Default]), UsedName(nvdla_core2dbb_b_bid,[Default]), UsedName(nvdla_core2dbb_ar_arlen,[Default]), UsedName(nvdla_core2dbb_ar_arready,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(w_wready,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(ar_arvalid,[Default]), UsedName(nvdla_core2dbb_ar_araddr,[Default]), UsedName(nvdla_core2dbb_aw_awaddr,[Default]), UsedName(aw_awaddr,[Default]), UsedName(_closed,[Default]), UsedName(hashCode,[Default]), UsedName(paddr,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(penable,[Default]), UsedName(isInstanceOf,[Default]), UsedName(r_rdata,[Default]), UsedName(aw_awready,[Default]), UsedName(pready,[Default]), UsedName(r_rlast,[Default]), UsedName(nvdla_core2dbb_ar_arsize,[Default]), UsedName(b_bready,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(ne,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(nvidia.blocks.ip.dla.nvdla)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from cora.RED_CORA_MATRIX_v2v_fp_noshareFMA...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(cora.RED_CORA_MATRIX_v2v_fp_noshareFMA)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(cora.RED_CORA_MATRIX_v2v_fp_noshareFMA)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of cora.RED_CORA_MATRIX_v2m: Set(UsedName(io,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(cora.RED_CORA_MATRIX_v2v_fp_noshareFMA,ModifiedNames(changes = UsedName(umac,[Default]), UsedName(io,[Default]), UsedName(nvdla_core_clk,[Default]), UsedName(stat_actv_nz,[Default]), UsedName(tr_actv_nz,[Default]))) invalidates 2 classes due to The cora.RED_CORA_MATRIX_v2v_fp_noshareFMA has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(umac,[Default]), UsedName(io,[Default]), UsedName(nvdla_core_clk,[Default]), UsedName(stat_actv_nz,[Default]), UsedName(tr_actv_nz,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(cora.RED_CORA_MATRIX_v2v_fp_noshareFMA)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(cora.RED_CORA_MATRIX_v2m)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from nvdla.NV_NVDLA_SDP_HLS_sync2data...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(nvdla.NV_NVDLA_SDP_HLS_sync2data)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(nvdla.NV_NVDLA_SDP_HLS_sync2data)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(nvdla.NV_NVDLA_SDP_HLS_sync2data,ModifiedNames(changes = UsedName(portsContains,[Default]), UsedName(toString,[Default]), UsedName(circuitName,[Default]), UsedName(wait,[Default]), UsedName(override_clock,[Default]), UsedName(toNamed,[Default]), UsedName(clone,[Default]), UsedName(parentModName,[Default]), UsedName(getClass,[Default]), UsedName(IO,[Default]), UsedName(getRef,[Default]), UsedName(data1_out,[Default]), UsedName(data1_in,[Default]), UsedName(_onModuleClose,[Default]), UsedName(NV_NVDLA_SDP_HLS_sync2data,[Default]), UsedName(io,[Default]), UsedName(_namespace,[Default]), UsedName(chn1_in_pvld,[Default]), UsedName(_parent,[Default]), UsedName(parentPathName,[Default]), UsedName(instanceName,[Default]), UsedName(nameIds,[Default]), UsedName(==,[Default]), UsedName(portsSize,[Default]), UsedName($init$,[Default]), UsedName($asInstanceOf,[Default]), UsedName(addId,[Default]), UsedName(annotate,[Default]), UsedName(getCommands,[Default]), UsedName(clock,[Default]), UsedName(nvdla;NV_NVDLA_SDP_HLS_sync2data;init;,[Default]), UsedName(data2_out,[Default]), UsedName(chn2_in_prdy,[Default]), UsedName(chn_out_prdy,[Default]), UsedName($isInstanceOf,[Default]), UsedName(chn_out_pvld,[Default]), UsedName(data2_in,[Default]), UsedName(DATA1_WIDTH,[Default]), UsedName(getPorts,[Default]), UsedName(generateComponent,[Default]), UsedName(reset,[Default]), UsedName(getIds,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(forceName,[Default]), UsedName(notifyAll,[Default]), UsedName(pathName,[Default]), UsedName(##,[Default]), UsedName(chn2_in_pvld,[Default]), UsedName(getModulePorts,[Default]), UsedName(suggestName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(desiredName,[Default]), UsedName(chn1_en,[Default]), UsedName(getPublicFields,[Default]), UsedName(override_reset,[Default]), UsedName(_id,[Default]), UsedName(addPostnameHook,[Default]), UsedName(chn1_in_prdy,[Default]), UsedName(_component,[Default]), UsedName(chn2_en,[Default]), UsedName(name,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(addCommand,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(DATA2_WIDTH,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(_closed,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(ne,[Default]))) invalidates 1 classes due to The nvdla.NV_NVDLA_SDP_HLS_sync2data has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(portsContains,[Default]), UsedName(toString,[Default]), UsedName(circuitName,[Default]), UsedName(wait,[Default]), UsedName(override_clock,[Default]), UsedName(toNamed,[Default]), UsedName(clone,[Default]), UsedName(parentModName,[Default]), UsedName(getClass,[Default]), UsedName(IO,[Default]), UsedName(getRef,[Default]), UsedName(data1_out,[Default]), UsedName(data1_in,[Default]), UsedName(_onModuleClose,[Default]), UsedName(NV_NVDLA_SDP_HLS_sync2data,[Default]), UsedName(io,[Default]), UsedName(_namespace,[Default]), UsedName(chn1_in_pvld,[Default]), UsedName(_parent,[Default]), UsedName(parentPathName,[Default]), UsedName(instanceName,[Default]), UsedName(nameIds,[Default]), UsedName(==,[Default]), UsedName(portsSize,[Default]), UsedName($init$,[Default]), UsedName($asInstanceOf,[Default]), UsedName(addId,[Default]), UsedName(annotate,[Default]), UsedName(getCommands,[Default]), UsedName(clock,[Default]), UsedName(nvdla;NV_NVDLA_SDP_HLS_sync2data;init;,[Default]), UsedName(data2_out,[Default]), UsedName(chn2_in_prdy,[Default]), UsedName(chn_out_prdy,[Default]), UsedName($isInstanceOf,[Default]), UsedName(chn_out_pvld,[Default]), UsedName(data2_in,[Default]), UsedName(DATA1_WIDTH,[Default]), UsedName(getPorts,[Default]), UsedName(generateComponent,[Default]), UsedName(reset,[Default]), UsedName(getIds,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(forceName,[Default]), UsedName(notifyAll,[Default]), UsedName(pathName,[Default]), UsedName(##,[Default]), UsedName(chn2_in_pvld,[Default]), UsedName(getModulePorts,[Default]), UsedName(suggestName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(desiredName,[Default]), UsedName(chn1_en,[Default]), UsedName(getPublicFields,[Default]), UsedName(override_reset,[Default]), UsedName(_id,[Default]), UsedName(addPostnameHook,[Default]), UsedName(chn1_in_prdy,[Default]), UsedName(_component,[Default]), UsedName(chn2_en,[Default]), UsedName(name,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(addCommand,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(DATA2_WIDTH,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(_closed,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(ne,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(nvdla.NV_NVDLA_SDP_HLS_sync2data)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from nvdla.NV_NVDLA_SDP_CORE_pack...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(nvdla.NV_NVDLA_SDP_CORE_pack)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(nvdla.NV_NVDLA_SDP_CORE_pack)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(nvdla.NV_NVDLA_SDP_CORE_pack,ModifiedNames(changes = UsedName(portsContains,[Default]), UsedName(toString,[Default]), UsedName(circuitName,[Default]), UsedName(wait,[Default]), UsedName(override_clock,[Default]), UsedName(toNamed,[Default]), UsedName(clone,[Default]), UsedName(parentModName,[Default]), UsedName(getClass,[Default]), UsedName(IO,[Default]), UsedName(getRef,[Default]), UsedName(inp_data,[Default]), UsedName(_onModuleClose,[Default]), UsedName(io,[Default]), UsedName(_namespace,[Default]), UsedName(_parent,[Default]), UsedName(parentPathName,[Default]), UsedName(instanceName,[Default]), UsedName(OW,[Default]), UsedName(nameIds,[Default]), UsedName(==,[Default]), UsedName(portsSize,[Default]), UsedName(RATIO,[Default]), UsedName($init$,[Default]), UsedName(nvdla;NV_NVDLA_SDP_CORE_pack;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName(addId,[Default]), UsedName(annotate,[Default]), UsedName(getCommands,[Default]), UsedName(clock,[Default]), UsedName($isInstanceOf,[Default]), UsedName(getPorts,[Default]), UsedName(out_data,[Default]), UsedName(generateComponent,[Default]), UsedName(NV_NVDLA_SDP_CORE_pack,[Default]), UsedName(reset,[Default]), UsedName(nvdla_core_clk,[Default]), UsedName(getIds,[Default]), UsedName(out_prdy,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(forceName,[Default]), UsedName(notifyAll,[Default]), UsedName(pathName,[Default]), UsedName(##,[Default]), UsedName(inp_pvld,[Default]), UsedName(getModulePorts,[Default]), UsedName(suggestName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(desiredName,[Default]), UsedName(getPublicFields,[Default]), UsedName(override_reset,[Default]), UsedName(_id,[Default]), UsedName(inp_prdy,[Default]), UsedName(addPostnameHook,[Default]), UsedName(_component,[Default]), UsedName(name,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(addCommand,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(_closed,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(out_pvld,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(IW,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(ne,[Default]))) invalidates 1 classes due to The nvdla.NV_NVDLA_SDP_CORE_pack has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(portsContains,[Default]), UsedName(toString,[Default]), UsedName(circuitName,[Default]), UsedName(wait,[Default]), UsedName(override_clock,[Default]), UsedName(toNamed,[Default]), UsedName(clone,[Default]), UsedName(parentModName,[Default]), UsedName(getClass,[Default]), UsedName(IO,[Default]), UsedName(getRef,[Default]), UsedName(inp_data,[Default]), UsedName(_onModuleClose,[Default]), UsedName(io,[Default]), UsedName(_namespace,[Default]), UsedName(_parent,[Default]), UsedName(parentPathName,[Default]), UsedName(instanceName,[Default]), UsedName(OW,[Default]), UsedName(nameIds,[Default]), UsedName(==,[Default]), UsedName(portsSize,[Default]), UsedName(RATIO,[Default]), UsedName($init$,[Default]), UsedName(nvdla;NV_NVDLA_SDP_CORE_pack;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName(addId,[Default]), UsedName(annotate,[Default]), UsedName(getCommands,[Default]), UsedName(clock,[Default]), UsedName($isInstanceOf,[Default]), UsedName(getPorts,[Default]), UsedName(out_data,[Default]), UsedName(generateComponent,[Default]), UsedName(NV_NVDLA_SDP_CORE_pack,[Default]), UsedName(reset,[Default]), UsedName(nvdla_core_clk,[Default]), UsedName(getIds,[Default]), UsedName(out_prdy,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(forceName,[Default]), UsedName(notifyAll,[Default]), UsedName(pathName,[Default]), UsedName(##,[Default]), UsedName(inp_pvld,[Default]), UsedName(getModulePorts,[Default]), UsedName(suggestName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(desiredName,[Default]), UsedName(getPublicFields,[Default]), UsedName(override_reset,[Default]), UsedName(_id,[Default]), UsedName(inp_prdy,[Default]), UsedName(addPostnameHook,[Default]), UsedName(_component,[Default]), UsedName(name,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(addCommand,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(_closed,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(out_pvld,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(IW,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(ne,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(nvdla.NV_NVDLA_SDP_CORE_pack)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from nvdla.NV_NVDLA_SDP_HLS_relu...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(nvdla.NV_NVDLA_SDP_HLS_relu)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(nvdla.NV_NVDLA_SDP_HLS_relu)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(nvdla.NV_NVDLA_SDP_HLS_relu,ModifiedNames(changes = UsedName(portsContains,[Default]), UsedName(toString,[Default]), UsedName(circuitName,[Default]), UsedName(wait,[Default]), UsedName(override_clock,[Default]), UsedName(toNamed,[Default]), UsedName(clone,[Default]), UsedName(parentModName,[Default]), UsedName(getClass,[Default]), UsedName(IO,[Default]), UsedName(getRef,[Default]), UsedName(_onModuleClose,[Default]), UsedName(io,[Default]), UsedName(_namespace,[Default]), UsedName(_parent,[Default]), UsedName(parentPathName,[Default]), UsedName(instanceName,[Default]), UsedName(nameIds,[Default]), UsedName(==,[Default]), UsedName(portsSize,[Default]), UsedName($init$,[Default]), UsedName($asInstanceOf,[Default]), UsedName(addId,[Default]), UsedName(annotate,[Default]), UsedName(getCommands,[Default]), UsedName(clock,[Default]), UsedName($isInstanceOf,[Default]), UsedName(nvdla;NV_NVDLA_SDP_HLS_relu;init;,[Default]), UsedName(getPorts,[Default]), UsedName(generateComponent,[Default]), UsedName(reset,[Default]), UsedName(getIds,[Default]), UsedName(compileOptions,[Default]), UsedName(DATA_WIDTH,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(forceName,[Default]), UsedName(notifyAll,[Default]), UsedName(pathName,[Default]), UsedName(##,[Default]), UsedName(getModulePorts,[Default]), UsedName(suggestName,[Default]), UsedName(data_in,[Default]), UsedName(asInstanceOf,[Default]), UsedName(desiredName,[Default]), UsedName(getPublicFields,[Default]), UsedName(override_reset,[Default]), UsedName(_id,[Default]), UsedName(addPostnameHook,[Default]), UsedName(data_in_sign,[Default]), UsedName(_component,[Default]), UsedName(name,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(addCommand,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(data_out,[Default]), UsedName(_closed,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(NV_NVDLA_SDP_HLS_relu,[Default]), UsedName(ne,[Default]))) invalidates 1 classes due to The nvdla.NV_NVDLA_SDP_HLS_relu has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(portsContains,[Default]), UsedName(toString,[Default]), UsedName(circuitName,[Default]), UsedName(wait,[Default]), UsedName(override_clock,[Default]), UsedName(toNamed,[Default]), UsedName(clone,[Default]), UsedName(parentModName,[Default]), UsedName(getClass,[Default]), UsedName(IO,[Default]), UsedName(getRef,[Default]), UsedName(_onModuleClose,[Default]), UsedName(io,[Default]), UsedName(_namespace,[Default]), UsedName(_parent,[Default]), UsedName(parentPathName,[Default]), UsedName(instanceName,[Default]), UsedName(nameIds,[Default]), UsedName(==,[Default]), UsedName(portsSize,[Default]), UsedName($init$,[Default]), UsedName($asInstanceOf,[Default]), UsedName(addId,[Default]), UsedName(annotate,[Default]), UsedName(getCommands,[Default]), UsedName(clock,[Default]), UsedName($isInstanceOf,[Default]), UsedName(nvdla;NV_NVDLA_SDP_HLS_relu;init;,[Default]), UsedName(getPorts,[Default]), UsedName(generateComponent,[Default]), UsedName(reset,[Default]), UsedName(getIds,[Default]), UsedName(compileOptions,[Default]), UsedName(DATA_WIDTH,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(forceName,[Default]), UsedName(notifyAll,[Default]), UsedName(pathName,[Default]), UsedName(##,[Default]), UsedName(getModulePorts,[Default]), UsedName(suggestName,[Default]), UsedName(data_in,[Default]), UsedName(asInstanceOf,[Default]), UsedName(desiredName,[Default]), UsedName(getPublicFields,[Default]), UsedName(override_reset,[Default]), UsedName(_id,[Default]), UsedName(addPostnameHook,[Default]), UsedName(data_in_sign,[Default]), UsedName(_component,[Default]), UsedName(name,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(addCommand,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(data_out,[Default]), UsedName(_closed,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(NV_NVDLA_SDP_HLS_relu,[Default]), UsedName(ne,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(nvdla.NV_NVDLA_SDP_HLS_relu)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from nvdla.NV_NVDLA_SDP_HLS_prelu...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(nvdla.NV_NVDLA_SDP_HLS_prelu)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(nvdla.NV_NVDLA_SDP_HLS_prelu)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(nvdla.NV_NVDLA_SDP_HLS_prelu,ModifiedNames(changes = UsedName(portsContains,[Default]), UsedName(toString,[Default]), UsedName(circuitName,[Default]), UsedName(wait,[Default]), UsedName(override_clock,[Default]), UsedName(toNamed,[Default]), UsedName(op_in,[Default]), UsedName(clone,[Default]), UsedName(parentModName,[Default]), UsedName(getClass,[Default]), UsedName(IO,[Default]), UsedName(getRef,[Default]), UsedName(_onModuleClose,[Default]), UsedName(io,[Default]), UsedName(_namespace,[Default]), UsedName(NV_NVDLA_SDP_HLS_prelu,[Default]), UsedName(_parent,[Default]), UsedName(parentPathName,[Default]), UsedName(instanceName,[Default]), UsedName(OUT_WIDTH,[Default]), UsedName(nameIds,[Default]), UsedName(==,[Default]), UsedName(portsSize,[Default]), UsedName($init$,[Default]), UsedName($asInstanceOf,[Default]), UsedName(addId,[Default]), UsedName(annotate,[Default]), UsedName(getCommands,[Default]), UsedName(clock,[Default]), UsedName(IN_WIDTH,[Default]), UsedName($isInstanceOf,[Default]), UsedName(getPorts,[Default]), UsedName(OP_WIDTH,[Default]), UsedName(generateComponent,[Default]), UsedName(reset,[Default]), UsedName(cfg_prelu_en,[Default]), UsedName(getIds,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(forceName,[Default]), UsedName(notifyAll,[Default]), UsedName(pathName,[Default]), UsedName(##,[Default]), UsedName(getModulePorts,[Default]), UsedName(suggestName,[Default]), UsedName(data_in,[Default]), UsedName(asInstanceOf,[Default]), UsedName(desiredName,[Default]), UsedName(getPublicFields,[Default]), UsedName(override_reset,[Default]), UsedName(_id,[Default]), UsedName(addPostnameHook,[Default]), UsedName(data_in_sign,[Default]), UsedName(_component,[Default]), UsedName(name,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(addCommand,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(data_out,[Default]), UsedName(_closed,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(nvdla;NV_NVDLA_SDP_HLS_prelu;init;,[Default]), UsedName(ne,[Default]))) invalidates 1 classes due to The nvdla.NV_NVDLA_SDP_HLS_prelu has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(portsContains,[Default]), UsedName(toString,[Default]), UsedName(circuitName,[Default]), UsedName(wait,[Default]), UsedName(override_clock,[Default]), UsedName(toNamed,[Default]), UsedName(op_in,[Default]), UsedName(clone,[Default]), UsedName(parentModName,[Default]), UsedName(getClass,[Default]), UsedName(IO,[Default]), UsedName(getRef,[Default]), UsedName(_onModuleClose,[Default]), UsedName(io,[Default]), UsedName(_namespace,[Default]), UsedName(NV_NVDLA_SDP_HLS_prelu,[Default]), UsedName(_parent,[Default]), UsedName(parentPathName,[Default]), UsedName(instanceName,[Default]), UsedName(OUT_WIDTH,[Default]), UsedName(nameIds,[Default]), UsedName(==,[Default]), UsedName(portsSize,[Default]), UsedName($init$,[Default]), UsedName($asInstanceOf,[Default]), UsedName(addId,[Default]), UsedName(annotate,[Default]), UsedName(getCommands,[Default]), UsedName(clock,[Default]), UsedName(IN_WIDTH,[Default]), UsedName($isInstanceOf,[Default]), UsedName(getPorts,[Default]), UsedName(OP_WIDTH,[Default]), UsedName(generateComponent,[Default]), UsedName(reset,[Default]), UsedName(cfg_prelu_en,[Default]), UsedName(getIds,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(forceName,[Default]), UsedName(notifyAll,[Default]), UsedName(pathName,[Default]), UsedName(##,[Default]), UsedName(getModulePorts,[Default]), UsedName(suggestName,[Default]), UsedName(data_in,[Default]), UsedName(asInstanceOf,[Default]), UsedName(desiredName,[Default]), UsedName(getPublicFields,[Default]), UsedName(override_reset,[Default]), UsedName(_id,[Default]), UsedName(addPostnameHook,[Default]), UsedName(data_in_sign,[Default]), UsedName(_component,[Default]), UsedName(name,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(addCommand,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(data_out,[Default]), UsedName(_closed,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(nvdla;NV_NVDLA_SDP_HLS_prelu;init;,[Default]), UsedName(ne,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(nvdla.NV_NVDLA_SDP_HLS_prelu)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set(cora.RED_CORA_MATRIX_v2m)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(cora.RED_CORA_MATRIX_v2m)[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set(cora.RED_CORA_MATRIX_v2m)[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 1 Scala source to C:\Users\yuda\Desktop\soDLA\target\scala-2.12\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.1.1:compile for Scala 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.1.1:compile for Scala 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 11f08b0f for Scala compiler version 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-deprecation[0m
[0m[[0m[0mdebug[0m] [0m[0m	-feature[0m
[0m[[0m[0mdebug[0m] [0m[0m	-unchecked[0m
[0m[[0m[0mdebug[0m] [0m[0m	-language:reflectiveCalls[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xsource:2.11[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Program Files\Java\jre1.8.0_191\lib\resources.jar;C:\Program Files\Java\jre1.8.0_191\lib\rt.jar;C:\Program Files\Java\jre1.8.0_191\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_191\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_191\lib\jce.jar;C:\Program Files\Java\jre1.8.0_191\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_191\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_191\classes;C:\Users\yuda\.sbt\boot\scala-2.12.4\lib\scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\yuda\Desktop\soDLA\target\scala-2.12\classes;C:\Users\yuda\.ivy2\cache\edu.berkeley.cs\chisel3_2.12\jars\chisel3_2.12-3.1.7.jar;C:\Users\yuda\.sbt\boot\scala-2.12.4\lib\scala-reflect.jar;C:\Users\yuda\.ivy2\cache\com.github.scopt\scopt_2.12\jars\scopt_2.12-3.7.0.jar;C:\Users\yuda\.ivy2\cache\edu.berkeley.cs\firrtl_2.12\jars\firrtl_2.12-1.1.7.jar;C:\Users\yuda\.ivy2\cache\org.antlr\antlr4\jars\antlr4-4.7.1.jar;C:\Users\yuda\.ivy2\cache\org.antlr\antlr4-runtime\jars\antlr4-runtime-4.7.1.jar;C:\Users\yuda\.ivy2\cache\org.antlr\antlr-runtime\jars\antlr-runtime-3.5.2.jar;C:\Users\yuda\.ivy2\cache\org.antlr\ST4\jars\ST4-4.0.8.jar;C:\Users\yuda\.ivy2\cache\org.abego.treelayout\org.abego.treelayout.core\bundles\org.abego.treelayout.core-1.0.3.jar;C:\Users\yuda\.ivy2\cache\org.glassfish\javax.json\bundles\javax.json-1.0.4.jar;C:\Users\yuda\.ivy2\cache\com.ibm.icu\icu4j\jars\icu4j-58.2.jar;C:\Users\yuda\.ivy2\cache\com.typesafe.scala-logging\scala-logging_2.12\bundles\scala-logging_2.12-3.7.2.jar;C:\Users\yuda\.ivy2\cache\org.slf4j\slf4j-api\jars\slf4j-api-1.7.25.jar;C:\Users\yuda\.ivy2\cache\ch.qos.logback\logback-classic\jars\logback-classic-1.2.3.jar;C:\Users\yuda\.ivy2\cache\ch.qos.logback\logback-core\jars\logback-core-1.2.3.jar;C:\Users\yuda\.ivy2\cache\net.jcazevedo\moultingyaml_2.12\jars\moultingyaml_2.12-0.4.0.jar;C:\Users\yuda\.ivy2\cache\com.github.nscala-time\nscala-time_2.12\jars\nscala-time_2.12-2.14.0.jar;C:\Users\yuda\.ivy2\cache\joda-time\joda-time\jars\joda-time-2.9.4.jar;C:\Users\yuda\.ivy2\cache\org.joda\joda-convert\jars\joda-convert-1.2.jar;C:\Users\yuda\.ivy2\cache\org.yaml\snakeyaml\bundles\snakeyaml-1.17.jar;C:\Users\yuda\.ivy2\cache\org.json4s\json4s-native_2.12\jars\json4s-native_2.12-3.5.3.jar;C:\Users\yuda\.ivy2\cache\com.thoughtworks.paranamer\paranamer\bundles\paranamer-2.8.jar;C:\Users\yuda\.ivy2\cache\org.scala-lang.modules\scala-xml_2.12\bundles\scala-xml_2.12-1.0.6.jar;C:\Users\yuda\.ivy2\cache\edu.berkeley.cs\chisel-iotesters_2.12\jars\chisel-iotesters_2.12-1.2.9.jar;C:\Users\yuda\.ivy2\cache\edu.berkeley.cs\firrtl-interpreter_2.12\jars\firrtl-interpreter_2.12-1.1.7.jar;C:\Users\yuda\.ivy2\cache\org.scalatest\scalatest_2.12\bundles\scalatest_2.12-3.0.1.jar;C:\Users\yuda\.ivy2\cache\org.scalactic\scalactic_2.12\bundles\scalactic_2.12-3.0.1.jar;C:\Users\yuda\.ivy2\cache\org.scala-lang.modules\scala-parser-combinators_2.12\bundles\scala-parser-combinators_2.12-1.0.4.jar;C:\Users\yuda\.ivy2\cache\org.scalacheck\scalacheck_2.12\jars\scalacheck_2.12-1.13.4.jar;C:\Users\yuda\.ivy2\cache\org.scala-sbt\test-interface\jars\test-interface-1.0.jar;C:\Users\yuda\.ivy2\cache\org.scala-lang.modules\scala-jline\bundles\scala-jline-2.12.1.jar;C:\Users\yuda\.ivy2\cache\org.fusesource.jansi\jansi\jars\jansi-1.11.jar;C:\Users\yuda\.ivy2\cache\edu.berkeley.cs\treadle_2.12\jars\treadle_2.12-1.0.5.jar;C:\Users\yuda\.ivy2\cache\org.json4s\json4s-jackson_2.12\jars\json4s-jackson_2.12-3.6.1.jar;C:\Users\yuda\.ivy2\cache\org.json4s\json4s-core_2.12\jars\json4s-core_2.12-3.6.1.jar;C:\Users\yuda\.ivy2\cache\org.json4s\json4s-ast_2.12\jars\json4s-ast_2.12-3.6.1.jar;C:\Users\yuda\.ivy2\cache\org.json4s\json4s-scalap_2.12\jars\json4s-scalap_2.12-3.6.1.jar;C:\Users\yuda\.ivy2\cache\com.fasterxml.jackson.core\jackson-databind\bundles\jackson-databind-2.9.6.jar;C:\Users\yuda\.ivy2\cache\com.fasterxml.jackson.core\jackson-annotations\bundles\jackson-annotations-2.9.0.jar;C:\Users\yuda\.ivy2\cache\com.fasterxml.jackson.core\jackson-core\bundles\jackson-core-2.9.6.jar;C:\Users\yuda\.ivy2\cache\edu.berkeley.cs\dsptools_2.12\jars\dsptools_2.12-1.1.6.jar;C:\Users\yuda\.ivy2\cache\org.typelevel\spire_2.12\jars\spire_2.12-0.14.1.jar;C:\Users\yuda\.ivy2\cache\org.typelevel\spire-macros_2.12\jars\spire-macros_2.12-0.14.1.jar;C:\Users\yuda\.ivy2\cache\org.typelevel\machinist_2.12\jars\machinist_2.12-0.6.1.jar;C:\Users\yuda\.ivy2\cache\org.typelevel\algebra_2.12\jars\algebra_2.12-0.7.0.jar;C:\Users\yuda\.ivy2\cache\org.typelevel\cats-kernel_2.12\jars\cats-kernel_2.12-0.9.0.jar;C:\Users\yuda\.ivy2\cache\org.scalanlp\breeze_2.12\jars\breeze_2.12-0.13.2.jar;C:\Users\yuda\.ivy2\cache\org.scalanlp\breeze-macros_2.12\jars\breeze-macros_2.12-0.13.2.jar;C:\Users\yuda\.ivy2\cache\com.github.fommil.netlib\core\jars\core-1.1.2.jar;C:\Users\yuda\.ivy2\cache\net.sourceforge.f2j\arpack_combined_all\jars\arpack_combined_all-0.1.jar;C:\Users\yuda\.ivy2\cache\net.sf.opencsv\opencsv\jars\opencsv-2.3.jar;C:\Users\yuda\.ivy2\cache\com.github.rwl\jtransforms\jars\jtransforms-2.4.0.jar;C:\Users\yuda\.ivy2\cache\junit\junit\jars\junit-4.8.2.jar;C:\Users\yuda\.ivy2\cache\org.apache.commons\commons-math3\jars\commons-math3-3.2.jar;C:\Users\yuda\.ivy2\cache\org.spire-math\spire_2.12\jars\spire_2.12-0.13.0.jar;C:\Users\yuda\.ivy2\cache\org.spire-math\spire-macros_2.12\jars\spire-macros_2.12-0.13.0.jar;C:\Users\yuda\.ivy2\cache\com.chuusai\shapeless_2.12\bundles\shapeless_2.12-2.3.2.jar;C:\Users\yuda\.ivy2\cache\org.typelevel\macro-compat_2.12\jars\macro-compat_2.12-1.1.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 1.193460266 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m

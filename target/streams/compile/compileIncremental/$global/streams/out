[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(C:\Users\yuda\Desktop\soDLA\src\main\scala\chisel-float\TesterMain.scala, \home\yuda\soDLA\src\main\scala\slibs\NV_NVDLA_fifo.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\matrix\C_CORA_MATRIX_predictP.scala, \home\yuda\soDLA\src\main\scala\nvdla\cdma\NV_NVDLA_CDMA_CVT_cell.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\matrix\C_CORA_MATRIX_core.scala, \home\yuda\soDLA\src\main\scala\cora\kf\C_CORA_gauss.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\kf\C_CORA_gauss.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\matrix\CORA_MATRIX_MUL_v2v_fp.scala, \home\yuda\soDLA\src\main\scala\nvdla\cmac\NV_NVDLA_CMAC_REG_single.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\matrix_lib\CORA_CMAC_CORE_mac3by3.scala, \home\yuda\soDLA\src\main\scala\nvdla\cdp\int_sum_block_tp1.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\matrix\FPU.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\planning\RED_CORA_cost_function.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\matrix\CORA_MATRIX_inverse.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\cdp\NV_NVDLA_CSC_dual_reg.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\csc\dl\NV_NVDLA_CSC_dl_input_package.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\matrix_lib\CORA_VECTOR_add.scala, \home\yuda\soDLA\src\main\scala\cora\matrix\FMA.scala, \home\yuda\soDLA\src\main\scala\cora\matrix\C_CORA_MATRIX_predictP.scala, \home\yuda\soDLA\src\main\scala\nvdla\cacc\NV_NVDLA_CACC_calculator.scala, \home\yuda\soDLA\src\main\scala\nvdla\glb\NV_NVDLA_GLB_csb.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\cmac\NV_NVDLA_CMAC_CORE_macfp.scala, \home\yuda\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_BRDMA_EG_ro.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\matrix\CORA_VECTOR_add.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\planning\RED_CORA_transition_function.scala, \home\yuda\soDLA\src\main\scala\nvdla\csc\NV_NVDLA_CSC_dl.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\kf\CORA_PRED_UPDATE_Q_noise.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\kf\CORA_PRED_PRECOMPUTE_dt.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\common\genericFIFO.scala, \home\yuda\soDLA\src\main\scala\nvdla\cfgrom\NV_NVDLA_CFGROM_rom.scala, \home\yuda\soDLA\src\main\scala\slibs\HLS_cdp_icvt.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\matrix_lib\CORA_MATRIX_MUL_v2v_for_verify.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\matrix\C_CORA_MATRIX_predictx_shareFMA.scala, \home\yuda\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_CORE_Y_lut.scala, \home\yuda\soDLA\src\main\scala\nvdla\glb\NV_NVDLA_GLB_CSB_reg.scala, \home\yuda\soDLA\src\main\scala\nvdla\cbuf\NV_NVDLA_CBUF_conf.scala, \home\yuda\soDLA\src\main\scala\nvdla\cbuf\NV_NVDLA_cbuf.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\matrix_lib\CORA_predictP.scala, \home\yuda\soDLA\src\main\scala\nvdla\cdp\int_sum_block.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\matrix\CORA_MATRIX_MUL_v2v_for_verify.scala, \home\yuda\soDLA\src\main\scala\nvdla\cmac\NV_NVDLA_cmac.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\matrix_lib\CORA_MATRIX_inverse.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\pred\CORA_PRED_Q.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\sdp\NV_NVDLA_SDP_BRDMA_EG_ro.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\matrix\CORA_predictP.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\planning\RED_CORA_second_cost_function.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\matrix\CORA_MATRIX_MUL_v2v_fp.1.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\matrix\CORA_MATRIX_core.scala, \home\yuda\soDLA\src\main\scala\examples\tovec.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\kf\CORA_Q.scala, \home\yuda\soDLA\src\main\scala\nvdla\cacc\NV_NVDLA_CACC_CALC_int8.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\chisel-float\FPMult.scala, \home\yuda\soDLA\src\main\scala\nvdla\csb_master\NV_NVDLA_CSB_MASTER_csb2falcon_fifo.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\cmac\CORA_CMAC_CORE_active.scala, \home\yuda\soDLA\src\main\scala\cora\matrix\C_CORA_MATRIX_core.scala, \home\yuda\soDLA\src\main\scala\nvdla\csc\NV_NVDLA_CSC_WL_dec.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\cora\matrix_lib\CORA_MATRIX_core.scala, \home\yuda\soDLA\src\main\scala\nvdla\cdma\NV_NVDLA_CDMA_DC_fifo.scala, \home\yuda\soDLA\src\main\scala\nvdla\csc\NV_NVDLA_CSC_wl.scala, \home\yuda\soDLA\src\main\scala\nvdla\cfgrom\NV_NVDLA_cfgrom.scala, \home\yuda\soDLA\src\main\scala\nvdla\cmac\NV_NVDLA_CMAC_reg.scala, \home\yuda\soDLA\src\main\scala\nvdla\cmac\NV_NVDLA_CMAC_REG_dual.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\cdp\NV_NVDLA_CDP_RDMA_reg.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\cdp\NV_NVDLA_CDP_RDMA_REG_dual.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\cdp\NV_NVDLA_CDP_RDMA_reg.scala, C:\Users\yuda\Desktop\soDLA\src\main\scala\nvdla\cdp\NV_NVDLA_CDP_RDMA_REG_dual.scala)[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 2 Scala sources to C:\Users\yuda\Desktop\soDLA\target\scala-2.12\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.1.1:compile for Scala 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.1.1:compile for Scala 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 554b37cc for Scala compiler version 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-deprecation[0m
[0m[[0m[0mdebug[0m] [0m[0m	-feature[0m
[0m[[0m[0mdebug[0m] [0m[0m	-unchecked[0m
[0m[[0m[0mdebug[0m] [0m[0m	-language:reflectiveCalls[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xsource:2.11[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Program Files\Java\jre1.8.0_191\lib\resources.jar;C:\Program Files\Java\jre1.8.0_191\lib\rt.jar;C:\Program Files\Java\jre1.8.0_191\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_191\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_191\lib\jce.jar;C:\Program Files\Java\jre1.8.0_191\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_191\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_191\classes;C:\Users\yuda\.sbt\boot\scala-2.12.4\lib\scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\yuda\Desktop\soDLA\target\scala-2.12\classes;C:\Users\yuda\.ivy2\cache\edu.berkeley.cs\chisel3_2.12\jars\chisel3_2.12-3.1.7.jar;C:\Users\yuda\.sbt\boot\scala-2.12.4\lib\scala-reflect.jar;C:\Users\yuda\.ivy2\cache\com.github.scopt\scopt_2.12\jars\scopt_2.12-3.7.0.jar;C:\Users\yuda\.ivy2\cache\edu.berkeley.cs\firrtl_2.12\jars\firrtl_2.12-1.1.7.jar;C:\Users\yuda\.ivy2\cache\org.antlr\antlr4\jars\antlr4-4.7.1.jar;C:\Users\yuda\.ivy2\cache\org.antlr\antlr4-runtime\jars\antlr4-runtime-4.7.1.jar;C:\Users\yuda\.ivy2\cache\org.antlr\antlr-runtime\jars\antlr-runtime-3.5.2.jar;C:\Users\yuda\.ivy2\cache\org.antlr\ST4\jars\ST4-4.0.8.jar;C:\Users\yuda\.ivy2\cache\org.abego.treelayout\org.abego.treelayout.core\bundles\org.abego.treelayout.core-1.0.3.jar;C:\Users\yuda\.ivy2\cache\org.glassfish\javax.json\bundles\javax.json-1.0.4.jar;C:\Users\yuda\.ivy2\cache\com.ibm.icu\icu4j\jars\icu4j-58.2.jar;C:\Users\yuda\.ivy2\cache\com.typesafe.scala-logging\scala-logging_2.12\bundles\scala-logging_2.12-3.7.2.jar;C:\Users\yuda\.ivy2\cache\org.slf4j\slf4j-api\jars\slf4j-api-1.7.25.jar;C:\Users\yuda\.ivy2\cache\ch.qos.logback\logback-classic\jars\logback-classic-1.2.3.jar;C:\Users\yuda\.ivy2\cache\ch.qos.logback\logback-core\jars\logback-core-1.2.3.jar;C:\Users\yuda\.ivy2\cache\net.jcazevedo\moultingyaml_2.12\jars\moultingyaml_2.12-0.4.0.jar;C:\Users\yuda\.ivy2\cache\com.github.nscala-time\nscala-time_2.12\jars\nscala-time_2.12-2.14.0.jar;C:\Users\yuda\.ivy2\cache\joda-time\joda-time\jars\joda-time-2.9.4.jar;C:\Users\yuda\.ivy2\cache\org.joda\joda-convert\jars\joda-convert-1.2.jar;C:\Users\yuda\.ivy2\cache\org.yaml\snakeyaml\bundles\snakeyaml-1.17.jar;C:\Users\yuda\.ivy2\cache\org.json4s\json4s-native_2.12\jars\json4s-native_2.12-3.5.3.jar;C:\Users\yuda\.ivy2\cache\com.thoughtworks.paranamer\paranamer\bundles\paranamer-2.8.jar;C:\Users\yuda\.ivy2\cache\org.scala-lang.modules\scala-xml_2.12\bundles\scala-xml_2.12-1.0.6.jar;C:\Users\yuda\.ivy2\cache\edu.berkeley.cs\chisel-iotesters_2.12\jars\chisel-iotesters_2.12-1.2.9.jar;C:\Users\yuda\.ivy2\cache\edu.berkeley.cs\firrtl-interpreter_2.12\jars\firrtl-interpreter_2.12-1.1.7.jar;C:\Users\yuda\.ivy2\cache\org.scalatest\scalatest_2.12\bundles\scalatest_2.12-3.0.1.jar;C:\Users\yuda\.ivy2\cache\org.scalactic\scalactic_2.12\bundles\scalactic_2.12-3.0.1.jar;C:\Users\yuda\.ivy2\cache\org.scala-lang.modules\scala-parser-combinators_2.12\bundles\scala-parser-combinators_2.12-1.0.4.jar;C:\Users\yuda\.ivy2\cache\org.scalacheck\scalacheck_2.12\jars\scalacheck_2.12-1.13.4.jar;C:\Users\yuda\.ivy2\cache\org.scala-sbt\test-interface\jars\test-interface-1.0.jar;C:\Users\yuda\.ivy2\cache\org.scala-lang.modules\scala-jline\bundles\scala-jline-2.12.1.jar;C:\Users\yuda\.ivy2\cache\org.fusesource.jansi\jansi\jars\jansi-1.11.jar;C:\Users\yuda\.ivy2\cache\edu.berkeley.cs\treadle_2.12\jars\treadle_2.12-1.0.5.jar;C:\Users\yuda\.ivy2\cache\org.json4s\json4s-jackson_2.12\jars\json4s-jackson_2.12-3.6.1.jar;C:\Users\yuda\.ivy2\cache\org.json4s\json4s-core_2.12\jars\json4s-core_2.12-3.6.1.jar;C:\Users\yuda\.ivy2\cache\org.json4s\json4s-ast_2.12\jars\json4s-ast_2.12-3.6.1.jar;C:\Users\yuda\.ivy2\cache\org.json4s\json4s-scalap_2.12\jars\json4s-scalap_2.12-3.6.1.jar;C:\Users\yuda\.ivy2\cache\com.fasterxml.jackson.core\jackson-databind\bundles\jackson-databind-2.9.6.jar;C:\Users\yuda\.ivy2\cache\com.fasterxml.jackson.core\jackson-annotations\bundles\jackson-annotations-2.9.0.jar;C:\Users\yuda\.ivy2\cache\com.fasterxml.jackson.core\jackson-core\bundles\jackson-core-2.9.6.jar;C:\Users\yuda\.ivy2\cache\edu.berkeley.cs\dsptools_2.12\jars\dsptools_2.12-1.1.6.jar;C:\Users\yuda\.ivy2\cache\org.typelevel\spire_2.12\jars\spire_2.12-0.14.1.jar;C:\Users\yuda\.ivy2\cache\org.typelevel\spire-macros_2.12\jars\spire-macros_2.12-0.14.1.jar;C:\Users\yuda\.ivy2\cache\org.typelevel\machinist_2.12\jars\machinist_2.12-0.6.1.jar;C:\Users\yuda\.ivy2\cache\org.typelevel\algebra_2.12\jars\algebra_2.12-0.7.0.jar;C:\Users\yuda\.ivy2\cache\org.typelevel\cats-kernel_2.12\jars\cats-kernel_2.12-0.9.0.jar;C:\Users\yuda\.ivy2\cache\org.scalanlp\breeze_2.12\jars\breeze_2.12-0.13.2.jar;C:\Users\yuda\.ivy2\cache\org.scalanlp\breeze-macros_2.12\jars\breeze-macros_2.12-0.13.2.jar;C:\Users\yuda\.ivy2\cache\com.github.fommil.netlib\core\jars\core-1.1.2.jar;C:\Users\yuda\.ivy2\cache\net.sourceforge.f2j\arpack_combined_all\jars\arpack_combined_all-0.1.jar;C:\Users\yuda\.ivy2\cache\net.sf.opencsv\opencsv\jars\opencsv-2.3.jar;C:\Users\yuda\.ivy2\cache\com.github.rwl\jtransforms\jars\jtransforms-2.4.0.jar;C:\Users\yuda\.ivy2\cache\junit\junit\jars\junit-4.8.2.jar;C:\Users\yuda\.ivy2\cache\org.apache.commons\commons-math3\jars\commons-math3-3.2.jar;C:\Users\yuda\.ivy2\cache\org.spire-math\spire_2.12\jars\spire_2.12-0.13.0.jar;C:\Users\yuda\.ivy2\cache\org.spire-math\spire-macros_2.12\jars\spire-macros_2.12-0.13.0.jar;C:\Users\yuda\.ivy2\cache\com.chuusai\shapeless_2.12\bundles\shapeless_2.12-2.3.2.jar;C:\Users\yuda\.ivy2\cache\org.typelevel\macro-compat_2.12\jars\macro-compat_2.12-1.1.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 6.778487309 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from nvdla.NV_NVDLA_CDP_RDMA_regDriver...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(nvdla.NV_NVDLA_CDP_RDMA_regDriver)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(nvdla.NV_NVDLA_CDP_RDMA_regDriver)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(nvdla.NV_NVDLA_CDP_RDMA_regDriver,ModifiedNames(changes = UsedName(synchronized,[Default]), UsedName($init$,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getClass,[Default]), UsedName(delayedInit,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(NV_NVDLA_CDP_RDMA_regDriver,[Default]), UsedName(asInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(main,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(args,[Default]), UsedName(executionStart,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The nvdla.NV_NVDLA_CDP_RDMA_regDriver has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(synchronized,[Default]), UsedName($init$,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getClass,[Default]), UsedName(delayedInit,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(NV_NVDLA_CDP_RDMA_regDriver,[Default]), UsedName(asInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(main,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(args,[Default]), UsedName(executionStart,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(nvdla.NV_NVDLA_CDP_RDMA_regDriver)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from nvdla.NV_NVDLA_CDP_RDMA_reg...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(nvdla.NV_NVDLA_CDP_RDMA_reg)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(nvdla.NV_NVDLA_CDP_RDMA_reg)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(nvdla.NV_NVDLA_CDP_RDMA_reg,ModifiedNames(changes = UsedName(nameIds,[Default]), UsedName(synchronized,[Default]), UsedName(dp2reg_done,[Default]), UsedName(reg2dp_cya,[Default]), UsedName(reset,[Default]), UsedName(reg2dp_width,[Default]), UsedName($init$,[Default]), UsedName(name,[Default]), UsedName(addPostnameHook,[Default]), UsedName(csb2cdp_rdma_req_pd,[Default]), UsedName(!=,[Default]), UsedName(reg2dp_dma_en,[Default]), UsedName(reg2dp_src_base_addr_high,[Default]), UsedName($isInstanceOf,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(dp2reg_d1_perf_read_stall,[Default]), UsedName(eq,[Default]), UsedName(getCommands,[Default]), UsedName(reg2dp_src_ram_type,[Default]), UsedName(getClass,[Default]), UsedName(_parent,[Default]), UsedName(forceName,[Default]), UsedName(instanceName,[Default]), UsedName(cdp_rdma2csb_resp_pd,[Default]), UsedName(getIds,[Default]), UsedName(reg2dp_channel,[Default]), UsedName(reg2dp_src_line_stride,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(getPorts,[Default]), UsedName(desiredName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(circuitName,[Default]), UsedName(generateComponent,[Default]), UsedName(hashCode,[Default]), UsedName(reg2dp_input_data,[Default]), UsedName(nvdla_core_clk,[Default]), UsedName(_onModuleClose,[Default]), UsedName(reg2dp_height,[Default]), UsedName(dp2reg_d0_perf_read_stall,[Default]), UsedName(equals,[Default]), UsedName(_id,[Default]), UsedName(parentModName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(IO,[Default]), UsedName(clock,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(addCommand,[Default]), UsedName(override_reset,[Default]), UsedName(io,[Default]), UsedName(toNamed,[Default]), UsedName(reg2dp_op_en,[Default]), UsedName(parentPathName,[Default]), UsedName($asInstanceOf,[Default]), UsedName(suggestName,[Default]), UsedName(override_clock,[Default]), UsedName(annotate,[Default]), UsedName(getPublicFields,[Default]), UsedName(slcg_op_en,[Default]), UsedName(_component,[Default]), UsedName(setRef,[Default]), UsedName(portsSize,[Default]), UsedName(cdp_rdma2csb_resp_valid,[Default]), UsedName(getModulePorts,[Default]), UsedName(notify,[Default]), UsedName(addId,[Default]), UsedName(finalize,[Default]), UsedName(initializeInParent,[Default]), UsedName(reg2dp_src_surface_stride,[Default]), UsedName(##,[Default]), UsedName(nvdla;NV_NVDLA_CDP_RDMA_reg;init;,[Default]), UsedName(_closed,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(_namespace,[Default]), UsedName(csb2cdp_rdma_req_prdy,[Default]), UsedName(ne,[Default]), UsedName(NV_NVDLA_CDP_RDMA_reg,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(pathName,[Default]), UsedName(csb2cdp_rdma_req_pvld,[Default]), UsedName(==,[Default]), UsedName(reg2dp_src_base_addr_low,[Default]), UsedName(getRef,[Default]), UsedName(portsContains,[Default]), UsedName(compileOptions,[Default]))) invalidates 1 classes due to The nvdla.NV_NVDLA_CDP_RDMA_reg has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(nameIds,[Default]), UsedName(synchronized,[Default]), UsedName(dp2reg_done,[Default]), UsedName(reg2dp_cya,[Default]), UsedName(reset,[Default]), UsedName(reg2dp_width,[Default]), UsedName($init$,[Default]), UsedName(name,[Default]), UsedName(addPostnameHook,[Default]), UsedName(csb2cdp_rdma_req_pd,[Default]), UsedName(!=,[Default]), UsedName(reg2dp_dma_en,[Default]), UsedName(reg2dp_src_base_addr_high,[Default]), UsedName($isInstanceOf,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(dp2reg_d1_perf_read_stall,[Default]), UsedName(eq,[Default]), UsedName(getCommands,[Default]), UsedName(reg2dp_src_ram_type,[Default]), UsedName(getClass,[Default]), UsedName(_parent,[Default]), UsedName(forceName,[Default]), UsedName(instanceName,[Default]), UsedName(cdp_rdma2csb_resp_pd,[Default]), UsedName(getIds,[Default]), UsedName(reg2dp_channel,[Default]), UsedName(reg2dp_src_line_stride,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(getPorts,[Default]), UsedName(desiredName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(circuitName,[Default]), UsedName(generateComponent,[Default]), UsedName(hashCode,[Default]), UsedName(reg2dp_input_data,[Default]), UsedName(nvdla_core_clk,[Default]), UsedName(_onModuleClose,[Default]), UsedName(reg2dp_height,[Default]), UsedName(dp2reg_d0_perf_read_stall,[Default]), UsedName(equals,[Default]), UsedName(_id,[Default]), UsedName(parentModName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(IO,[Default]), UsedName(clock,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(addCommand,[Default]), UsedName(override_reset,[Default]), UsedName(io,[Default]), UsedName(toNamed,[Default]), UsedName(reg2dp_op_en,[Default]), UsedName(parentPathName,[Default]), UsedName($asInstanceOf,[Default]), UsedName(suggestName,[Default]), UsedName(override_clock,[Default]), UsedName(annotate,[Default]), UsedName(getPublicFields,[Default]), UsedName(slcg_op_en,[Default]), UsedName(_component,[Default]), UsedName(setRef,[Default]), UsedName(portsSize,[Default]), UsedName(cdp_rdma2csb_resp_valid,[Default]), UsedName(getModulePorts,[Default]), UsedName(notify,[Default]), UsedName(addId,[Default]), UsedName(finalize,[Default]), UsedName(initializeInParent,[Default]), UsedName(reg2dp_src_surface_stride,[Default]), UsedName(##,[Default]), UsedName(nvdla;NV_NVDLA_CDP_RDMA_reg;init;,[Default]), UsedName(_closed,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(_namespace,[Default]), UsedName(csb2cdp_rdma_req_prdy,[Default]), UsedName(ne,[Default]), UsedName(NV_NVDLA_CDP_RDMA_reg,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(pathName,[Default]), UsedName(csb2cdp_rdma_req_pvld,[Default]), UsedName(==,[Default]), UsedName(reg2dp_src_base_addr_low,[Default]), UsedName(getRef,[Default]), UsedName(portsContains,[Default]), UsedName(compileOptions,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(nvdla.NV_NVDLA_CDP_RDMA_reg)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from nvdla.NV_NVDLA_CDP_RDMA_REG_dual...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(nvdla.NV_NVDLA_CDP_RDMA_REG_dual)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(nvdla.NV_NVDLA_CDP_RDMA_REG_dual)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of nvdla.NV_NVDLA_CDP_RDMA_reg: Set(UsedName(input_data,[Default]), UsedName(channel,[Default]), UsedName(nvdla;NV_NVDLA_CDP_RDMA_REG_dual;init;,[Default]), UsedName(cya,[Default]), UsedName(op_en,[Default]), UsedName(src_base_addr_high,[Default]), UsedName(src_line_stride,[Default]), UsedName(nvdla_core_clk,[Default]), UsedName(NV_NVDLA_CDP_RDMA_REG_dual,[Default]), UsedName(reg_rd_data,[Default]), UsedName(reg_wr_en,[Default]), UsedName(perf_read_stall,[Default]), UsedName(IO,[Default]), UsedName(src_surface_stride,[Default]), UsedName(reg_wr_data,[Default]), UsedName(io,[Default]), UsedName(height,[Default]), UsedName(dma_en,[Default]), UsedName(src_ram_type,[Default]), UsedName(reg_offset,[Default]), UsedName(op_en_trigger,[Default]), UsedName(src_base_addr_low,[Default]), UsedName(cdp_width,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(nvdla.NV_NVDLA_CDP_RDMA_REG_dual,ModifiedNames(changes = UsedName(nameIds,[Default]), UsedName(synchronized,[Default]), UsedName(reset,[Default]), UsedName($init$,[Default]), UsedName(name,[Default]), UsedName(addPostnameHook,[Default]), UsedName(!=,[Default]), UsedName(input_data,[Default]), UsedName($isInstanceOf,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(channel,[Default]), UsedName(eq,[Default]), UsedName(getCommands,[Default]), UsedName(nvdla;NV_NVDLA_CDP_RDMA_REG_dual;init;,[Default]), UsedName(cya,[Default]), UsedName(getClass,[Default]), UsedName(_parent,[Default]), UsedName(forceName,[Default]), UsedName(instanceName,[Default]), UsedName(getIds,[Default]), UsedName(op_en,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(getPorts,[Default]), UsedName(src_base_addr_high,[Default]), UsedName(desiredName,[Default]), UsedName(src_line_stride,[Default]), UsedName(asInstanceOf,[Default]), UsedName(circuitName,[Default]), UsedName(generateComponent,[Default]), UsedName(hashCode,[Default]), UsedName(nvdla_core_clk,[Default]), UsedName(NV_NVDLA_CDP_RDMA_REG_dual,[Default]), UsedName(_onModuleClose,[Default]), UsedName(reg_rd_data,[Default]), UsedName(reg_wr_en,[Default]), UsedName(perf_read_stall,[Default]), UsedName(equals,[Default]), UsedName(_id,[Default]), UsedName(parentModName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(IO,[Default]), UsedName(clock,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(addCommand,[Default]), UsedName(src_surface_stride,[Default]), UsedName(reg_wr_data,[Default]), UsedName(override_reset,[Default]), UsedName(io,[Default]), UsedName(toNamed,[Default]), UsedName(height,[Default]), UsedName(parentPathName,[Default]), UsedName(dma_en,[Default]), UsedName($asInstanceOf,[Default]), UsedName(suggestName,[Default]), UsedName(override_clock,[Default]), UsedName(annotate,[Default]), UsedName(getPublicFields,[Default]), UsedName(_component,[Default]), UsedName(setRef,[Default]), UsedName(portsSize,[Default]), UsedName(src_ram_type,[Default]), UsedName(getModulePorts,[Default]), UsedName(notify,[Default]), UsedName(addId,[Default]), UsedName(finalize,[Default]), UsedName(initializeInParent,[Default]), UsedName(##,[Default]), UsedName(_closed,[Default]), UsedName(reg_offset,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(_namespace,[Default]), UsedName(ne,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(op_en_trigger,[Default]), UsedName(pathName,[Default]), UsedName(src_base_addr_low,[Default]), UsedName(cdp_width,[Default]), UsedName(==,[Default]), UsedName(getRef,[Default]), UsedName(portsContains,[Default]), UsedName(compileOptions,[Default]))) invalidates 2 classes due to The nvdla.NV_NVDLA_CDP_RDMA_REG_dual has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(nameIds,[Default]), UsedName(synchronized,[Default]), UsedName(reset,[Default]), UsedName($init$,[Default]), UsedName(name,[Default]), UsedName(addPostnameHook,[Default]), UsedName(!=,[Default]), UsedName(input_data,[Default]), UsedName($isInstanceOf,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(channel,[Default]), UsedName(eq,[Default]), UsedName(getCommands,[Default]), UsedName(nvdla;NV_NVDLA_CDP_RDMA_REG_dual;init;,[Default]), UsedName(cya,[Default]), UsedName(getClass,[Default]), UsedName(_parent,[Default]), UsedName(forceName,[Default]), UsedName(instanceName,[Default]), UsedName(getIds,[Default]), UsedName(op_en,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(getPorts,[Default]), UsedName(src_base_addr_high,[Default]), UsedName(desiredName,[Default]), UsedName(src_line_stride,[Default]), UsedName(asInstanceOf,[Default]), UsedName(circuitName,[Default]), UsedName(generateComponent,[Default]), UsedName(hashCode,[Default]), UsedName(nvdla_core_clk,[Default]), UsedName(NV_NVDLA_CDP_RDMA_REG_dual,[Default]), UsedName(_onModuleClose,[Default]), UsedName(reg_rd_data,[Default]), UsedName(reg_wr_en,[Default]), UsedName(perf_read_stall,[Default]), UsedName(equals,[Default]), UsedName(_id,[Default]), UsedName(parentModName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(IO,[Default]), UsedName(clock,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(addCommand,[Default]), UsedName(src_surface_stride,[Default]), UsedName(reg_wr_data,[Default]), UsedName(override_reset,[Default]), UsedName(io,[Default]), UsedName(toNamed,[Default]), UsedName(height,[Default]), UsedName(parentPathName,[Default]), UsedName(dma_en,[Default]), UsedName($asInstanceOf,[Default]), UsedName(suggestName,[Default]), UsedName(override_clock,[Default]), UsedName(annotate,[Default]), UsedName(getPublicFields,[Default]), UsedName(_component,[Default]), UsedName(setRef,[Default]), UsedName(portsSize,[Default]), UsedName(src_ram_type,[Default]), UsedName(getModulePorts,[Default]), UsedName(notify,[Default]), UsedName(addId,[Default]), UsedName(finalize,[Default]), UsedName(initializeInParent,[Default]), UsedName(##,[Default]), UsedName(_closed,[Default]), UsedName(reg_offset,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(_namespace,[Default]), UsedName(ne,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(op_en_trigger,[Default]), UsedName(pathName,[Default]), UsedName(src_base_addr_low,[Default]), UsedName(cdp_width,[Default]), UsedName(==,[Default]), UsedName(getRef,[Default]), UsedName(portsContains,[Default]), UsedName(compileOptions,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(nvdla.NV_NVDLA_CDP_RDMA_REG_dual)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(nvdla.NV_NVDLA_CDP_RDMA_reg)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m

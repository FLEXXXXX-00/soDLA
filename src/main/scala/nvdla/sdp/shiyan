val lut_lo_hit_sum_tmp = lut_in_lo_hit.reduce(_+_)
val lut_lo_hit_sum = lut_lo_hit_sum_tmp.asUInt(5.W)
val lut_lo_hit_cnt = Wire(UInt(32.W))

val perf_lut_lo_hit_add = Mux(lut_lo_hit_cnt.andR, "b0".asUInt(5.W), lut_lo_hit_sum)
val perf_lut_lo_hit_sub = false.B
io.dp2reg_lut_lo_hit := lut_lo_hit_cnt

val perf_lut_lo_hit_adv = perf_lut_lo_hit_add =/= perf_lut_lo_hit_sub

// cnt logic
val perf_lut_lo_hit_cnt_cur = RegInit("b0".asUInt(32.W))
val perf_lut_lo_hit_cnt_ext = Wire(UInt(34.W))
val perf_lut_lo_hit_cnt_mod = Wire(UInt(34.W))
val perf_lut_lo_hit_cnt_new = Wire(UInt(34.W))
val perf_lut_lo_hit_cnt_nxt = Wire(UInt(34.W))

perf_lut_lo_hit_cnt_ext := perf_lut_lo_hit_cnt_cur
perf_lut_lo_hit_cnt_mod := perf_lut_lo_hit_cnt_cur +& perf_lut_lo_hit_add -& perf_lut_lo_hit_sub
perf_lut_lo_hit_cnt_new := Mux(perf_lut_lo_hit_adv, perf_lut_lo_hit_cnt_mod, perf_lut_lo_hit_cnt_ext)
perf_lut_lo_hit_cnt_nxt := Mux(op_en_load, "b0".asUInt(34.W), perf_lut_lo_hit_cnt_new)

when(io.reg2dp_perf_lut_en){
    perf_lut_lo_hit_cnt_cur := perf_lut_lo_hit_cnt_nxt(31, 0)
}

lut_lo_hit_cnt := perf_lut_lo_hit_cnt_cur